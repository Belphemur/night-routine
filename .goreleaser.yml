# .goreleaser.yml
version: 2
project_name: night-routine

# Configures the release process on GitHub
# https://goreleaser.com/customization/release/
release:
  github:
    owner: belphemur
    name: night-routine
  include_meta: true
  # draft: false # Default is false
  # prerelease: auto # Default is auto
  # mode: replace # Default is append

# Configures the changelog generation
# https://goreleaser.com/customization/changelog/
changelog:
  sort: asc
  use: github
  format: "{{.SHA}}: {{.Message}} (@{{.AuthorUsername}})"
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Performance"
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2

# Hooks to run before the build process starts
# https://goreleaser.com/customization/hooks/
before:
  hooks:
    - go mod tidy
    # - go generate ./... # Add if you use go generate

# Configures the Go build process
# https://goreleaser.com/customization/build/
builds:
  - id: night-routine
    main: ./cmd/night-routine
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    # ensures mod timestamp to be the commit timestamp
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      # trims path
      - -trimpath
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{ .CommitDate }} # Use CommitDate from Git
    env:
      - CGO_ENABLED=0 # Disable CGO

# Configures the binary archive generation
# https://goreleaser.com/customization/archive/
archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}

# Configures the checksum file generation
# https://goreleaser.com/customization/checksum/
checksum:
  name_template: "checksums.txt"

# Creates a source code archive (tar.gz and zip)
# https://goreleaser.com/customization/source/
source:
  enabled: true

# Configures Go Modules settings
# https://goreleaser.com/customization/gomod/
gomod:
  # Uses the Go module proxy to download dependencies.
  proxy: true

# Change the digests filename for attestation
# https://goreleaser.com/customization/docker_digest/
docker_digest:
  name_template: "digests.txt"

# Creates SBOMs (Software Bill of Materials)
# https://goreleaser.com/customization/sbom/
sboms:
  - id: archive # Default ID for archive SBOMs
    artifacts: archive # Generate SBOMs for binary archives using Syft
  - id: source # Unique ID for source SBOM
    artifacts: source # Generate SBOM for the source code archive

# Creates Docker images and pushes them to registries using Docker v2 API
# https://goreleaser.com/customization/docker/
dockers_v2:
  - id: night-routine-image
    ids:
      - night-routine
    platforms:
      - linux/amd64
      - linux/arm64
    images:
      - "ghcr.io/belphemur/night-routine"
    tags:
      - "{{ .Version }}"
      - latest
    annotations:
      "org.opencontainers.image.description": "A Go application that manages night routine scheduling between two parents, with Google Calendar integration for automated event creation."
      "org.opencontainers.image.created": "{{.Date}}"
      "org.opencontainers.image.name": "{{.ProjectName}}"
      "org.opencontainers.image.revision": "{{.FullCommit}}"
      "org.opencontainers.image.version": "{{.Version}}"
      "org.opencontainers.image.source": "{{.GitURL}}"
    labels:
      "org.opencontainers.image.created": "{{.Date}}"
      "org.opencontainers.image.name": "{{.ProjectName}}"
      "org.opencontainers.image.revision": "{{.FullCommit}}"
      "org.opencontainers.image.version": "{{.Version}}"
      "org.opencontainers.image.source": "{{.GitURL}}"
      "org.opencontainers.image.description": "A Go application that manages night routine scheduling between two parents, with Google Calendar integration for automated event creation."
