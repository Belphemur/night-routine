{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Night Routine Scheduler","text":"<p>A Go application that manages night routine scheduling between two parents, with Google Calendar integration for automated event creation.</p>"},{"location":"#overview","title":"Overview","text":"<p>Night Routine Scheduler is designed to help parents fairly distribute night routine duties. It features an advanced fairness algorithm, Google Calendar integration, and a responsive web interface for easy management.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Get started quickly using our pre-built Docker images:</p> DockerDocker Compose <pre><code># Pull the latest release\ndocker pull ghcr.io/belphemur/night-routine:latest\n\n# Run the container\ndocker run \\\n  -e GOOGLE_OAUTH_CLIENT_ID=your-client-id \\\n  -e GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret \\\n  -e PORT=8080 \\\n  -e CONFIG_FILE=/app/config/routine.toml \\\n  -v /path/to/config:/app/config \\\n  -v /path/to/data:/app/data \\\n  -p 8080:8080 \\\n  ghcr.io/belphemur/night-routine:latest\n</code></pre> <pre><code># Download docker-compose.yml from the repository\nwget https://raw.githubusercontent.com/Belphemur/night-routine/main/docker-compose.yml\n\n# Create the config directory\nmkdir -p config\ncp configs/routine.toml config/\n\n# Edit the configuration file\nnano config/routine.toml\n\n# Edit docker-compose.yml to set your environment variables\nnano docker-compose.yml\n\n# Start the service\ndocker-compose up -d\n</code></pre> <p>Security Features</p> <p>Docker images are signed using Sigstore Cosign and include SBOM attestations for enhanced security.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li> Advanced Fairness Algorithm - Multiple decision criteria ensure fair distribution</li> <li> Google Calendar Integration - Automatic event creation with OAuth2 authentication</li> <li> Responsive Web Interface - Clean UI optimized for desktop and mobile</li> <li> SQLite Storage - Persistent data with WAL mode for better concurrency</li> <li> Docker Support - Multi-architecture images (amd64, arm64)</li> <li> Real-time Webhooks - Instant calendar change notifications</li> </ul>"},{"location":"#screenshots","title":"Screenshots","text":""},{"location":"#setup-screen","title":"Setup Screen","text":"<p>Initial setup screen where you connect to Google Calendar. Shows authentication status and provides quick access to calendar selection, manual sync, and statistics.</p>"},{"location":"#calendar-selection","title":"Calendar Selection","text":"<p>Select which Google Calendar to use for night routine events. Choose from your available calendars.</p>"},{"location":"#next-steps","title":"Next Steps","text":"<ul> <li>Learn about all features</li> <li>Install with Docker</li> <li>Configure the application</li> <li>Complete first-time setup</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is open source and available under the AGPLv3 License.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>Night Routine Scheduler provides a RESTful API for managing night routine assignments and Google Calendar integration.</p>"},{"location":"api-reference/#base-url","title":"Base URL","text":"<pre><code>http://localhost:8080\n</code></pre> <p>Replace with your configured <code>app_url</code>.</p>"},{"location":"api-reference/#authentication","title":"Authentication","text":"<p>Most endpoints require an authenticated Google OAuth session. Authentication is managed through cookies after the OAuth flow completes.</p>"},{"location":"api-reference/#oauth-flow","title":"OAuth Flow","text":"<pre><code>sequenceDiagram\n    participant User\n    participant App\n    participant Google\n\n    User-&gt;&gt;App: GET /auth\n    App-&gt;&gt;Google: Redirect to OAuth consent\n    User-&gt;&gt;Google: Approve permissions\n    Google-&gt;&gt;App: Redirect to /oauth/callback\n    App-&gt;&gt;App: Store tokens\n    App-&gt;&gt;User: Redirect to /calendars</code></pre>"},{"location":"api-reference/#endpoints","title":"Endpoints","text":""},{"location":"api-reference/#authentication_1","title":"Authentication","text":""},{"location":"api-reference/#get-auth","title":"<code>GET /auth</code>","text":"<p>Initiates the Google OAuth2 authentication flow.</p> <p>Request: <pre><code>GET /auth HTTP/1.1\nHost: localhost:8080\n</code></pre></p> <p>Response: <pre><code>HTTP/1.1 302 Found\nLocation: https://accounts.google.com/o/oauth2/v2/auth?...\n</code></pre></p> <p>Redirects to: Google OAuth consent screen</p> <p>After authorization: Redirects to <code>/oauth/callback</code></p>"},{"location":"api-reference/#get-oauthcallback","title":"<code>GET /oauth/callback</code>","text":"<p>OAuth2 callback endpoint. Handles the response from Google after user authorization.</p> <p>Request: <pre><code>GET /oauth/callback?code=AUTH_CODE&amp;state=STATE HTTP/1.1\nHost: localhost:8080\n</code></pre></p> <p>Query Parameters:</p> Parameter Type Description <code>code</code> string Authorization code from Google <code>state</code> string State parameter for CSRF protection <p>Response: <pre><code>HTTP/1.1 302 Found\nLocation: /calendars\nSet-Cookie: session=...; Path=/; HttpOnly\n</code></pre></p> <p>Redirects to: <code>/calendars</code> (calendar selection page)</p>"},{"location":"api-reference/#calendar-management","title":"Calendar Management","text":""},{"location":"api-reference/#get-calendars","title":"<code>GET /calendars</code>","text":"<p>Lists all available Google Calendars and allows selection.</p> <p>Request: <pre><code>GET /calendars HTTP/1.1\nHost: localhost:8080\nCookie: session=...\n</code></pre></p> <p>Response: <pre><code>HTTP/1.1 200 OK\nContent-Type: text/html\n\n&lt;html&gt;\n  &lt;!-- Calendar selection page --&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Authentication: Required</p> <p>Response: HTML page with calendar list</p>"},{"location":"api-reference/#post-calendarsselect","title":"<code>POST /calendars/select</code>","text":"<p>Selects a Google Calendar for night routine events.</p> <p>Request: <pre><code>POST /calendars/select HTTP/1.1\nHost: localhost:8080\nCookie: session=...\nContent-Type: application/x-www-form-urlencoded\n\ncalendar_id=primary\n</code></pre></p> <p>Form Parameters:</p> Parameter Type Required Description <code>calendar_id</code> string Yes Google Calendar ID to use <p>Response: <pre><code>HTTP/1.1 302 Found\nLocation: /\n</code></pre></p> <p>Authentication: Required</p> <p>Actions: 1. Saves calendar selection to database 2. Sets up webhook notification channel 3. Creates initial night routine events 4. Redirects to home page</p>"},{"location":"api-reference/#home-page","title":"Home Page","text":""},{"location":"api-reference/#get","title":"<code>GET /</code>","text":"<p>Displays the main dashboard with the visual assignment calendar.</p> <p>Request: <pre><code>GET / HTTP/1.1\nHost: localhost:8080\nCookie: session=...\n</code></pre></p> <p>Response: <pre><code>HTTP/1.1 200 OK\nContent-Type: text/html\n\n&lt;html&gt;\n  &lt;!-- Home page with calendar view --&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Features: - Authentication status - Visual monthly calendar - Assignment details - Quick action buttons</p>"},{"location":"api-reference/#synchronization","title":"Synchronization","text":""},{"location":"api-reference/#post-sync","title":"<code>POST /sync</code>","text":"<p>Manually triggers a schedule synchronization.</p> <p>Request: <pre><code>POST /sync HTTP/1.1\nHost: localhost:8080\nCookie: session=...\n</code></pre></p> <p>Response: <pre><code>HTTP/1.1 302 Found\nLocation: /\n</code></pre></p> <p>Authentication: Required</p> <p>Actions: 1. Calculates new assignments based on fairness algorithm 2. Creates/updates Google Calendar events 3. Stores assignments in database 4. Redirects to home page</p> <p>Use Cases: - After configuration changes - To fill in new dates - After manual event changes in Google Calendar</p>"},{"location":"api-reference/#statistics","title":"Statistics","text":""},{"location":"api-reference/#get-statistics","title":"<code>GET /statistics</code>","text":"<p>Displays monthly assignment statistics for the last 12 months.</p> <p>Request: <pre><code>GET /statistics HTTP/1.1\nHost: localhost:8080\nCookie: session=...\n</code></pre></p> <p>Response: <pre><code>HTTP/1.1 200 OK\nContent-Type: text/html\n\n&lt;html&gt;\n  &lt;!-- Statistics page with monthly breakdown --&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Authentication: Required</p> <p>Data Shown: - Monthly assignment counts per parent - Last 12 months - Total assignments per month</p>"},{"location":"api-reference/#webhooks","title":"Webhooks","text":""},{"location":"api-reference/#post-apiwebhookcalendar","title":"<code>POST /api/webhook/calendar</code>","text":"<p>Receives Google Calendar change notifications.</p> <p>Request: <pre><code>POST /api/webhook/calendar HTTP/1.1\nHost: your-public-url.com\nX-Goog-Channel-ID: channel-id\nX-Goog-Channel-Token: token\nX-Goog-Resource-ID: resource-id\nX-Goog-Resource-State: exists\nX-Goog-Resource-URI: https://www.googleapis.com/calendar/v3/calendars/...\nX-Goog-Message-Number: 1\n</code></pre></p> <p>Headers:</p> Header Description <code>X-Goog-Channel-ID</code> Notification channel ID <code>X-Goog-Channel-Token</code> Verification token <code>X-Goog-Resource-ID</code> Google Calendar resource ID <code>X-Goog-Resource-State</code> Resource state (exists, not_exists, sync) <code>X-Goog-Resource-URI</code> Calendar API endpoint <code>X-Goog-Message-Number</code> Sequential message number <p>Response: <pre><code>HTTP/1.1 200 OK\n</code></pre></p> <p>Authentication: Validated via channel token</p> <p>Actions: 1. Validates webhook headers 2. Fetches updated calendar events 3. Detects manual overrides 4. Updates database 5. Recalculates future assignments if needed</p> <p>Triggered When: - Calendar events are created - Events are modified - Events are deleted</p>"},{"location":"api-reference/#response-codes","title":"Response Codes","text":"Code Meaning Description 200 OK Successful request 302 Found Redirect (common for form submissions) 400 Bad Request Invalid request parameters 401 Unauthorized Not authenticated 403 Forbidden Authenticated but not authorized 404 Not Found Resource not found 500 Internal Server Error Server error"},{"location":"api-reference/#error-responses","title":"Error Responses","text":""},{"location":"api-reference/#html-error-pages","title":"HTML Error Pages","text":"<p>For browser requests, errors return HTML pages:</p> <pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Error&lt;/h1&gt;\n    &lt;p&gt;Error message here&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"api-reference/#common-errors","title":"Common Errors","text":""},{"location":"api-reference/#not-authenticated","title":"Not Authenticated","text":"<p>Response: <pre><code>HTTP/1.1 302 Found\nLocation: /auth\n</code></pre></p> <p>Solution: Complete OAuth authentication</p>"},{"location":"api-reference/#invalid-calendar-id","title":"Invalid Calendar ID","text":"<p>Response: <pre><code>HTTP/1.1 400 Bad Request\nContent-Type: text/html\n\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Error&lt;/h1&gt;\n    &lt;p&gt;Invalid calendar ID&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Solution: Select a valid calendar from the list</p>"},{"location":"api-reference/#webhook-validation-failed","title":"Webhook Validation Failed","text":"<p>Response: <pre><code>HTTP/1.1 403 Forbidden\n</code></pre></p> <p>Solution: Ensure webhook is properly configured with correct token</p>"},{"location":"api-reference/#rate-limiting","title":"Rate Limiting","text":"<p>The application does not implement rate limiting on its own endpoints. However, Google Calendar API has its own limits:</p> <ul> <li>Queries per day: 1,000,000</li> <li>Queries per 100 seconds per user: 10,000</li> </ul> <p>The application is well within these limits for normal use.</p>"},{"location":"api-reference/#webhook-setup","title":"Webhook Setup","text":"<p>Google Calendar webhooks require configuration in the application:</p>"},{"location":"api-reference/#configuration","title":"Configuration","text":"<pre><code>[app]\npublic_url = \"https://your-public-url.com\"  # Must be publicly accessible\n</code></pre>"},{"location":"api-reference/#channel-lifecycle","title":"Channel Lifecycle","text":"<ol> <li>Creation: Automatic when calendar is selected</li> <li>Expiration: Typically 7-30 days</li> <li>Renewal: Automatic before expiration</li> <li>Validation: Via channel token in webhook headers</li> </ol>"},{"location":"api-reference/#webhook-security","title":"Webhook Security","text":"<ul> <li>Channel Token: Random UUID for validation</li> <li>HTTPS: Required for production</li> <li>Header Validation: All required headers must be present</li> </ul>"},{"location":"api-reference/#examples","title":"Examples","text":""},{"location":"api-reference/#complete-oauth-flow","title":"Complete OAuth Flow","text":"<pre><code># 1. Start authentication\ncurl -L http://localhost:8080/auth\n\n# User completes OAuth in browser\n\n# 2. After callback, select calendar\ncurl -X POST http://localhost:8080/calendars/select \\\n  -b cookies.txt \\\n  -d \"calendar_id=primary\"\n\n# 3. View home page\ncurl -b cookies.txt http://localhost:8080/\n</code></pre>"},{"location":"api-reference/#manual-sync","title":"Manual Sync","text":"<pre><code>curl -X POST http://localhost:8080/sync \\\n  -b cookies.txt\n</code></pre>"},{"location":"api-reference/#view-statistics","title":"View Statistics","text":"<pre><code>curl -b cookies.txt http://localhost:8080/statistics\n</code></pre>"},{"location":"api-reference/#data-models","title":"Data Models","text":""},{"location":"api-reference/#assignment","title":"Assignment","text":"<p>Represents a night routine assignment.</p> <pre><code>type Assignment struct {\n    ID        int64     // Database ID\n    Date      time.Time // Assignment date\n    Parent    string    // Parent name (ParentA or ParentB)\n    Reason    string    // Decision reason\n    CreatedAt time.Time // Creation timestamp\n    UpdatedAt time.Time // Last update timestamp\n}\n</code></pre> <p>Decision Reasons: - <code>Unavailability</code> - <code>Total Count</code> - <code>Recent Count</code> - <code>Consecutive Limit</code> - <code>Alternating</code> - <code>Override</code></p>"},{"location":"api-reference/#oauth-token","title":"OAuth Token","text":"<p>Stores Google OAuth2 credentials.</p> <pre><code>type OAuthToken struct {\n    ID           int64     // Always 1 (single row)\n    AccessToken  string    // OAuth2 access token\n    RefreshToken string    // OAuth2 refresh token\n    TokenType    string    // Token type (Bearer)\n    Expiry       time.Time // Token expiration\n    CreatedAt    time.Time // Creation timestamp\n    UpdatedAt    time.Time // Last update timestamp\n}\n</code></pre>"},{"location":"api-reference/#calendar-settings","title":"Calendar Settings","text":"<p>Stores selected calendar information.</p> <pre><code>type CalendarSettings struct {\n    ID           int64     // Always 1 (single row)\n    CalendarID   string    // Google Calendar ID\n    CalendarName string    // Display name\n    CreatedAt    time.Time // Creation timestamp\n    UpdatedAt    time.Time // Last update timestamp\n}\n</code></pre>"},{"location":"api-reference/#notification-channel","title":"Notification Channel","text":"<p>Manages webhook notification channels.</p> <pre><code>type NotificationChannel struct {\n    ID         int64     // Database ID\n    ChannelID  string    // Google channel ID\n    ResourceID string    // Google resource ID\n    Expiration time.Time // Channel expiration\n    CreatedAt  time.Time // Creation timestamp\n    UpdatedAt  time.Time // Last update timestamp\n}\n</code></pre>"},{"location":"api-reference/#sdk-client-libraries","title":"SDK / Client Libraries","text":"<p>The application is primarily accessed through the web interface. For programmatic access, standard HTTP clients can be used:</p>"},{"location":"api-reference/#curl","title":"cURL","text":"<pre><code># Authenticate (in browser)\n# Then use cookies for subsequent requests\n\ncurl -b cookies.txt http://localhost:8080/sync -X POST\n</code></pre>"},{"location":"api-reference/#python","title":"Python","text":"<pre><code>import requests\n\nsession = requests.Session()\n\n# After OAuth (manual browser step)\n# Session cookies are automatically managed\n\nresponse = session.post('http://localhost:8080/sync')\nprint(response.status_code)\n</code></pre>"},{"location":"api-reference/#go","title":"Go","text":"<pre><code>import (\n    \"net/http\"\n    \"net/http/cookiejar\"\n)\n\njar, _ := cookiejar.New(nil)\nclient := &amp;http.Client{\n    Jar: jar,\n}\n\n// After OAuth (manual browser step)\nresp, err := client.Post(\"http://localhost:8080/sync\", \"\", nil)\n</code></pre>"},{"location":"api-reference/#changelog","title":"Changelog","text":"<p>API changes are documented in the project CHANGELOG.md.</p>"},{"location":"api-reference/#support","title":"Support","text":"<ul> <li>Issues: GitHub Issues</li> <li>Documentation: Full Documentation</li> </ul>"},{"location":"api-reference/#next-steps","title":"Next Steps","text":"<ul> <li>Understand the architecture</li> <li>Learn about webhooks</li> <li>Set up Google Calendar</li> </ul>"},{"location":"features/","title":"Features","text":"<p>Night Routine Scheduler offers a comprehensive set of features designed to make managing parental night routine duties simple, fair, and automated.</p>"},{"location":"features/#core-scheduling","title":"Core Scheduling","text":""},{"location":"features/#advanced-fairness-algorithm","title":"Advanced Fairness Algorithm","text":"<p>The application uses a sophisticated multi-criteria fairness algorithm to ensure equitable distribution of night routine duties:</p> <ul> <li>Total Assignment Count Balancing - Tracks lifetime assignments to maintain overall equality</li> <li>Recent Assignment Count Consideration - Prioritizes parents who haven't had recent assignments</li> <li>Consecutive Assignment Limits - Prevents one parent from being assigned too many nights in a row</li> <li>Alternating Pattern Maintenance - Strives to maintain a regular alternating schedule when possible</li> <li>Parent Availability Constraints - Respects configured unavailable days for each parent</li> <li>Decision Reason Tracking - Provides transparency into why each assignment was made</li> </ul>"},{"location":"features/#flexible-scheduling-options","title":"Flexible Scheduling Options","text":"<ul> <li>Configurable Update Frequencies - Choose from daily, weekly, or monthly updates</li> <li>Look-Ahead Scheduling - Schedule assignments for a configurable number of days in advance (default: 30 days)</li> <li>Manual Sync on Startup - Optionally synchronize schedules when the application starts (enabled by default)</li> <li>On-Demand Synchronization - Trigger manual schedule updates via the web interface</li> </ul>"},{"location":"features/#google-calendar-integration","title":"Google Calendar Integration","text":""},{"location":"features/#oauth2-authentication","title":"OAuth2 Authentication","text":"<ul> <li>Secure Token Management - OAuth2 tokens are encrypted and stored securely in the SQLite database</li> <li>Automatic Token Refresh - Tokens are automatically refreshed when they expire</li> <li>One-Time Setup - Authentication persists between application restarts</li> </ul>"},{"location":"features/#automatic-event-creation","title":"Automatic Event Creation","text":"<p>All calendar events are created with:</p> <ul> <li>Consistent Naming - Events follow the format: <code>[ParentName] \ud83c\udf03\ud83d\udc76Routine</code></li> <li>All-Day Events - Events span the entire day for simplicity</li> <li>Decision Reasons - Event descriptions include the reason for the assignment</li> <li>No Reminders - Events are created without reminders to avoid notification fatigue</li> <li>Intelligent Updates - Existing events are updated rather than deleted and recreated</li> </ul>"},{"location":"features/#webhook-support","title":"Webhook Support","text":"<ul> <li>Real-Time Notifications - Receive instant updates when calendar events change</li> <li>Automatic Channel Management - Notification channels are automatically created and renewed before expiration</li> <li>Manual Override Detection - Detects when event titles are manually edited in Google Calendar</li> </ul>"},{"location":"features/#manual-override-support","title":"Manual Override Support","text":"<p>Users can override assignments by editing event titles directly in Google Calendar:</p> <ul> <li>Configurable Threshold - Only accepts changes for events within a specified timeframe (default: 5 days in the past)</li> <li>Automatic Recalculation - Future assignments are recalculated to maintain fairness after manual overrides</li> <li>Transparent Tracking - Override decisions are tracked and visible in the interface</li> </ul>"},{"location":"features/#web-interface","title":"Web Interface","text":""},{"location":"features/#home-page","title":"Home Page","text":"<ul> <li>Authentication Status Display - Shows whether you're connected to Google Calendar</li> <li>Visual Monthly Assignment Calendar:<ul> <li>Color-coded assignments (blue for Parent A, orange for Parent B)</li> <li>Yellow highlight for today's date</li> <li>Gray background for padding days from previous/next months</li> <li>Assignment decision reasons (hover tooltip on desktop, always visible on mobile)</li> </ul> </li> <li>Quick Actions:<ul> <li>Connect Google Calendar button (when not authenticated)</li> <li>Change Calendar button (switch to a different calendar)</li> <li>Sync Now button (manually trigger schedule update)</li> <li>View Statistics link (access historical data)</li> </ul> </li> </ul>"},{"location":"features/#calendar-selection-page","title":"Calendar Selection Page","text":"<ul> <li>List All Available Calendars - Shows all Google Calendars from your account</li> <li>Simple Selection - Choose which calendar to use for night routine events</li> <li>Automatic Webhook Setup - Notification channels are configured automatically after selection</li> </ul>"},{"location":"features/#statistics-page","title":"Statistics Page","text":"<ul> <li>Monthly Assignment Counts - View assignment counts per parent for each month</li> <li>12-Month History - Displays data for the last 12 months</li> <li>Fair Distribution Verification - Helps verify equitable distribution over time</li> <li>Clean Presentation - Only shows months with actual assignments</li> </ul>"},{"location":"features/#responsive-design","title":"Responsive Design","text":"<ul> <li>Desktop Optimized - Clean layout with hover tooltips for additional information</li> <li>Mobile Friendly - Touch-optimized interface with tap-to-toggle decision reasons</li> <li>Modern UI - Clean, intuitive design that works across all devices</li> </ul>"},{"location":"features/#data-management","title":"Data Management","text":""},{"location":"features/#sqlite-database","title":"SQLite Database","text":"<p>The application uses SQLite for persistent storage with the following features:</p> <ul> <li>Assignment History - Complete record of all assignments with decision reasons</li> <li>OAuth2 Tokens - Securely stored tokens with automatic refresh capability</li> <li>Calendar Configuration - Selected Google Calendar settings</li> <li>Notification Channels - Management of webhook notification channels</li> <li>WAL Mode - Write-Ahead Logging for better concurrency</li> <li>Automatic Migrations - Database schema is updated automatically on startup</li> <li>Foreign Key Constraints - Data integrity is enforced at the database level</li> <li>Incremental Auto-Vacuum - Automatic database maintenance</li> </ul>"},{"location":"features/#configurable-availability","title":"Configurable Availability","text":"<ul> <li>Days of Week Configuration - Set which days each parent is unavailable</li> <li>Flexible Constraints - Define availability patterns that match your family's schedule</li> <li>Automatic Adherence - The fairness algorithm respects configured availability</li> </ul>"},{"location":"features/#assignment-decision-tracking","title":"Assignment Decision Tracking","text":"<p>Every assignment includes a tracked decision reason:</p> <ul> <li>Unavailability - One parent was not available on that day</li> <li>Total Count - Parent had fewer total assignments overall</li> <li>Recent Count - Parent had fewer recent assignments</li> <li>Consecutive Limit - Assignment made to avoid too many consecutive duties</li> <li>Alternating - Maintains fair alternating pattern</li> <li>Manual Override - User manually changed the assignment via Google Calendar</li> </ul>"},{"location":"features/#operations-deployment","title":"Operations &amp; Deployment","text":""},{"location":"features/#structured-logging","title":"Structured Logging","text":"<p>Powered by zerolog:</p> <ul> <li>Configurable Log Levels - Choose from trace, debug, info, warn, error, fatal, or panic</li> <li>Pretty Console Output - Human-readable format for development</li> <li>JSON Output - Machine-parseable format for production</li> <li>Environment-Based Switching - Automatically use JSON logging in production</li> </ul>"},{"location":"features/#docker-containerization","title":"Docker Containerization","text":"<ul> <li>Pre-Built Images - Available in GitHub Container Registry</li> <li>Multi-Architecture Support - Native support for amd64 and arm64</li> <li>Signed Images - Images are signed using Sigstore Cosign for verification</li> <li>SBOM Attestations - Software Bill of Materials included for security auditing</li> <li>Tagged Releases - Available as <code>latest</code> or specific version tags (e.g., <code>v1.0.0</code>)</li> </ul>"},{"location":"features/#high-performance","title":"High Performance","text":"<ul> <li>WAL Mode SQLite - Better concurrency for database operations</li> <li>Graceful Shutdown - Properly handles termination signals</li> <li>Efficient Updates - Only updates changed calendar events</li> <li>Minimal Resource Usage - Lightweight Go binary with small footprint</li> </ul>"},{"location":"features/#security-features","title":"Security Features","text":"<ul> <li>Environment Variable Credentials - OAuth2 credentials stored securely outside the codebase</li> <li>Encrypted Token Storage - Database storage for sensitive authentication tokens</li> <li>HTTPS Recommended - Use with reverse proxy for production deployments</li> <li>Regular Dependency Updates - Automated dependency updates via Renovate</li> <li>Signed Container Images - Cosign signatures for image verification</li> <li>SBOM Generation - Complete software bill of materials for security auditing</li> </ul>"},{"location":"architecture/assignment-logic/","title":"Assignment Decision Logic","text":"<p>The Night Routine Scheduler uses a sophisticated fairness algorithm to determine which parent is assigned to each night's routine. This page explains how assignments are decided.</p>"},{"location":"architecture/assignment-logic/#decision-flow","title":"Decision Flow","text":"<pre><code>flowchart TD\n    Start[Start: Assign Night for Date] --&gt; CheckAvail[Check Parent Availability]\n    CheckAvail --&gt; OneUnavail{One Parent&lt;br/&gt;Unavailable?}\n    OneUnavail --&gt;|Yes| AssignAvail[Assign Available Parent&lt;br/&gt;Reason: Unavailability]\n    OneUnavail --&gt;|No| BothAvail[Both Parents Available]\n\n    BothAvail --&gt; CheckTotal[Compare Total Assignment Counts]\n    CheckTotal --&gt; TotalDiff{Significant&lt;br/&gt;Difference?}\n    TotalDiff --&gt;|Yes| AssignFewer[Assign Parent with Fewer&lt;br/&gt;Reason: Total Count]\n    TotalDiff --&gt;|No| CheckRecent[Compare Recent Assignment Counts]\n\n    CheckRecent --&gt; RecentDiff{Significant&lt;br/&gt;Difference?}\n    RecentDiff --&gt;|Yes| AssignFewerRecent[Assign Parent with Fewer Recent&lt;br/&gt;Reason: Recent Count]\n    RecentDiff --&gt;|No| CheckConsec[Check Consecutive Assignments]\n\n    CheckConsec --&gt; TooMany{Too Many&lt;br/&gt;Consecutive?}\n    TooMany --&gt;|Yes| AssignOther[Assign Other Parent&lt;br/&gt;Reason: Consecutive Limit]\n    TooMany --&gt;|No| Alternate[Apply Alternating Pattern&lt;br/&gt;Reason: Alternating]\n\n    AssignAvail --&gt; End[Assignment Complete]\n    AssignFewer --&gt; End\n    AssignFewerRecent --&gt; End\n    AssignOther --&gt; End\n    Alternate --&gt; End</code></pre>"},{"location":"architecture/assignment-logic/#decision-criteria-priority-order","title":"Decision Criteria (Priority Order)","text":"<p>The algorithm evaluates criteria in this order:</p>"},{"location":"architecture/assignment-logic/#1-unavailability","title":"1. Unavailability","text":"<p>Highest Priority</p> <p>If one parent is unavailable on a given day (configured in <code>availability</code> section), the other parent is automatically assigned.</p> <p>Configuration: <pre><code>[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n</code></pre></p> <p>Example: - Monday: Parent A assigned (Parent B unavailable) - Wednesday: Parent B assigned (Parent A unavailable)</p> <p>Decision Reason: <code>Unavailability</code></p>"},{"location":"architecture/assignment-logic/#2-total-count-balance","title":"2. Total Count Balance","text":"<p>If both parents are available, compare their total lifetime assignment counts.</p> <p>Logic: - Count all assignments for each parent - If one parent has significantly fewer assignments (typically 2+ fewer), assign that parent</p> <p>Example: - Parent A: 50 total assignments - Parent B: 48 total assignments - Difference is small (2), continue to next criterion</p> <p>Decision Reason: <code>Total Count</code></p>"},{"location":"architecture/assignment-logic/#3-recent-count-balance","title":"3. Recent Count Balance","text":"<p>Compare assignment counts from the recent period (last 14-30 days, configurable).</p> <p>Logic: - Count recent assignments for each parent - If one parent has fewer recent assignments, assign that parent</p> <p>Example: - Parent A: 3 assignments in last 14 days - Parent B: 6 assignments in last 14 days - Assign Parent A</p> <p>Decision Reason: <code>Recent Count</code></p>"},{"location":"architecture/assignment-logic/#4-consecutive-limit","title":"4. Consecutive Limit","text":"<p>Prevent one parent from having too many consecutive night assignments.</p> <p>Logic: - Check how many consecutive nights the current parent has been assigned - If limit reached (typically 3-5 nights), switch to the other parent</p> <p>Example: - Last 3 nights: Parent A, Parent A, Parent A - Tonight: Assign Parent B (consecutive limit reached)</p> <p>Decision Reason: <code>Consecutive Limit</code></p>"},{"location":"architecture/assignment-logic/#5-alternating-pattern","title":"5. Alternating Pattern","text":"<p>Default Behavior</p> <p>When all other criteria are equal, maintain a simple alternating pattern.</p> <p>Logic: - Check who was assigned yesterday - Assign the other parent</p> <p>Example: - Yesterday: Parent A - Tonight: Parent B - Tomorrow: Parent A</p> <p>Decision Reason: <code>Alternating</code></p>"},{"location":"architecture/assignment-logic/#6-manual-override","title":"6. Manual Override","text":"<p>When you manually change an event title in Google Calendar, the system records this as an override.</p> <p>Detection: - Google Calendar sends webhook notification - Application detects parent name change - Internal database is updated - Future assignments recalculated to maintain fairness</p> <p>Decision Reason: <code>Override</code></p>"},{"location":"architecture/assignment-logic/#fairness-algorithm-details","title":"Fairness Algorithm Details","text":""},{"location":"architecture/assignment-logic/#balancing-total-counts","title":"Balancing Total Counts","text":"<p>The algorithm tracks lifetime assignment counts:</p> <pre><code>totalCountA := countAssignments(ParentA, allTime)\ntotalCountB := countAssignments(ParentB, allTime)\n\nif totalCountA &lt; totalCountB - threshold {\n    assign(ParentA, \"Total Count\")\n} else if totalCountB &lt; totalCountA - threshold {\n    assign(ParentB, \"Total Count\")\n}\n</code></pre> <p>Threshold: Typically 1-2 assignments</p>"},{"location":"architecture/assignment-logic/#recent-count-window","title":"Recent Count Window","text":"<p>Recent counts use a sliding window (default: 14 days):</p> <pre><code>recentCountA := countAssignments(ParentA, last14Days)\nrecentCountB := countAssignments(ParentB, last14Days)\n\nif recentCountA &lt; recentCountB {\n    assign(ParentA, \"Recent Count\")\n} else if recentCountB &lt; recentCountA {\n    assign(ParentB, \"Recent Count\")\n}\n</code></pre>"},{"location":"architecture/assignment-logic/#consecutive-limit-logic","title":"Consecutive Limit Logic","text":"<pre><code>consecutiveCount := 0\nfor date := today; date &gt; today-7days; date-- {\n    if assignment[date].parent == currentParent {\n        consecutiveCount++\n    } else {\n        break\n    }\n}\n\nif consecutiveCount &gt;= consecutiveLimit {\n    assign(otherParent, \"Consecutive Limit\")\n}\n</code></pre> <p>Limit: Typically 3-5 consecutive assignments</p>"},{"location":"architecture/assignment-logic/#example-scenarios","title":"Example Scenarios","text":""},{"location":"architecture/assignment-logic/#scenario-1-basic-alternating","title":"Scenario 1: Basic Alternating","text":"<p>Setup: - No unavailable days - Equal total counts - No recent imbalance</p> <p>Result: <pre><code>Mon: Parent A (Alternating)\nTue: Parent B (Alternating)\nWed: Parent A (Alternating)\nThu: Parent B (Alternating)\n</code></pre></p>"},{"location":"architecture/assignment-logic/#scenario-2-unavailability","title":"Scenario 2: Unavailability","text":"<p>Setup: <pre><code>parent_a_unavailable = [\"Wednesday\", \"Friday\"]\n</code></pre></p> <p>Result: <pre><code>Mon: Parent A (Alternating)\nTue: Parent B (Alternating)\nWed: Parent B (Unavailability - A unavailable)\nThu: Parent A (Alternating)\nFri: Parent B (Unavailability - A unavailable)\nSat: Parent A (Alternating)\n</code></pre></p>"},{"location":"architecture/assignment-logic/#scenario-3-imbalanced-counts","title":"Scenario 3: Imbalanced Counts","text":"<p>Setup: - Parent A: 45 total assignments - Parent B: 50 total assignments</p> <p>Result: <pre><code>Mon: Parent A (Total Count - fewer overall)\nTue: Parent A (Total Count - still fewer overall)\nWed: Parent A (Total Count - catching up)\nThu: Parent B (Now balanced)\nFri: Parent A (Alternating)\n</code></pre></p>"},{"location":"architecture/assignment-logic/#scenario-4-consecutive-limit","title":"Scenario 4: Consecutive Limit","text":"<p>Setup: - Last 3 nights: Parent A - Consecutive limit: 3</p> <p>Result: <pre><code>Thu: Parent B (Consecutive Limit - A had 3 in a row)\nFri: Parent A (Alternating)\nSat: Parent B (Alternating)\n</code></pre></p>"},{"location":"architecture/assignment-logic/#scenario-5-manual-override","title":"Scenario 5: Manual Override","text":"<p>Action: Manually change Monday from Parent A to Parent B in Google Calendar</p> <p>Result: <pre><code>Mon: Parent B (Override - manually changed)\nTue: Parent A (Total Count - compensating for override)\nWed: Parent B (Alternating)\nThu: Parent A (Alternating)\n</code></pre></p>"},{"location":"architecture/assignment-logic/#configuration-impact","title":"Configuration Impact","text":""},{"location":"architecture/assignment-logic/#update-frequency","title":"Update Frequency","text":"<pre><code>[schedule]\nupdate_frequency = \"weekly\"  # How often to recalculate\n</code></pre> <ul> <li>daily - Recalculates every day, most responsive</li> <li>weekly - Recalculates weekly, more stable</li> <li>monthly - Recalculates monthly, least frequent changes</li> </ul>"},{"location":"architecture/assignment-logic/#look-ahead-days","title":"Look-Ahead Days","text":"<pre><code>[schedule]\nlook_ahead_days = 30  # How far to schedule in advance\n</code></pre> <p>Determines how many days are scheduled at once. Longer periods provide more visibility but less flexibility for manual changes.</p>"},{"location":"architecture/assignment-logic/#past-event-threshold","title":"Past Event Threshold","text":"<pre><code>[schedule]\npast_event_threshold_days = 5\n</code></pre> <p>Controls how far back manual overrides are accepted. Prevents old assignments from affecting current balance calculations.</p>"},{"location":"architecture/assignment-logic/#monitoring-fairness","title":"Monitoring Fairness","text":""},{"location":"architecture/assignment-logic/#statistics-page","title":"Statistics Page","text":"<p>View the statistics page to verify fair distribution:</p> Month Parent A Parent B Total Jan 2024 15 16 31 Feb 2024 14 14 28 <p>Healthy Distribution: - Difference of 0-1 for months with even days - Difference of 1 for months with odd days</p>"},{"location":"architecture/assignment-logic/#decision-reason-tracking","title":"Decision Reason Tracking","text":"<p>Every assignment includes its decision reason, viewable in:</p> <ul> <li>Web interface (hover/tap on dates)</li> <li>Google Calendar event descriptions</li> <li>Database queries</li> </ul> <p>This transparency helps you understand why each assignment was made.</p>"},{"location":"architecture/assignment-logic/#edge-cases","title":"Edge Cases","text":""},{"location":"architecture/assignment-logic/#both-parents-unavailable","title":"Both Parents Unavailable","text":"<p>Scenario: Both parents marked unavailable on the same day</p> <p>Behavior: The algorithm will still assign someone (typically based on alternating pattern) but log a warning.</p> <p>Recommendation: Avoid configuring overlapping unavailability.</p>"},{"location":"architecture/assignment-logic/#starting-from-scratch","title":"Starting from Scratch","text":"<p>Scenario: No historical assignments exist</p> <p>Behavior: - First assignment uses alternating pattern (starts with Parent A) - Subsequent assignments build fairness tracking from there</p>"},{"location":"architecture/assignment-logic/#long-gaps","title":"Long Gaps","text":"<p>Scenario: Application not used for months, then restarted</p> <p>Behavior: - Historical assignments remain in database - New assignments calculated based on existing fairness state - Old assignments beyond look-ahead window aren't deleted</p>"},{"location":"architecture/assignment-logic/#advanced-customizing-the-algorithm","title":"Advanced: Customizing the Algorithm","text":"<p>The fairness logic is in <code>internal/fairness/</code> and can be customized if needed:</p> <p>Key files: - <code>fairness.go</code> - Main decision logic - <code>calculator.go</code> - Count calculations - <code>types.go</code> - Decision reason types</p> <p>To customize: 1. Modify the decision criteria in <code>fairness.go</code> 2. Adjust thresholds and weights 3. Rebuild the application 4. Test thoroughly with various scenarios</p>"},{"location":"architecture/assignment-logic/#next-steps","title":"Next Steps","text":"<ul> <li>Understand the database structure</li> <li>Learn about manual overrides</li> <li>Explore the architecture</li> </ul>"},{"location":"architecture/database/","title":"Database Structure","text":"<p>Night Routine Scheduler uses SQLite for persistent storage with WAL (Write-Ahead Logging) mode for better concurrency.</p>"},{"location":"architecture/database/#database-location","title":"Database Location","text":"<p>The database file location is configured in <code>routine.toml</code>:</p> <pre><code>[service]\nstate_file = \"data/state.db\"\n</code></pre>"},{"location":"architecture/database/#database-features","title":"Database Features","text":"<ul> <li>SQLite 3 - Lightweight, serverless database</li> <li>WAL Mode - Write-Ahead Logging for better concurrency</li> <li>Foreign Key Constraints - Data integrity enforcement</li> <li>Automatic Migrations - Schema updates on application startup</li> <li>Incremental Auto-Vacuum - Automatic database maintenance</li> </ul>"},{"location":"architecture/database/#schema","title":"Schema","text":""},{"location":"architecture/database/#tables","title":"Tables","text":""},{"location":"architecture/database/#assignments","title":"<code>assignments</code>","text":"<p>Stores night routine assignment history and fairness tracking.</p> Column Type Description <code>id</code> INTEGER PRIMARY KEY Auto-incrementing ID <code>date</code> TEXT UNIQUE NOT NULL ISO date (YYYY-MM-DD) <code>parent</code> TEXT NOT NULL Parent name (Parent A or Parent B) <code>reason</code> TEXT NOT NULL Decision reason <code>created_at</code> TEXT NOT NULL Creation timestamp <code>updated_at</code> TEXT NOT NULL Last update timestamp <p>Indexes: - Primary key on <code>id</code> - Unique index on <code>date</code> - Index on <code>parent</code> for fast lookups</p> <p>Decision Reasons: - <code>Unavailability</code> - One parent was unavailable - <code>Total Count</code> - Balance total assignment counts - <code>Recent Count</code> - Balance recent assignments - <code>Consecutive Limit</code> - Avoid too many consecutive assignments - <code>Alternating</code> - Maintain alternating pattern - <code>Override</code> - Manual change via Google Calendar</p>"},{"location":"architecture/database/#oauth_tokens","title":"<code>oauth_tokens</code>","text":"<p>Stores Google OAuth2 access and refresh tokens.</p> Column Type Description <code>id</code> INTEGER PRIMARY KEY Always 1 (single row table) <code>access_token</code> TEXT NOT NULL OAuth2 access token <code>refresh_token</code> TEXT NOT NULL OAuth2 refresh token <code>token_type</code> TEXT NOT NULL Token type (usually \"Bearer\") <code>expiry</code> TEXT NOT NULL Token expiration timestamp <code>created_at</code> TEXT NOT NULL Creation timestamp <code>updated_at</code> TEXT NOT NULL Last update timestamp <p>Notes: - Only one row exists (enforced by application logic) - Tokens are automatically refreshed when expired - Access tokens expire after ~1 hour - Refresh tokens are long-lived (until revoked)</p>"},{"location":"architecture/database/#calendar_settings","title":"<code>calendar_settings</code>","text":"<p>Stores selected Google Calendar configuration.</p> Column Type Description <code>id</code> INTEGER PRIMARY KEY Always 1 (single row table) <code>calendar_id</code> TEXT NOT NULL Google Calendar ID <code>calendar_name</code> TEXT NOT NULL Human-readable calendar name <code>created_at</code> TEXT NOT NULL Creation timestamp <code>updated_at</code> TEXT NOT NULL Last update timestamp <p>Notes: - Only one row exists (single calendar selection) - <code>calendar_id</code> format: email or calendar ID from Google - <code>calendar_name</code> is for display purposes</p>"},{"location":"architecture/database/#notification_channels","title":"<code>notification_channels</code>","text":"<p>Manages Google Calendar webhook notification channels.</p> Column Type Description <code>id</code> INTEGER PRIMARY KEY Auto-incrementing ID <code>channel_id</code> TEXT UNIQUE NOT NULL Google notification channel ID <code>resource_id</code> TEXT NOT NULL Google resource ID <code>expiration</code> TEXT NOT NULL Channel expiration timestamp <code>created_at</code> TEXT NOT NULL Creation timestamp <code>updated_at</code> TEXT NOT NULL Last update timestamp <p>Indexes: - Primary key on <code>id</code> - Unique index on <code>channel_id</code></p> <p>Notes: - Channels expire and must be renewed (typically every 7-30 days) - Application automatically manages channel lifecycle - Multiple channels may exist during renewal periods</p>"},{"location":"architecture/database/#migrations","title":"Migrations","text":"<p>The application uses golang-migrate for database migrations.</p>"},{"location":"architecture/database/#migration-files","title":"Migration Files","text":"<p>Migrations are embedded in the application binary and located at:</p> <pre><code>internal/database/migrations/\n\u251c\u2500\u2500 000001_initial_schema.up.sql\n\u251c\u2500\u2500 000001_initial_schema.down.sql\n\u251c\u2500\u2500 000002_add_indexes.up.sql\n\u251c\u2500\u2500 000002_add_indexes.down.sql\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"architecture/database/#automatic-migration","title":"Automatic Migration","text":"<p>Migrations run automatically on application startup:</p> <ol> <li>Database connection is established</li> <li>Current schema version is checked</li> <li>Pending migrations are applied in order</li> <li>Application starts normally</li> </ol> <p>Log output: <pre><code>INF Connecting to database file=data/state.db\nINF Running database migrations\nINF Migration applied version=1 name=initial_schema\nINF Migration applied version=2 name=add_indexes\nINF Database ready\n</code></pre></p>"},{"location":"architecture/database/#manual-migration-advanced","title":"Manual Migration (Advanced)","text":"<p>You can manually check or migrate using the Go migrate CLI:</p> <pre><code># Install migrate\ngo install -tags 'sqlite3' github.com/golang-migrate/migrate/v4/cmd/migrate@latest\n\n# Check current version\nmigrate -path internal/database/migrations -database \"sqlite3://data/state.db\" version\n\n# Apply all pending migrations\nmigrate -path internal/database/migrations -database \"sqlite3://data/state.db\" up\n\n# Rollback last migration\nmigrate -path internal/database/migrations -database \"sqlite3://data/state.db\" down 1\n</code></pre>"},{"location":"architecture/database/#wal-mode","title":"WAL Mode","text":"<p>The database uses Write-Ahead Logging (WAL) mode for improved concurrency.</p>"},{"location":"architecture/database/#benefits","title":"Benefits","text":"<ul> <li>Better Concurrency - Readers don't block writers</li> <li>Faster Writes - Append-only writes to WAL file</li> <li>Atomic Transactions - Guaranteed consistency</li> <li>Crash Recovery - Automatic recovery from crashes</li> </ul>"},{"location":"architecture/database/#file-structure","title":"File Structure","text":"<p>When using WAL mode, you'll see three files:</p> <pre><code>data/\n\u251c\u2500\u2500 state.db        # Main database file\n\u251c\u2500\u2500 state.db-shm    # Shared memory file\n\u2514\u2500\u2500 state.db-wal    # Write-ahead log file\n</code></pre> <p>Backup Considerations</p> <p>When backing up the database, include all three files or use the SQLite backup API to ensure consistency.</p>"},{"location":"architecture/database/#querying-the-database","title":"Querying the Database","text":""},{"location":"architecture/database/#using-sqlite-cli","title":"Using SQLite CLI","text":"<pre><code># Open the database\nsqlite3 data/state.db\n\n# View schema\n.schema\n\n# Query assignments\nSELECT date, parent, reason FROM assignments ORDER BY date DESC LIMIT 10;\n\n# Count assignments by parent\nSELECT parent, COUNT(*) as count FROM assignments GROUP BY parent;\n\n# View OAuth token expiry\nSELECT expiry FROM oauth_tokens;\n</code></pre>"},{"location":"architecture/database/#common-queries","title":"Common Queries","text":"<p>Get current month's assignments: <pre><code>SELECT date, parent, reason \nFROM assignments \nWHERE date &gt;= date('now', 'start of month')\n  AND date &lt; date('now', '+1 month', 'start of month')\nORDER BY date;\n</code></pre></p> <p>Count assignments by parent (last 30 days): <pre><code>SELECT parent, COUNT(*) as count\nFROM assignments\nWHERE date &gt;= date('now', '-30 days')\nGROUP BY parent;\n</code></pre></p> <p>Find all manual overrides: <pre><code>SELECT date, parent\nFROM assignments\nWHERE reason = 'Override'\nORDER BY date DESC;\n</code></pre></p> <p>Check token expiration: <pre><code>SELECT \n  datetime(expiry) as expires_at,\n  datetime(expiry, 'localtime') as expires_local,\n  (julianday(expiry) - julianday('now')) * 24 as hours_remaining\nFROM oauth_tokens;\n</code></pre></p>"},{"location":"architecture/database/#data-integrity","title":"Data Integrity","text":""},{"location":"architecture/database/#foreign-key-constraints","title":"Foreign Key Constraints","text":"<p>Foreign key constraints are enabled to maintain referential integrity:</p> <pre><code>PRAGMA foreign_keys = ON;\n</code></pre>"},{"location":"architecture/database/#transaction-safety","title":"Transaction Safety","text":"<p>All database operations use transactions to ensure atomic updates:</p> <pre><code>tx, err := db.Begin()\n// ... perform operations\ntx.Commit() // or tx.Rollback() on error\n</code></pre>"},{"location":"architecture/database/#unique-constraints","title":"Unique Constraints","text":"<ul> <li>Assignments: One assignment per date</li> <li>OAuth tokens: Single token set</li> <li>Calendar settings: Single calendar selection</li> <li>Notification channels: Unique channel IDs</li> </ul>"},{"location":"architecture/database/#performance-considerations","title":"Performance Considerations","text":""},{"location":"architecture/database/#indexes","title":"Indexes","text":"<p>Strategic indexes for common queries:</p> <ul> <li>assignments.date - Fast date lookups</li> <li>assignments.parent - Quick parent filtering</li> <li>notification_channels.channel_id - Fast channel lookups</li> </ul>"},{"location":"architecture/database/#query-optimization","title":"Query Optimization","text":"<p>The application uses prepared statements for:</p> <ul> <li>Inserting new assignments</li> <li>Updating existing assignments</li> <li>Checking assignment counts</li> <li>Token refresh operations</li> </ul>"},{"location":"architecture/database/#connection-pooling","title":"Connection Pooling","text":"<p>SQLite doesn't support true connection pooling, but the application:</p> <ul> <li>Reuses a single connection</li> <li>Uses WAL mode for concurrency</li> <li>Implements proper locking</li> </ul>"},{"location":"architecture/database/#backup-and-restore","title":"Backup and Restore","text":""},{"location":"architecture/database/#manual-backup","title":"Manual Backup","text":"<pre><code># Stop the application first\n# Then copy all database files\ncp data/state.db data/state.db.backup\ncp data/state.db-shm data/state.db-shm.backup 2&gt;/dev/null\ncp data/state.db-wal data/state.db-wal.backup 2&gt;/dev/null\n</code></pre>"},{"location":"architecture/database/#online-backup-sqlite-backup-api","title":"Online Backup (SQLite Backup API)","text":"<pre><code># Using sqlite3 CLI\nsqlite3 data/state.db \".backup data/state.db.backup\"\n</code></pre>"},{"location":"architecture/database/#automated-backup-script","title":"Automated Backup Script","text":"<pre><code>#!/bin/bash\nBACKUP_DIR=\"/path/to/backups\"\nDATE=$(date +%Y%m%d_%H%M%S)\nsqlite3 data/state.db \".backup ${BACKUP_DIR}/state_${DATE}.db\"\n# Keep only last 30 days\nfind ${BACKUP_DIR} -name \"state_*.db\" -mtime +30 -delete\n</code></pre>"},{"location":"architecture/database/#restore-from-backup","title":"Restore from Backup","text":"<pre><code># Stop the application\n# Replace the database file\ncp data/state.db.backup data/state.db\n# Remove WAL files to force checkpoint\nrm -f data/state.db-shm data/state.db-wal\n# Restart the application\n</code></pre>"},{"location":"architecture/database/#maintenance","title":"Maintenance","text":""},{"location":"architecture/database/#vacuum","title":"Vacuum","text":"<p>WAL mode uses automatic vacuuming, but you can manually optimize:</p> <pre><code>-- Check database size\nSELECT page_count * page_size as size FROM pragma_page_count(), pragma_page_size();\n\n-- Checkpoint WAL\nPRAGMA wal_checkpoint(TRUNCATE);\n\n-- Vacuum (reclaim space)\nVACUUM;\n\n-- Analyze (update statistics)\nANALYZE;\n</code></pre>"},{"location":"architecture/database/#integrity-check","title":"Integrity Check","text":"<pre><code>-- Check database integrity\nPRAGMA integrity_check;\n\n-- Quick check\nPRAGMA quick_check;\n\n-- Check foreign keys\nPRAGMA foreign_key_check;\n</code></pre>"},{"location":"architecture/database/#troubleshooting","title":"Troubleshooting","text":""},{"location":"architecture/database/#database-locked-errors","title":"Database Locked Errors","text":"<p>Symptom: <code>database is locked</code> errors</p> <p>Causes: - Multiple processes accessing the database - Long-running transaction - WAL checkpoint in progress</p> <p>Solutions: 1. Ensure only one instance is running 2. Check for hung processes 3. WAL mode should prevent most locking issues</p>"},{"location":"architecture/database/#corruption","title":"Corruption","text":"<p>Symptom: Integrity check fails</p> <p>Solutions: 1. Restore from backup 2. Try <code>.recover</code> command in sqlite3 CLI 3. If minor corruption, <code>.dump</code> and <code>.restore</code></p>"},{"location":"architecture/database/#performance-degradation","title":"Performance Degradation","text":"<p>Symptom: Slow queries</p> <p>Solutions: 1. Run <code>ANALYZE</code> to update statistics 2. Checkpoint the WAL: <code>PRAGMA wal_checkpoint(TRUNCATE)</code> 3. Consider <code>VACUUM</code> if database has grown large 4. Check for missing indexes</p>"},{"location":"architecture/database/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about assignment logic</li> <li>Understand the architecture</li> <li>Explore development setup</li> </ul>"},{"location":"architecture/overview/","title":"Night Routine Scheduler Architecture","text":""},{"location":"architecture/overview/#1-project-structure","title":"1. Project Structure","text":"<pre><code>graph TD\n    A[Main Application] --&gt; B[Config Manager]\n    A --&gt; C[Scheduling Engine]\n    A --&gt; D[Calendar Service]\n    A --&gt; E[Fairness Tracker]\n    A --&gt; W[Web UI]\n    A --&gt; WH[Webhook Handler]\n    A --&gt; DB[Database Manager]\n    A --&gt; LG[Logging Service]\n    W --&gt; VH[View Helpers]\n    B --&gt; F[routine.toml]\n    B --&gt; M[Environment Variables]\n    C --&gt; G[Schedule Generator]\n    D --&gt; H[Google Calendar API]\n    E --&gt; I[State Storage]\n    W --&gt; J[OAuth Handler]\n    W --&gt; K[Calendar Selection]\n    W --&gt; HC[Home Handler]\n    WH --&gt; DB\n    WH --&gt; C\n    DB --&gt; MG[Database Migrations]\n    LG --&gt; ZL[Zerolog Library]\n    HC --&gt; VH\n    HC --&gt; C\n\n    J --&gt; I\n    K --&gt; I\n    I --&gt; L[(SQLite DB)]\n    MG --&gt; L</code></pre>"},{"location":"architecture/overview/#2-components-breakdown","title":"2. Components Breakdown","text":""},{"location":"architecture/overview/#21-configuration-manager","title":"2.1 Configuration Manager","text":"<ul> <li>Uses TOML format for application configuration</li> <li>Uses environment variables for sensitive data and environment settings (e.g., <code>ENV</code> for logging format)</li> <li>Configuration sources:</li> </ul> <pre><code># routine.toml - Application configuration\n[parents]\nparent_a = \"Parent1\"\nparent_b = \"Parent2\"\n\n[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\npast_event_threshold_days = 5  # How many days in the past to accept event changes (default: 5)\n\n[service]\nstate_file = \"data/state.db\"\nlog_level = \"info\" # Logging level\n# manual_sync_on_startup = true # Optional: Perform sync on startup (defaults to true). Set to false to disable.\n</code></pre>"},{"location":"architecture/overview/#environment-variables","title":"Environment Variables","text":"<pre><code># Environment Variables - Configuration\nGOOGLE_OAUTH_CLIENT_ID=your-client-id       # OAuth2 Configuration\nGOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nPORT=8080                                   # Service Configuration\nCONFIG_FILE=configs/routine.toml            # Path to TOML config file\nAPP_URL=http://localhost:8080               # (Optional) Override application URL\nENV=development                             # (Optional) \"production\" for JSON logs, otherwise pretty console logs\n</code></pre>"},{"location":"architecture/overview/#22-scheduling-engine","title":"2.2 Scheduling Engine","text":"<pre><code>flowchart LR\n    A[Load Config] --&gt; B[Check Availability]\n    B --&gt; C[Check History]\n    C --&gt; D[Generate Schedule]\n    D --&gt; E[Apply Fairness Rules]\n    E --&gt; F[Produce Final Schedule]</code></pre>"},{"location":"architecture/overview/#23-google-calendar-integration","title":"2.3 Google Calendar Integration","text":"<pre><code>sequenceDiagram\n    participant UI as Web UI\n    participant App\n    participant Auth\n    participant DB as SQLite\n    participant GCal\n\n    Note over App: Load OAuth config from env\n    UI-&gt;&gt;Auth: OAuth2 Flow\n    Auth--&gt;&gt;UI: Token\n    UI-&gt;&gt;DB: Store Token\n    UI-&gt;&gt;GCal: List Calendars\n    GCal--&gt;&gt;UI: Available Calendars\n    UI-&gt;&gt;DB: Store Selected Calendar\n\n    loop Weekly\n        App-&gt;&gt;DB: Get Token &amp; Calendar\n        App-&gt;&gt;App: Generate Schedule\n        App-&gt;&gt;GCal: Create/Update Events\n    end</code></pre>"},{"location":"architecture/overview/#24-web-interface","title":"2.4 Web Interface","text":"<ul> <li>OAuth2 authentication flow using environment variables</li> <li>Calendar selection UI</li> <li>Components:</li> <li>Home page with connection status</li> <li>OAuth callback handler</li> <li>Calendar selection page</li> <li>Success/error notifications</li> </ul>"},{"location":"architecture/overview/#25-state-storage-sqlite","title":"2.5 State Storage (SQLite)","text":"<ul> <li>Database schema managed through migrations</li> <li>Migrations stored as embedded SQL files in the application</li> <li>Tables:</li> </ul> <pre><code>-- Night routine assignments\nassignments (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  parent_name TEXT NOT NULL,\n  assignment_date TEXT NOT NULL,\n  override BOOLEAN DEFAULT FALSE,\n  google_calendar_event_id TEXT,\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n)\n\n-- OAuth tokens\noauth_tokens (\n  id INTEGER PRIMARY KEY, -- Should always be 1\n  token_data JSONB NOT NULL,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n-- Calendar settings\ncalendar_settings (\n  id INTEGER PRIMARY KEY, -- Should always be 1\n  calendar_id TEXT NOT NULL,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n-- Notification channels\nnotification_channels (\n    id TEXT PRIMARY KEY,\n    resource_id TEXT NOT NULL,\n    calendar_id TEXT NOT NULL,\n    expiration DATETIME NOT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\n)\n</code></pre>"},{"location":"architecture/overview/#26-fairness-tracker","title":"2.6 Fairness Tracker","text":"<ul> <li>Maintains state in SQLite to track:</li> <li>Historical assignments</li> <li>Consecutive assignments</li> <li>Total count per parent</li> <li>Uses assignment data for scheduling decisions</li> </ul>"},{"location":"architecture/overview/#27-webhook-handler-google-calendar-integration","title":"2.7 Webhook Handler (Google Calendar Integration)","text":"<p>The application implements a webhook handler at <code>/api/webhook/calendar</code> specifically designed to process Google Calendar push notifications. This allows the system to react dynamically to manual changes made directly in the shared Google Calendar.</p> <p>Workflow:</p> <ol> <li>Notification Reception: Google Calendar sends a push notification to the endpoint when a change occurs in the subscribed calendar.</li> <li>Authentication &amp; Validation:<ul> <li>The handler verifies the <code>X-Goog-Channel-ID</code> and <code>X-Goog-Resource-ID</code> headers against the stored notification channel details (retrieved from the <code>notification_channels</code> table in SQLite). This ensures the notification is legitimate and originates from the expected Google Calendar subscription.</li> <li>If the channel ID or resource ID doesn't match, the request is rejected (HTTP 400).</li> <li>It checks the <code>X-Goog-Resource-State</code> header. If it's <code>sync</code>, it's an initial synchronization message, and the handler simply acknowledges it (HTTP 200) without further processing.</li> </ul> </li> <li>Channel Renewal Check: The handler checks the expiration time of the notification channel. If it's nearing expiration (e.g., within 7 days), it proactively attempts to renew the subscription with Google Calendar using the stored refresh token and calendar ID.</li> <li>Fetch Updated Events: For actual change notifications (<code>X-Goog-Resource-State</code> is not <code>sync</code>), the handler uses the Google Calendar API to fetch events that have been updated recently (e.g., within the last 2 minutes). It uses the <code>updatedMin</code> parameter for efficiency.</li> <li>Event Processing Loop:<ul> <li>For each updated event retrieved:</li> <li>Ownership Check: It verifies the event belongs to this application by checking for a specific private extended property (e.g., <code>private[\"app\"] == \"night-routine\"</code>). Events without this property are ignored.</li> <li>Extract Parent: It parses the event summary (expected format: <code>\"[ParentName] \ud83c\udf03\ud83d\udc76Routine\"</code>) to extract the assigned parent's name.</li> <li>Find Local Assignment: It queries the <code>assignments</code> table using the <code>google_calendar_event_id</code> to find the corresponding local record.</li> <li>Change Detection: It compares the extracted parent name with the parent name stored in the local assignment record.</li> <li>Date Check: It ensures the assignment date is within the configurable past event threshold (default: 5 days). The threshold is configured via <code>past_event_threshold_days</code> in the <code>[schedule]</code> section of <code>routine.toml</code>. Overrides for assignments older than this threshold are rejected with a warning logged.</li> <li>Update Local Assignment: If the parent name has changed and the assignment is within the threshold, it updates the <code>parent_name</code> and sets the <code>override</code> flag to <code>true</code> in the <code>assignments</code> table for that record.</li> </ul> </li> <li>Trigger Schedule Recalculation: If any local assignment was updated due to an override, the handler triggers the <code>Scheduler</code> component.<ul> <li>The scheduler regenerates the schedule starting from the date of the earliest overridden assignment up to the previously calculated end date.</li> <li>This recalculation respects the new override(s) and applies fairness rules to the subsequent, non-overridden days.</li> </ul> </li> <li>Sync Recalculated Schedule: The newly generated portion of the schedule is synced back to Google Calendar by the <code>CalendarService</code>, updating or creating events as necessary.</li> <li>Acknowledge Notification: Finally, the handler responds to the original Google Calendar push notification with an HTTP 200 OK status.</li> </ol> <p>Key Interactions:</p> <ul> <li>Database Manager: Reads notification channel details, reads/writes assignment records.</li> <li>Token Manager: Obtains a valid OAuth2 token to interact with the Google Calendar API.</li> <li>Calendar Service: Renews notification channels, fetches updated events, syncs recalculated schedule.</li> <li>Scheduler: Retrieves assignments by event ID, updates assignments, triggers schedule regeneration.</li> <li>Config Manager: Provides Google API credentials.</li> </ul>"},{"location":"architecture/overview/#28-logging-service","title":"2.8 Logging Service","text":"<ul> <li>Centralized logging configuration in <code>internal/logging</code>.</li> <li>Uses zerolog for structured, leveled logging.</li> <li>Log level configured via <code>log_level</code> in <code>routine.toml</code>.</li> <li>Log format determined by <code>ENV</code> environment variable:</li> <li><code>development</code> (default): Human-readable console output.</li> <li><code>production</code>: JSON output to stdout.</li> <li>Provides helper functions (<code>GetLogger</code>) to create component-specific loggers with context.</li> </ul>"},{"location":"architecture/overview/#3-implementation-plan","title":"3. Implementation Plan","text":"<ol> <li> <p>Phase 1: Core Structure</p> </li> <li> <p>Project initialization with Go 1.24</p> </li> <li>Environment variables configuration</li> <li>Basic TOML configuration setup</li> <li>Command-line interface</li> <li>Docker configuration</li> <li> <p>SQLite schema setup</p> </li> <li> <p>Phase 2: Web Interface</p> </li> <li> <p>OAuth2 flow with environment variables</p> </li> <li>Calendar selection UI</li> <li>Token storage in SQLite</li> <li> <p>Basic web server setup</p> </li> <li> <p>Phase 3: Scheduling Logic</p> </li> <li> <p>Schedule generation algorithm</p> </li> <li>Fairness rules implementation</li> <li>State management</li> <li> <p>Database interactions</p> </li> <li> <p>Phase 4: Google Calendar Integration</p> </li> <li> <p>OAuth2 token management</p> </li> <li>Calendar API integration</li> <li>Event management</li> <li> <p>Error handling</p> </li> <li> <p>Phase 5: Service Mode &amp; Logging</p> </li> <li> <p>Background service implementation</p> </li> <li>Scheduling loop</li> <li>Structured logging implementation (zerolog)</li> <li>Health checks</li> </ol>"},{"location":"architecture/overview/#4-technical-specifications","title":"4. Technical Specifications","text":""},{"location":"architecture/overview/#technology-stack","title":"Technology Stack:","text":"<ul> <li>Go 1.24</li> <li>Libraries:</li> <li><code>github.com/BurntSushi/toml</code> for TOML parsing</li> <li><code>google.golang.org/api/calendar/v3</code> for Google Calendar</li> <li><code>golang.org/x/oauth2</code> for OAuth2 handling</li> <li>Built-in <code>database/sql</code> with <code>github.com/mattn/go-sqlite3</code> for state management</li> <li><code>github.com/golang-migrate/migrate/v4</code> for database migrations</li> <li><code>html/template</code> for web UI</li> <li><code>github.com/rs/zerolog</code> for logging</li> </ul>"},{"location":"architecture/overview/#security-considerations","title":"Security Considerations:","text":"<ul> <li>OAuth2 credentials stored in environment variables</li> <li>Tokens stored securely in SQLite database</li> <li>HTTPS recommended for production deployments</li> <li>Proper error handling for credential issues</li> </ul>"},{"location":"architecture/overview/#database-management","title":"Database Management:","text":"<ul> <li>Database schema versioned and managed through migrations</li> <li>Migrations embedded in the application binary using Go 1.16+ embed package</li> <li>Migration files organized in numbered pairs (up/down) for versioning</li> <li>Automatic migration at application startup</li> <li>Support for both schema creation and updates</li> </ul>"},{"location":"configuration/environment/","title":"Environment Variables","text":"<p>Night Routine Scheduler uses environment variables for sensitive data and deployment-specific configuration.</p>"},{"location":"configuration/environment/#required-variables","title":"Required Variables","text":"<p>These environment variables must be set for the application to run:</p>"},{"location":"configuration/environment/#google_oauth_client_id","title":"<code>GOOGLE_OAUTH_CLIENT_ID</code>","text":"<p>Type: String Required: Yes</p> <p>Your Google OAuth 2.0 Client ID obtained from the Google Cloud Console.</p> <pre><code>export GOOGLE_OAUTH_CLIENT_ID=\"123456789-abcdefghijklmnop.apps.googleusercontent.com\"\n</code></pre> <p>Getting Credentials</p> <p>See the Google Calendar Setup Guide for instructions on obtaining these credentials.</p>"},{"location":"configuration/environment/#google_oauth_client_secret","title":"<code>GOOGLE_OAUTH_CLIENT_SECRET</code>","text":"<p>Type: String Required: Yes</p> <p>Your Google OAuth 2.0 Client Secret obtained from the Google Cloud Console.</p> <pre><code>export GOOGLE_OAUTH_CLIENT_SECRET=\"your-secret-here\"\n</code></pre> <p>Security Warning</p> <p>Never commit this value to version control. Keep it secure and rotate it if compromised.</p>"},{"location":"configuration/environment/#config_file","title":"<code>CONFIG_FILE</code>","text":"<p>Type: String (file path) Required: Yes</p> <p>Path to your TOML configuration file.</p> <pre><code>export CONFIG_FILE=\"configs/routine.toml\"\n</code></pre> <p>In Docker: <pre><code>export CONFIG_FILE=\"/app/config/routine.toml\"\n</code></pre></p>"},{"location":"configuration/environment/#optional-variables","title":"Optional Variables","text":""},{"location":"configuration/environment/#port","title":"<code>PORT</code>","text":"<p>Type: Integer Required: No Default: Value from TOML configuration</p> <p>Override the port specified in your TOML configuration.</p> <pre><code>export PORT=8080\n</code></pre> <p>Use Case</p> <p>Useful in containerized environments where you want to specify the port at runtime without modifying the configuration file.</p>"},{"location":"configuration/environment/#env","title":"<code>ENV</code>","text":"<p>Type: String Required: No Default: <code>development</code> Values: <code>development</code> | <code>production</code></p> <p>Controls logging format:</p> <ul> <li><code>development</code> - Pretty, human-readable console logs with colors</li> <li><code>production</code> - Structured JSON logs for log aggregation systems</li> </ul> <pre><code># Development (pretty logs)\nexport ENV=development\n\n# Production (JSON logs)\nexport ENV=production\n</code></pre> <p>Example development output: <pre><code>2024-01-15T10:30:45Z INF Starting Night Routine Scheduler\n2024-01-15T10:30:45Z INF Connecting to database file=data/state.db\n</code></pre></p> <p>Example production output: <pre><code>{\"level\":\"info\",\"time\":\"2024-01-15T10:30:45Z\",\"message\":\"Starting Night Routine Scheduler\"}\n{\"level\":\"info\",\"time\":\"2024-01-15T10:30:45Z\",\"file\":\"data/state.db\",\"message\":\"Connecting to database\"}\n</code></pre></p>"},{"location":"configuration/environment/#setting-environment-variables","title":"Setting Environment Variables","text":""},{"location":"configuration/environment/#linuxmacos","title":"Linux/macOS","text":"Command Line.env Filesystemd Service <pre><code>export GOOGLE_OAUTH_CLIENT_ID=\"your-client-id\"\nexport GOOGLE_OAUTH_CLIENT_SECRET=\"your-client-secret\"\nexport CONFIG_FILE=\"configs/routine.toml\"\nexport ENV=production\n</code></pre> <p>Create a <code>.env</code> file: <pre><code>GOOGLE_OAUTH_CLIENT_ID=your-client-id\nGOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nCONFIG_FILE=configs/routine.toml\nENV=production\n</code></pre></p> <p>Then source it: <pre><code>source .env\n</code></pre></p> <p>Create <code>/etc/systemd/system/night-routine.service</code>: <pre><code>[Unit]\nDescription=Night Routine Scheduler\nAfter=network.target\n\n[Service]\nType=simple\nUser=night-routine\nWorkingDirectory=/opt/night-routine\nEnvironment=\"GOOGLE_OAUTH_CLIENT_ID=your-client-id\"\nEnvironment=\"GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\"\nEnvironment=\"CONFIG_FILE=/opt/night-routine/configs/routine.toml\"\nEnvironment=\"ENV=production\"\nExecStart=/opt/night-routine/night-routine\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></p>"},{"location":"configuration/environment/#windows","title":"Windows","text":"Command PromptPowerShellSystem Environment Variables <pre><code>set GOOGLE_OAUTH_CLIENT_ID=your-client-id\nset GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nset CONFIG_FILE=configs\\routine.toml\nset ENV=production\n</code></pre> <pre><code>$env:GOOGLE_OAUTH_CLIENT_ID=\"your-client-id\"\n$env:GOOGLE_OAUTH_CLIENT_SECRET=\"your-client-secret\"\n$env:CONFIG_FILE=\"configs\\routine.toml\"\n$env:ENV=\"production\"\n</code></pre> <ol> <li>Open System Properties \u2192 Advanced \u2192 Environment Variables</li> <li>Add new user or system variables</li> <li>Restart your terminal/application</li> </ol>"},{"location":"configuration/environment/#docker","title":"Docker","text":"docker rundocker-compose.yml.env file (Docker Compose) <pre><code>docker run \\\n  -e GOOGLE_OAUTH_CLIENT_ID=your-client-id \\\n  -e GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret \\\n  -e CONFIG_FILE=/app/config/routine.toml \\\n  -e ENV=production \\\n  ghcr.io/belphemur/night-routine:latest\n</code></pre> <pre><code>version: '3.8'\nservices:\n  night-routine:\n    image: ghcr.io/belphemur/night-routine:latest\n    environment:\n      - GOOGLE_OAUTH_CLIENT_ID=your-client-id\n      - GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\n      - CONFIG_FILE=/app/config/routine.toml\n      - ENV=production\n</code></pre> <p>Create <code>.env</code>: <pre><code>GOOGLE_OAUTH_CLIENT_ID=your-client-id\nGOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nCONFIG_FILE=/app/config/routine.toml\nENV=production\n</code></pre></p> <p>Reference in <code>docker-compose.yml</code>: <pre><code>version: '3.8'\nservices:\n  night-routine:\n    image: ghcr.io/belphemur/night-routine:latest\n    env_file:\n      - .env\n</code></pre></p>"},{"location":"configuration/environment/#security-best-practices","title":"Security Best Practices","text":""},{"location":"configuration/environment/#never-commit-secrets","title":"Never Commit Secrets","text":"<p>Add to <code>.gitignore</code>: <pre><code>.env\n*.env\nsecrets/\n</code></pre></p>"},{"location":"configuration/environment/#use-secret-management","title":"Use Secret Management","text":"<p>For production deployments, consider using:</p> <ul> <li>Docker Secrets - For Docker Swarm</li> <li>Kubernetes Secrets - For Kubernetes deployments</li> <li>HashiCorp Vault - For centralized secret management</li> <li>AWS Secrets Manager - For AWS deployments</li> <li>Azure Key Vault - For Azure deployments</li> </ul>"},{"location":"configuration/environment/#rotate-credentials-regularly","title":"Rotate Credentials Regularly","text":"<ul> <li>Rotate OAuth secrets every 90 days</li> <li>Use different credentials for different environments</li> <li>Monitor for unauthorized access</li> </ul>"},{"location":"configuration/environment/#restrict-permissions","title":"Restrict Permissions","text":"<ul> <li>Limit file permissions on <code>.env</code> files:     <pre><code>chmod 600 .env\n</code></pre></li> <li>Run the application with a non-root user</li> <li>Use principle of least privilege for OAuth scopes</li> </ul>"},{"location":"configuration/environment/#troubleshooting","title":"Troubleshooting","text":""},{"location":"configuration/environment/#variable-not-set-errors","title":"Variable Not Set Errors","text":"<p>If you see errors about missing environment variables:</p> <ol> <li> <p>Verify the variable is exported:     <pre><code>echo $GOOGLE_OAUTH_CLIENT_ID\n</code></pre></p> </li> <li> <p>Check for typos in variable names</p> </li> <li> <p>Ensure variables are exported before running the application</p> </li> </ol>"},{"location":"configuration/environment/#oauth-authentication-fails","title":"OAuth Authentication Fails","text":"<ol> <li>Verify credentials are correct in Google Cloud Console</li> <li>Check for extra whitespace in environment variables</li> <li>Ensure redirect URIs match your configuration</li> </ol>"},{"location":"configuration/environment/#configuration-file-not-found","title":"Configuration File Not Found","text":"<ol> <li>Verify <code>CONFIG_FILE</code> path is absolute or relative to working directory</li> <li>Check file exists and is readable</li> <li>Ensure proper file permissions</li> </ol>"},{"location":"configuration/environment/#next-steps","title":"Next Steps","text":"<ul> <li>Configure TOML settings</li> <li>Set up Google Calendar</li> <li>Complete first-time setup</li> </ul>"},{"location":"configuration/google-calendar/","title":"Google Calendar Setup","text":"<p>To use Night Routine Scheduler, you need to set up OAuth 2.0 credentials in Google Cloud Console and configure the Google Calendar API.</p>"},{"location":"configuration/google-calendar/#prerequisites","title":"Prerequisites","text":"<ul> <li>A Google account</li> <li>Access to Google Cloud Console</li> <li>A Google Calendar (can be your primary calendar or a dedicated one)</li> </ul>"},{"location":"configuration/google-calendar/#step-by-step-setup","title":"Step-by-Step Setup","text":""},{"location":"configuration/google-calendar/#1-create-a-google-cloud-project","title":"1. Create a Google Cloud Project","text":"<ol> <li>Go to the Google Cloud Console</li> <li>Click on the project dropdown at the top of the page</li> <li>Click \"New Project\"</li> <li>Enter a project name (e.g., \"Night Routine Scheduler\")</li> <li>Click \"Create\"</li> <li>Wait for the project to be created, then select it from the project dropdown</li> </ol>"},{"location":"configuration/google-calendar/#2-enable-the-google-calendar-api","title":"2. Enable the Google Calendar API","text":"<ol> <li>In the Google Cloud Console, go to APIs &amp; Services \u2192 Library</li> <li>Search for \"Google Calendar API\"</li> <li>Click on \"Google Calendar API\" in the results</li> <li>Click the \"Enable\" button</li> <li>Wait for the API to be enabled</li> </ol>"},{"location":"configuration/google-calendar/#3-configure-oauth-consent-screen","title":"3. Configure OAuth Consent Screen","text":"<ol> <li>Go to APIs &amp; Services \u2192 OAuth consent screen</li> <li>Select External user type (or Internal if you have a Google Workspace account)</li> <li> <p>Click \"Create\"</p> </li> <li> <p>Fill in the App Information:</p> <ul> <li>App name: <code>Night Routine Scheduler</code> (or your preferred name)</li> <li>User support email: Your email address</li> <li>App logo: (Optional) Upload a logo</li> <li>Application home page: (Optional) Your website</li> <li>Authorized domains: (Leave empty for local development)</li> <li>Developer contact information: Your email address</li> </ul> </li> <li> <p>Click \"Save and Continue\"</p> </li> <li> <p>Add Scopes:</p> <ul> <li>Click \"Add or Remove Scopes\"</li> <li>Filter for \"Google Calendar API\"</li> <li>Select the following scopes:<ul> <li><code>https://www.googleapis.com/auth/calendar</code> (See, edit, share, and permanently delete all calendars)</li> <li><code>https://www.googleapis.com/auth/calendar.events</code> (View and edit events on all your calendars)</li> </ul> </li> <li>Click \"Update\"</li> <li>Click \"Save and Continue\"</li> </ul> </li> <li> <p>Add Test Users (for External apps in testing):</p> <ul> <li>Click \"Add Users\"</li> <li>Add your email address and any other users who will test the app</li> <li>Click \"Add\"</li> <li>Click \"Save and Continue\"</li> </ul> </li> <li> <p>Review the summary and click \"Back to Dashboard\"</p> </li> </ol> <p>Publishing Status</p> <p>For personal use, you can leave the app in \"Testing\" status. Only test users will be able to authenticate. To use with more than 100 users, you'll need to submit the app for verification.</p>"},{"location":"configuration/google-calendar/#4-create-oauth-20-credentials","title":"4. Create OAuth 2.0 Credentials","text":"<ol> <li>Go to APIs &amp; Services \u2192 Credentials</li> <li>Click \"Create Credentials\" \u2192 \"OAuth client ID\"</li> <li>Select Application type: \"Web application\"</li> <li> <p>Name: <code>Night Routine Scheduler</code> (or your preferred name)</p> </li> <li> <p>Add Authorized Redirect URIs:</p> <p>For local development: <pre><code>http://localhost:8080/oauth/callback\n</code></pre></p> <p>For production (replace with your actual domain): <pre><code>https://night-routine.example.com/oauth/callback\n</code></pre></p> <p>Callback URL Format</p> <p>The callback URL must match: <code>&lt;app_url&gt;/oauth/callback</code></p> <p>Where <code>app_url</code> is the value in your <code>routine.toml</code> configuration.</p> </li> <li> <p>Click \"Create\"</p> </li> <li> <p>Save Your Credentials:</p> <ul> <li>A dialog will appear with your Client ID and Client Secret</li> <li>Copy both values - you'll need them for configuration</li> <li>You can also download the JSON file for backup</li> </ul> </li> </ol> <p>Keep Credentials Secret</p> <p>Never commit your Client Secret to version control or share it publicly. Treat it like a password.</p>"},{"location":"configuration/google-calendar/#5-configure-environment-variables","title":"5. Configure Environment Variables","text":"<p>Set the OAuth credentials as environment variables:</p> <pre><code>export GOOGLE_OAUTH_CLIENT_ID=\"123456789-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com\"\nexport GOOGLE_OAUTH_CLIENT_SECRET=\"GOCSPX-your-secret-here\"\n</code></pre> <p>Or add them to your <code>.env</code> file:</p> <pre><code>GOOGLE_OAUTH_CLIENT_ID=123456789-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com\nGOOGLE_OAUTH_CLIENT_SECRET=GOCSPX-your-secret-here\n</code></pre> <p>For Docker:</p> <pre><code>environment:\n  - GOOGLE_OAUTH_CLIENT_ID=123456789-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com\n  - GOOGLE_OAUTH_CLIENT_SECRET=GOCSPX-your-secret-here\n</code></pre>"},{"location":"configuration/google-calendar/#oauth-scopes-explained","title":"OAuth Scopes Explained","text":"<p>The application requires the following Google Calendar API scopes:</p> Scope Purpose <code>calendar</code> Full access to calendars - needed to create, update, and delete night routine events <code>calendar.events</code> Access to calendar events - needed to read and modify event details <p>Why Full Access?</p> <p>The application needs full calendar access to:</p> <ul> <li>Create all-day events for night routine assignments</li> <li>Update events when the schedule changes</li> <li>Delete events that are no longer needed</li> <li>Set up and manage webhook notifications</li> <li>Read event details to detect manual overrides</li> </ul>"},{"location":"configuration/google-calendar/#testing-the-setup","title":"Testing the Setup","text":""},{"location":"configuration/google-calendar/#1-start-the-application","title":"1. Start the Application","text":"<pre><code>./night-routine\n</code></pre> <p>Or with Docker:</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"configuration/google-calendar/#2-access-the-web-interface","title":"2. Access the Web Interface","text":"<p>Open your browser to the configured <code>app_url</code> (default: <code>http://localhost:8080</code>)</p>"},{"location":"configuration/google-calendar/#3-connect-to-google-calendar","title":"3. Connect to Google Calendar","text":"<ol> <li>Click the \"Connect Google Calendar\" button</li> <li>You'll be redirected to Google's OAuth consent screen</li> <li>Select your Google account</li> <li>Review the permissions requested</li> <li>Click \"Continue\" (or \"Allow\")</li> <li>You'll be redirected back to the application</li> </ol> <p>Unverified App Warning</p> <p>If your app is in \"Testing\" status, you'll see a warning that says \"Google hasn't verified this app.\" Click \"Advanced\" \u2192 \"Go to Night Routine Scheduler (unsafe)\" to proceed. This is normal for apps in testing mode.</p>"},{"location":"configuration/google-calendar/#4-select-a-calendar","title":"4. Select a Calendar","text":"<p>After authentication, you'll be redirected to the calendar selection page where you can choose which Google Calendar to use for night routine events.</p>"},{"location":"configuration/google-calendar/#production-deployment","title":"Production Deployment","text":""},{"location":"configuration/google-calendar/#domain-configuration","title":"Domain Configuration","text":"<p>For production deployments with a custom domain:</p> <ol> <li>Add your domain to Authorized Domains (in OAuth consent screen)</li> <li> <p>Add the production callback URL to Authorized Redirect URIs:     <pre><code>https://your-domain.com/oauth/callback\n</code></pre></p> </li> <li> <p>Update your configuration to match:     <pre><code>[app]\napp_url = \"https://your-domain.com\"\npublic_url = \"https://your-domain.com\"\n</code></pre></p> </li> </ol>"},{"location":"configuration/google-calendar/#https-requirements","title":"HTTPS Requirements","text":"<p>HTTPS Required for Production</p> <p>Google OAuth requires HTTPS for production deployments. Use a reverse proxy (nginx, Caddy, Traefik) with Let's Encrypt for SSL certificates.</p>"},{"location":"configuration/google-calendar/#multiple-environments","title":"Multiple Environments","text":"<p>If you have multiple environments (development, staging, production), create separate OAuth credentials for each:</p> <ol> <li>Create separate Google Cloud projects for each environment, or</li> <li>Create multiple OAuth clients in the same project with different redirect URIs</li> </ol> <p>Example:</p> Environment Redirect URI Development <code>http://localhost:8080/oauth/callback</code> Staging <code>https://staging.example.com/oauth/callback</code> Production <code>https://night-routine.example.com/oauth/callback</code>"},{"location":"configuration/google-calendar/#troubleshooting","title":"Troubleshooting","text":""},{"location":"configuration/google-calendar/#error-400-redirect_uri_mismatch","title":"\"Error 400: redirect_uri_mismatch\"","text":"<p>Cause: The redirect URI in your request doesn't match any of the authorized redirect URIs in Google Cloud Console.</p> <p>Solution:</p> <ol> <li>Check your <code>app_url</code> in <code>routine.toml</code></li> <li>Verify the callback URL is constructed as <code>&lt;app_url&gt;/oauth/callback</code></li> <li>Ensure this exact URL is added to Authorized Redirect URIs in Google Cloud Console</li> <li>Check for typos, trailing slashes, and protocol (http vs https)</li> </ol>"},{"location":"configuration/google-calendar/#access-blocked-this-apps-request-is-invalid","title":"\"Access Blocked: This app's request is invalid\"","text":"<p>Cause: OAuth consent screen is not properly configured.</p> <p>Solution:</p> <ol> <li>Complete all required fields in the OAuth consent screen</li> <li>Ensure scopes are added correctly</li> <li>If using \"External\" type in testing, add your email as a test user</li> </ol>"},{"location":"configuration/google-calendar/#this-app-is-blocked","title":"\"This app is blocked\"","text":"<p>Cause: The app is not published and you're not a test user.</p> <p>Solution:</p> <ol> <li>Go to OAuth consent screen in Google Cloud Console</li> <li>Add your email address to test users</li> <li>Or publish the app (requires verification for 100+ users)</li> </ol>"},{"location":"configuration/google-calendar/#calendar-api-has-not-been-used-in-project","title":"\"Calendar API has not been used in project\"","text":"<p>Cause: The Google Calendar API is not enabled for your project.</p> <p>Solution:</p> <ol> <li>Go to APIs &amp; Services \u2192 Library</li> <li>Search for \"Google Calendar API\"</li> <li>Click \"Enable\"</li> </ol>"},{"location":"configuration/google-calendar/#credentials-not-working","title":"Credentials Not Working","text":"<p>Checklist:</p> <ul> <li> Calendar API is enabled</li> <li> OAuth consent screen is configured</li> <li> Credentials are created as \"Web application\" type</li> <li> Redirect URI matches exactly (including protocol and path)</li> <li> Environment variables are set correctly</li> <li> No extra whitespace in environment variables</li> <li> Client Secret hasn't been regenerated (old secret is invalid)</li> </ul>"},{"location":"configuration/google-calendar/#security-best-practices","title":"Security Best Practices","text":""},{"location":"configuration/google-calendar/#protect-your-credentials","title":"Protect Your Credentials","text":"<ul> <li>Never commit credentials to version control</li> <li>Use environment variables or secret management systems</li> <li>Rotate Client Secret if it's ever exposed</li> <li>Use different credentials for development and production</li> </ul>"},{"location":"configuration/google-calendar/#limit-scope-access","title":"Limit Scope Access","text":"<ul> <li>Only request the scopes you need</li> <li>Review granted permissions regularly</li> <li>Revoke unused OAuth tokens</li> </ul>"},{"location":"configuration/google-calendar/#monitor-usage","title":"Monitor Usage","text":"<ul> <li>Check Google Cloud Console for unusual API usage</li> <li>Set up billing alerts</li> <li>Enable audit logs</li> </ul>"},{"location":"configuration/google-calendar/#restrict-access","title":"Restrict Access","text":"<ul> <li>Use \"Internal\" user type if you have Google Workspace</li> <li>Limit test users to trusted accounts</li> <li>Regularly review who has access to the app</li> </ul>"},{"location":"configuration/google-calendar/#managing-oauth-tokens","title":"Managing OAuth Tokens","text":"<p>OAuth tokens are stored in the SQLite database and automatically refreshed when needed.</p>"},{"location":"configuration/google-calendar/#viewing-token-status","title":"Viewing Token Status","text":"<p>The application shows authentication status on the home page.</p>"},{"location":"configuration/google-calendar/#revoking-access","title":"Revoking Access","text":"<p>To revoke access:</p> <ol> <li>Go to your Google Account Permissions</li> <li>Find \"Night Routine Scheduler\"</li> <li>Click \"Remove Access\"</li> <li>Restart the application and re-authenticate</li> </ol>"},{"location":"configuration/google-calendar/#token-refresh","title":"Token Refresh","text":"<p>Access tokens expire after 1 hour but are automatically refreshed using the stored refresh token. You don't need to do anything.</p>"},{"location":"configuration/google-calendar/#api-quotas-and-limits","title":"API Quotas and Limits","text":"<p>Google Calendar API has the following default limits:</p> <ul> <li>Queries per day: 1,000,000</li> <li>Queries per 100 seconds per user: 10,000</li> </ul> <p>Night Routine Scheduler is well within these limits for normal use:</p> <ul> <li>Initial setup: ~5-10 API calls</li> <li>Daily sync: ~2-5 API calls</li> <li>Webhook notifications: 1 API call per calendar change</li> </ul> <p>Monitoring Usage</p> <p>You can monitor your API usage in Google Cloud Console under APIs &amp; Services \u2192 Dashboard</p>"},{"location":"configuration/google-calendar/#next-steps","title":"Next Steps","text":"<ul> <li>Configure environment variables</li> <li>Set up TOML configuration</li> <li>Complete first-time setup</li> </ul>"},{"location":"configuration/toml/","title":"TOML Configuration","text":"<p>The main application configuration is stored in a TOML file. This file contains settings for the application, parents, scheduling, and service options.</p>"},{"location":"configuration/toml/#configuration-file-location","title":"Configuration File Location","text":"<p>The configuration file path is specified via the <code>CONFIG_FILE</code> environment variable:</p> <pre><code>export CONFIG_FILE=\"configs/routine.toml\"\n</code></pre>"},{"location":"configuration/toml/#complete-configuration-example","title":"Complete Configuration Example","text":"<pre><code>[app]\nport = 8080\napp_url = \"http://localhost:8080\"\npublic_url = \"http://localhost:8080\"\n\n[parents]\nparent_a = \"Parent1\"\nparent_b = \"Parent2\"\n\n[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\npast_event_threshold_days = 5\n\n[service]\nstate_file = \"data/state.db\"\nlog_level = \"info\"\nmanual_sync_on_startup = true\n</code></pre>"},{"location":"configuration/toml/#configuration-sections","title":"Configuration Sections","text":""},{"location":"configuration/toml/#app-application-settings","title":"<code>[app]</code> - Application Settings","text":""},{"location":"configuration/toml/#port","title":"<code>port</code>","text":"<p>Type: Integer Required: Yes Default: None</p> <p>The port on which the web server listens.</p> <pre><code>[app]\nport = 8080\n</code></pre> <p>Port Override</p> <p>Can be overridden by the <code>PORT</code> environment variable.</p>"},{"location":"configuration/toml/#app_url","title":"<code>app_url</code>","text":"<p>Type: String (URL) Required: Yes Default: None</p> <p>The internal application URL used for OAuth callbacks and general routes.</p> <pre><code>[app]\napp_url = \"http://localhost:8080\"\n</code></pre> <p>Examples: - Development: <code>http://localhost:8080</code> - Production (internal): <code>http://192.168.1.100:8080</code> - Production (behind proxy): <code>https://night-routine.example.com</code></p> <p>OAuth Configuration</p> <p>The OAuth callback URL is automatically constructed as <code>&lt;app_url&gt;/oauth/callback</code>. This must match the authorized redirect URI in your Google Cloud Console.</p>"},{"location":"configuration/toml/#public_url","title":"<code>public_url</code>","text":"<p>Type: String (URL) Required: Yes Default: None</p> <p>The publicly accessible URL for webhooks and external integrations.</p> <pre><code>[app]\npublic_url = \"http://localhost:8080\"\n</code></pre> <p>Examples: - Development: <code>http://localhost:8080</code> - Production: <code>https://night-routine.example.com</code> - With ngrok: <code>https://abc123.ngrok.io</code></p> <p>Internal vs Public URLs</p> <p>In production behind a reverse proxy:</p> <ul> <li><code>app_url</code>: Your internal network address</li> <li><code>public_url</code>: Your public domain name</li> </ul> <p>Example: <pre><code>app_url = \"http://192.168.1.100:8080\"\npublic_url = \"https://night-routine.example.com\"\n</code></pre></p>"},{"location":"configuration/toml/#parents-parent-configuration","title":"<code>[parents]</code> - Parent Configuration","text":""},{"location":"configuration/toml/#parent_a-and-parent_b","title":"<code>parent_a</code> and <code>parent_b</code>","text":"<p>Type: String Required: Yes Default: None</p> <p>Names of the two parents who will be assigned night routine duties.</p> <pre><code>[parents]\nparent_a = \"Alice\"\nparent_b = \"Bob\"\n</code></pre> <p>Validation</p> <ul> <li>Both names must be provided</li> <li>Names must be different from each other</li> <li>These names appear in calendar events as <code>[ParentName] \ud83c\udf03\ud83d\udc76Routine</code></li> </ul>"},{"location":"configuration/toml/#availability-availability-constraints","title":"<code>[availability]</code> - Availability Constraints","text":""},{"location":"configuration/toml/#parent_a_unavailable-and-parent_b_unavailable","title":"<code>parent_a_unavailable</code> and <code>parent_b_unavailable</code>","text":"<p>Type: Array of strings Required: No Default: <code>[]</code> (empty - always available)</p> <p>Days of the week when each parent is unavailable for night routine duties.</p> <pre><code>[availability]\nparent_a_unavailable = [\"Wednesday\", \"Friday\"]\nparent_b_unavailable = [\"Monday\", \"Thursday\"]\n</code></pre> <p>Valid day names: - <code>Monday</code>, <code>Tuesday</code>, <code>Wednesday</code>, <code>Thursday</code>, <code>Friday</code>, <code>Saturday</code>, <code>Sunday</code></p> <p>Case Sensitive</p> <p>Day names must be capitalized as shown above.</p> <p>Examples:</p> Weekend Parent OnlyWeekday SplitOne Day Off Each <pre><code>[availability]\nparent_a_unavailable = [\"Saturday\", \"Sunday\"]\nparent_b_unavailable = []\n</code></pre> <pre><code>[availability]\nparent_a_unavailable = [\"Monday\", \"Wednesday\", \"Friday\"]\nparent_b_unavailable = [\"Tuesday\", \"Thursday\"]\n</code></pre> <pre><code>[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n</code></pre>"},{"location":"configuration/toml/#schedule-scheduling-settings","title":"<code>[schedule]</code> - Scheduling Settings","text":""},{"location":"configuration/toml/#update_frequency","title":"<code>update_frequency</code>","text":"<p>Type: String Required: Yes Default: None Valid values: <code>daily</code>, <code>weekly</code>, <code>monthly</code></p> <p>How often the schedule should be automatically updated.</p> <pre><code>[schedule]\nupdate_frequency = \"weekly\"\n</code></pre> <ul> <li><code>daily</code> - Updates every day</li> <li><code>weekly</code> - Updates once per week</li> <li><code>monthly</code> - Updates once per month</li> </ul> <p>Recommendation</p> <p><code>weekly</code> is recommended for most users as it provides a good balance between keeping the schedule current and minimizing API calls.</p>"},{"location":"configuration/toml/#look_ahead_days","title":"<code>look_ahead_days</code>","text":"<p>Type: Integer Required: Yes Default: None Range: 1-365</p> <p>Number of days in advance to schedule night routine assignments.</p> <pre><code>[schedule]\nlook_ahead_days = 30\n</code></pre> <p>Use Cases</p> <ul> <li>7 days - Weekly planners</li> <li>14 days - Bi-weekly planners</li> <li>30 days - Monthly planners (recommended)</li> <li>90 days - Quarterly planners</li> </ul>"},{"location":"configuration/toml/#past_event_threshold_days","title":"<code>past_event_threshold_days</code>","text":"<p>Type: Integer Required: No Default: 5 Range: 0-30</p> <p>Number of days in the past to accept manual event changes via Google Calendar.</p> <pre><code>[schedule]\npast_event_threshold_days = 5\n</code></pre> <p>This setting controls the window for manual overrides:</p> <ul> <li><code>0</code> - No past changes accepted (only future events)</li> <li><code>5</code> - Accept changes up to 5 days ago (default)</li> <li><code>14</code> - Accept changes up to 2 weeks ago</li> <li><code>30</code> - Accept changes up to 1 month ago</li> </ul> <p>Purpose</p> <p>Prevents old assignments from being accidentally modified, which could affect fairness calculations.</p>"},{"location":"configuration/toml/#service-service-settings","title":"<code>[service]</code> - Service Settings","text":""},{"location":"configuration/toml/#state_file","title":"<code>state_file</code>","text":"<p>Type: String (file path) Required: Yes Default: None</p> <p>Path to the SQLite database file for persistent storage.</p> <pre><code>[service]\nstate_file = \"data/state.db\"\n</code></pre> <p>Path handling: - Relative paths are resolved from the working directory - Absolute paths are used as-is - Parent directories must exist</p> <p>Docker Deployment</p> <p>Use a path inside a mounted volume to persist data: <pre><code>state_file = \"data/state.db\"\n</code></pre> With volume mount: <code>-v ./data:/app/data</code></p>"},{"location":"configuration/toml/#log_level","title":"<code>log_level</code>","text":"<p>Type: String Required: No Default: <code>info</code> Valid values: <code>trace</code>, <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>fatal</code>, <code>panic</code></p> <p>Logging verbosity level.</p> <pre><code>[service]\nlog_level = \"info\"\n</code></pre> <p>Level descriptions:</p> Level Description Use Case <code>trace</code> Very detailed logging Deep debugging <code>debug</code> Detailed debug info Development, troubleshooting <code>info</code> General information Production (recommended) <code>warn</code> Warning messages Production <code>error</code> Error messages only Production (minimal logging) <code>fatal</code> Fatal errors only Not recommended <code>panic</code> Panic level only Not recommended <p>Performance</p> <p>Lower log levels (trace, debug) can impact performance and generate large log files.</p>"},{"location":"configuration/toml/#manual_sync_on_startup","title":"<code>manual_sync_on_startup</code>","text":"<p>Type: Boolean Required: No Default: <code>true</code></p> <p>Whether to perform a schedule synchronization when the application starts.</p> <pre><code>[service]\nmanual_sync_on_startup = true\n</code></pre> <ul> <li><code>true</code> - Sync schedule on startup (default)</li> <li><code>false</code> - Don't sync on startup</li> </ul> <p>When to Disable</p> <p>You might want to set this to <code>false</code> if:</p> <ul> <li>You restart the application frequently</li> <li>You want to control syncs manually</li> <li>You're testing and don't want API calls on every restart</li> </ul>"},{"location":"configuration/toml/#validation","title":"Validation","text":"<p>The application validates the configuration on startup. Common validation errors:</p>"},{"location":"configuration/toml/#missing-required-fields","title":"Missing Required Fields","text":"<pre><code>Error: missing required configuration: parents.parent_a\n</code></pre> <p>Solution: Add the missing field to your configuration.</p>"},{"location":"configuration/toml/#invalid-values","title":"Invalid Values","text":"<pre><code>Error: invalid update_frequency: 'biweekly' (must be daily, weekly, or monthly)\n</code></pre> <p>Solution: Use one of the valid values.</p>"},{"location":"configuration/toml/#same-parent-names","title":"Same Parent Names","text":"<pre><code>Error: parent_a and parent_b must have different names\n</code></pre> <p>Solution: Ensure parent names are unique.</p>"},{"location":"configuration/toml/#invalid-url-format","title":"Invalid URL Format","text":"<pre><code>Error: app_url must be a valid URL (e.g., http://localhost:8080)\n</code></pre> <p>Solution: Provide a complete URL with protocol.</p>"},{"location":"configuration/toml/#complete-examples","title":"Complete Examples","text":""},{"location":"configuration/toml/#basic-configuration","title":"Basic Configuration","text":"<pre><code>[app]\nport = 8080\napp_url = \"http://localhost:8080\"\npublic_url = \"http://localhost:8080\"\n\n[parents]\nparent_a = \"Alice\"\nparent_b = \"Bob\"\n\n[availability]\nparent_a_unavailable = []\nparent_b_unavailable = []\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\n\n[service]\nstate_file = \"data/state.db\"\nlog_level = \"info\"\n</code></pre>"},{"location":"configuration/toml/#production-configuration","title":"Production Configuration","text":"<pre><code>[app]\nport = 8080\napp_url = \"http://192.168.1.100:8080\"\npublic_url = \"https://night-routine.example.com\"\n\n[parents]\nparent_a = \"Parent One\"\nparent_b = \"Parent Two\"\n\n[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\npast_event_threshold_days = 7\n\n[service]\nstate_file = \"/var/lib/night-routine/state.db\"\nlog_level = \"warn\"\nmanual_sync_on_startup = false\n</code></pre>"},{"location":"configuration/toml/#development-configuration","title":"Development Configuration","text":"<pre><code>[app]\nport = 3000\napp_url = \"http://localhost:3000\"\npublic_url = \"http://localhost:3000\"\n\n[parents]\nparent_a = \"TestParentA\"\nparent_b = \"TestParentB\"\n\n[availability]\nparent_a_unavailable = []\nparent_b_unavailable = []\n\n[schedule]\nupdate_frequency = \"daily\"\nlook_ahead_days = 7\npast_event_threshold_days = 1\n\n[service]\nstate_file = \"test-data/state.db\"\nlog_level = \"debug\"\nmanual_sync_on_startup = true\n</code></pre>"},{"location":"configuration/toml/#next-steps","title":"Next Steps","text":"<ul> <li>Set up environment variables</li> <li>Configure Google Calendar</li> <li>Complete first-time setup</li> </ul>"},{"location":"development/contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to Night Routine Scheduler! This guide will help you get started.</p>"},{"location":"development/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project follows the Contributor Covenant Code of Conduct. By participating, you are expected to uphold this code.</p>"},{"location":"development/contributing/#ways-to-contribute","title":"Ways to Contribute","text":"<ul> <li>\ud83d\udc1b Report bugs</li> <li>\ud83d\udca1 Suggest new features</li> <li>\ud83d\udcdd Improve documentation</li> <li>\u2728 Submit code changes</li> <li>\ud83d\udd0d Review pull requests</li> <li>\u2753 Answer questions in issues/discussions</li> </ul>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":""},{"location":"development/contributing/#1-fork-and-clone","title":"1. Fork and Clone","text":"<pre><code># Fork the repository on GitHub\n# Then clone your fork\ngit clone https://github.com/YOUR_USERNAME/night-routine.git\ncd night-routine\n\n# Add upstream remote\ngit remote add upstream https://github.com/Belphemur/night-routine.git\n</code></pre>"},{"location":"development/contributing/#2-set-up-development-environment","title":"2. Set Up Development Environment","text":"<p>Follow the Local Development Guide to set up your environment.</p>"},{"location":"development/contributing/#3-create-a-branch","title":"3. Create a Branch","text":"<pre><code># Fetch latest changes\ngit fetch upstream\ngit checkout main\ngit merge upstream/main\n\n# Create a feature branch\ngit checkout -b feature/my-feature\n</code></pre> <p>Branch naming conventions: - <code>feature/</code> - New features - <code>fix/</code> - Bug fixes - <code>docs/</code> - Documentation changes - <code>refactor/</code> - Code refactoring - <code>test/</code> - Test additions/changes</p>"},{"location":"development/contributing/#reporting-bugs","title":"Reporting Bugs","text":""},{"location":"development/contributing/#before-reporting","title":"Before Reporting","text":"<ol> <li>Check if the bug has already been reported in Issues</li> <li>Try to reproduce the bug with the latest version</li> <li>Gather relevant information (logs, configuration, steps to reproduce)</li> </ol>"},{"location":"development/contributing/#bug-report-template","title":"Bug Report Template","text":"<pre><code>**Describe the bug**\nA clear and concise description of what the bug is.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Configure with '...'\n2. Click on '....'\n3. See error\n\n**Expected behavior**\nWhat you expected to happen.\n\n**Screenshots**\nIf applicable, add screenshots.\n\n**Environment:**\n- OS: [e.g., Ubuntu 22.04]\n- Deployment: [Docker/Binary/Docker Compose]\n- Version: [e.g., v1.2.0]\n\n**Configuration:**\n```toml\n[Relevant config sections with sensitive data removed]\n</code></pre> <p>Logs: <pre><code>[Relevant log output]\n</code></pre></p> <p>Additional context Any other context about the problem. <pre><code>## Suggesting Features\n\n### Feature Request Template\n\n```markdown\n**Is your feature request related to a problem?**\nA clear description of the problem. Ex. I'm always frustrated when [...]\n\n**Describe the solution you'd like**\nA clear description of what you want to happen.\n\n**Describe alternatives you've considered**\nOther solutions you've thought about.\n\n**Additional context**\nAny other context, screenshots, or examples.\n</code></pre></p>"},{"location":"development/contributing/#code-contributions","title":"Code Contributions","text":""},{"location":"development/contributing/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a branch from <code>main</code></li> <li>Make your changes</li> <li>Write/update tests</li> <li>Run linters and tests</li> <li>Commit with conventional commits</li> <li>Push to your fork</li> <li>Open a pull request</li> </ol>"},{"location":"development/contributing/#coding-standards","title":"Coding Standards","text":""},{"location":"development/contributing/#go-style-guide","title":"Go Style Guide","text":"<p>Follow Effective Go and Go Code Review Comments.</p> <p>Key points: - Use <code>gofmt</code> for formatting - Keep functions small and focused - Write clear variable names - Add comments for exported functions - Handle errors explicitly</p> <p>Example: <pre><code>// CalculateFairness determines which parent should be assigned\n// based on historical assignments and configured availability.\n// It returns the chosen parent and the decision reason.\nfunc CalculateFairness(config Config, date time.Time) (string, Reason, error) {\n    if err := validateConfig(config); err != nil {\n        return \"\", \"\", fmt.Errorf(\"invalid config: %w\", err)\n    }\n\n    // Implementation...\n    return parent, reason, nil\n}\n</code></pre></p>"},{"location":"development/contributing/#code-organization","title":"Code Organization","text":"<pre><code>internal/\n\u251c\u2500\u2500 package/              # Package directory\n\u2502   \u251c\u2500\u2500 package.go       # Main package logic\n\u2502   \u251c\u2500\u2500 package_test.go  # Tests\n\u2502   \u251c\u2500\u2500 types.go         # Type definitions (if many types)\n\u2502   \u2514\u2500\u2500 README.md        # Package documentation (for complex packages)\n</code></pre>"},{"location":"development/contributing/#linting","title":"Linting","text":"<p>Pass <code>golangci-lint</code> checks:</p> <pre><code>golangci-lint run\n</code></pre> <p>Fix automatically when possible: <pre><code>golangci-lint run --fix\n</code></pre></p>"},{"location":"development/contributing/#testing-requirements","title":"Testing Requirements","text":""},{"location":"development/contributing/#test-coverage","title":"Test Coverage","text":"<ul> <li>All new code must include tests</li> <li>Maintain or improve overall coverage</li> <li>Aim for 70%+ coverage on new code</li> </ul> <p>Run tests: <pre><code>go test -v -cover ./...\n</code></pre></p>"},{"location":"development/contributing/#test-quality","title":"Test Quality","text":"<ul> <li>Use table-driven tests for multiple scenarios</li> <li>Test edge cases and error conditions</li> <li>Use meaningful test names</li> <li>Keep tests independent</li> </ul> <p>Example: <pre><code>func TestParentAssignment(t *testing.T) {\n    tests := []struct {\n        name           string\n        availability   Availability\n        date           time.Time\n        expectedParent string\n        expectedReason Reason\n    }{\n        {\n            name: \"parent A unavailable on Monday\",\n            availability: Availability{\n                ParentAUnavailable: []string{\"Monday\"},\n            },\n            date:           parseDate(\"2024-01-01\"), // Monday\n            expectedParent: \"ParentB\",\n            expectedReason: Unavailability,\n        },\n        // More test cases...\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            parent, reason, err := AssignParent(tt.availability, tt.date)\n            require.NoError(t, err)\n            assert.Equal(t, tt.expectedParent, parent)\n            assert.Equal(t, tt.expectedReason, reason)\n        })\n    }\n}\n</code></pre></p>"},{"location":"development/contributing/#commit-messages","title":"Commit Messages","text":"<p>Follow Conventional Commits specification.</p> <p>Format: <pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n&lt;body&gt;\n\n&lt;footer&gt;\n</code></pre></p> <p>Types: - <code>feat</code>: New feature - <code>fix</code>: Bug fix - <code>docs</code>: Documentation changes - <code>test</code>: Test additions/changes - <code>refactor</code>: Code refactoring - <code>perf</code>: Performance improvements - <code>chore</code>: Maintenance tasks - <code>ci</code>: CI/CD changes</p> <p>Examples:</p> <pre><code># Simple feature\nfeat: add monthly statistics export\n\n# Bug fix with details\nfix(fairness): correct consecutive limit calculation\n\nPreviously, the consecutive limit was not properly reset\nwhen a parent became unavailable, leading to incorrect\nassignments.\n\nFixes #123\n\n# Breaking change\nfeat(config)!: change TOML structure for parent settings\n\nBREAKING CHANGE: Parent configuration now uses nested\nstructure instead of flat fields. Update your config:\n\nBefore:\n  parent_a = \"Alice\"\n\nAfter:\n  [parents]\n  parent_a = \"Alice\"\n</code></pre>"},{"location":"development/contributing/#pull-request-process","title":"Pull Request Process","text":""},{"location":"development/contributing/#before-submitting","title":"Before Submitting","text":"<ul> <li> Tests pass locally</li> <li> Linters pass</li> <li> Code is formatted (<code>gofmt -s -w .</code>)</li> <li> Documentation updated (if needed)</li> <li> CHANGELOG.md updated (for notable changes)</li> <li> Commit messages follow conventions</li> </ul>"},{"location":"development/contributing/#pull-request-template","title":"Pull Request Template","text":"<pre><code>## Description\nBrief description of what this PR does.\n\n## Type of Change\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] Documentation update\n\n## Related Issue\nFixes #(issue number)\n\n## Changes Made\n- Change 1\n- Change 2\n- Change 3\n\n## Testing\nDescribe how you tested your changes.\n\n## Screenshots (if applicable)\nAdd screenshots for UI changes.\n\n## Checklist\n- [ ] Tests pass locally\n- [ ] Linters pass (`golangci-lint run`)\n- [ ] Code formatted (`gofmt -s -l .`)\n- [ ] Added tests for new features\n- [ ] Updated documentation\n- [ ] Updated CHANGELOG.md\n- [ ] Followed commit message conventions\n</code></pre>"},{"location":"development/contributing/#review-process","title":"Review Process","text":"<ol> <li>Automated checks run (linting, tests, build)</li> <li>Maintainers review code</li> <li>Address feedback if requested</li> <li>CI passes all checks</li> <li>Merge by maintainer</li> </ol> <p>Timeline: - Initial response: Within 1-3 days - Full review: Within 1 week - Be patient and responsive to feedback</p>"},{"location":"development/contributing/#documentation-contributions","title":"Documentation Contributions","text":""},{"location":"development/contributing/#documentation-structure","title":"Documentation Structure","text":"<p>Documentation is written in Markdown and built with MkDocs Material.</p> <pre><code>docs-site/\n\u251c\u2500\u2500 index.md\n\u251c\u2500\u2500 features.md\n\u251c\u2500\u2500 installation/\n\u251c\u2500\u2500 configuration/\n\u251c\u2500\u2500 user-guide/\n\u251c\u2500\u2500 architecture/\n\u251c\u2500\u2500 development/\n\u2514\u2500\u2500 api-reference.md\n</code></pre>"},{"location":"development/contributing/#writing-documentation","title":"Writing Documentation","text":"<p>Guidelines: - Use clear, concise language - Include code examples - Add screenshots for UI features - Use admonitions for important notes - Link to related pages</p> <p>Example admonitions: <pre><code>!!! note \"Configuration Note\"\n    This setting requires a restart.\n\n!!! warning \"Breaking Change\"\n    This feature changes the API.\n\n!!! tip \"Pro Tip\"\n    Use this for better performance.\n\n!!! danger \"Security Warning\"\n    Never commit credentials.\n</code></pre></p>"},{"location":"development/contributing/#building-documentation-locally","title":"Building Documentation Locally","text":"<pre><code># Install MkDocs and dependencies\npip install mkdocs-material\n\n# Serve documentation locally\nmkdocs serve\n\n# Open http://localhost:8000\n</code></pre>"},{"location":"development/contributing/#release-process","title":"Release Process","text":"<p>Releases are automated via semantic-release and GitHub Actions.</p>"},{"location":"development/contributing/#semantic-versioning","title":"Semantic Versioning","text":"<p>We follow Semantic Versioning:</p> <ul> <li>MAJOR version for incompatible API changes</li> <li>MINOR version for new functionality (backward compatible)</li> <li>PATCH version for bug fixes (backward compatible)</li> </ul>"},{"location":"development/contributing/#release-workflow","title":"Release Workflow","text":"<ol> <li>Commits to <code>main</code> trigger semantic-release</li> <li>Semantic-release analyzes commit messages</li> <li>Version is determined automatically</li> <li>CHANGELOG is updated</li> <li>Git tag is created</li> <li>GitHub Release is created</li> <li>Binaries and Docker images are built</li> <li>Documentation is published</li> </ol>"},{"location":"development/contributing/#commit-message-impact","title":"Commit Message Impact","text":"Commit Type Release Type <code>fix:</code> PATCH (0.0.x) <code>feat:</code> MINOR (0.x.0) <code>BREAKING CHANGE:</code> MAJOR (x.0.0) <code>docs:</code>, <code>test:</code>, etc. No release"},{"location":"development/contributing/#community","title":"Community","text":""},{"location":"development/contributing/#getting-help","title":"Getting Help","text":"<ul> <li>Issues: For bugs and feature requests</li> <li>Discussions: For questions and ideas</li> <li>Discord/Slack: (If available) For real-time chat</li> </ul>"},{"location":"development/contributing/#recognition","title":"Recognition","text":"<p>Contributors are recognized in: - GitHub contributors list - Release notes (for significant contributions) - CHANGELOG.md</p>"},{"location":"development/contributing/#license","title":"License","text":"<p>By contributing, you agree that your contributions will be licensed under the AGPLv3 License.</p>"},{"location":"development/contributing/#questions","title":"Questions?","text":"<p>If you have questions about contributing: - Open an issue with the <code>question</code> label - Ask in Discussions - Reach out to maintainers</p> <p>Thank you for contributing to Night Routine Scheduler! \ud83c\udf89</p>"},{"location":"development/local/","title":"Local Development","text":"<p>This guide covers setting up a local development environment for contributing to Night Routine Scheduler.</p>"},{"location":"development/local/#prerequisites","title":"Prerequisites","text":"<ul> <li>Go 1.25 or later - Download</li> <li>Git - Download</li> <li>SQLite - Usually pre-installed on macOS/Linux</li> <li>Google OAuth Credentials - Setup Guide</li> <li>Code Editor - VS Code, GoLand, or your preferred editor</li> </ul>"},{"location":"development/local/#initial-setup","title":"Initial Setup","text":""},{"location":"development/local/#1-fork-and-clone","title":"1. Fork and Clone","text":"<pre><code># Fork the repository on GitHub\n# Then clone your fork\ngit clone https://github.com/YOUR_USERNAME/night-routine.git\ncd night-routine\n\n# Add upstream remote\ngit remote add upstream https://github.com/Belphemur/night-routine.git\n</code></pre>"},{"location":"development/local/#2-install-dependencies","title":"2. Install Dependencies","text":"<pre><code># Download Go dependencies\ngo mod download\n\n# Verify dependencies\ngo mod verify\n</code></pre>"},{"location":"development/local/#3-configure-environment","title":"3. Configure Environment","text":"<p>Create a <code>.env</code> file for development:</p> <pre><code>cat &gt; .env &lt;&lt; 'EOF'\nGOOGLE_OAUTH_CLIENT_ID=your-dev-client-id\nGOOGLE_OAUTH_CLIENT_SECRET=your-dev-client-secret\nCONFIG_FILE=configs/dev-routine.toml\nENV=development\nEOF\n</code></pre> <p>Create a development configuration:</p> <pre><code>mkdir -p configs test-data\n\ncat &gt; configs/dev-routine.toml &lt;&lt; 'EOF'\n[app]\nport = 8080\napp_url = \"http://localhost:8080\"\npublic_url = \"http://localhost:8080\"\n\n[parents]\nparent_a = \"DevParentA\"\nparent_b = \"DevParentB\"\n\n[availability]\nparent_a_unavailable = []\nparent_b_unavailable = []\n\n[schedule]\nupdate_frequency = \"daily\"\nlook_ahead_days = 7\npast_event_threshold_days = 1\n\n[service]\nstate_file = \"test-data/state.db\"\nlog_level = \"debug\"\nmanual_sync_on_startup = true\nEOF\n</code></pre>"},{"location":"development/local/#4-build-and-run","title":"4. Build and Run","text":"<pre><code># Build the application\ngo build -o night-routine ./cmd/night-routine/\n\n# Run the application\nsource .env  # Load environment variables\n./night-routine\n</code></pre>"},{"location":"development/local/#development-workflow","title":"Development Workflow","text":""},{"location":"development/local/#using-air-for-live-reload","title":"Using Air for Live Reload","text":"<p>Air automatically rebuilds and restarts your application when code changes.</p> <p>Install Air: <pre><code>go install github.com/air-verse/air@latest\n</code></pre></p> <p>Create <code>.air.toml</code>: <pre><code>cat &gt; .air.toml &lt;&lt; 'EOF'\nroot = \".\"\ntestdata_dir = \"testdata\"\ntmp_dir = \"tmp\"\n\n[build]\n  args_bin = []\n  bin = \"./tmp/main\"\n  cmd = \"go build -o ./tmp/main ./cmd/night-routine\"\n  delay = 1000\n  exclude_dir = [\"assets\", \"tmp\", \"vendor\", \"testdata\", \"test-data\", \"docs\", \"docs-site\"]\n  exclude_file = []\n  exclude_regex = [\"_test.go\"]\n  exclude_unchanged = false\n  follow_symlink = false\n  full_bin = \"\"\n  include_dir = []\n  include_ext = [\"go\", \"tpl\", \"tmpl\", \"html\"]\n  include_file = []\n  kill_delay = \"0s\"\n  log = \"build-errors.log\"\n  poll = false\n  poll_interval = 0\n  rerun = false\n  rerun_delay = 500\n  send_interrupt = false\n  stop_on_error = false\n\n[color]\n  app = \"\"\n  build = \"yellow\"\n  main = \"magenta\"\n  runner = \"green\"\n  watcher = \"cyan\"\n\n[log]\n  main_only = false\n  time = false\n\n[misc]\n  clean_on_exit = false\n\n[screen]\n  clear_on_rebuild = false\n  keep_scroll = true\nEOF\n</code></pre></p> <p>Run with Air: <pre><code>source .env\nair\n</code></pre></p> <p>Now your application will automatically rebuild when you save changes.</p>"},{"location":"development/local/#ide-setup","title":"IDE Setup","text":""},{"location":"development/local/#vs-code","title":"VS Code","text":"<p>Recommended extensions: - Go (golang.go) - Go Test Explorer - SQLite Viewer - Better TOML</p> <p>settings.json: <pre><code>{\n  \"go.useLanguageServer\": true,\n  \"go.lintTool\": \"golangci-lint\",\n  \"go.lintOnSave\": \"workspace\",\n  \"go.formatTool\": \"gofmt\",\n  \"go.testFlags\": [\"-v\"],\n  \"[go]\": {\n    \"editor.formatOnSave\": true,\n    \"editor.codeActionsOnSave\": {\n      \"source.organizeImports\": true\n    }\n  }\n}\n</code></pre></p> <p>launch.json (debugging): <pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Launch Night Routine\",\n      \"type\": \"go\",\n      \"request\": \"launch\",\n      \"mode\": \"debug\",\n      \"program\": \"${workspaceFolder}/cmd/night-routine\",\n      \"env\": {\n        \"GOOGLE_OAUTH_CLIENT_ID\": \"${env:GOOGLE_OAUTH_CLIENT_ID}\",\n        \"GOOGLE_OAUTH_CLIENT_SECRET\": \"${env:GOOGLE_OAUTH_CLIENT_SECRET}\",\n        \"CONFIG_FILE\": \"configs/dev-routine.toml\",\n        \"ENV\": \"development\"\n      }\n    }\n  ]\n}\n</code></pre></p>"},{"location":"development/local/#goland-intellij-idea","title":"GoLand / IntelliJ IDEA","text":"<ol> <li>Open the project directory</li> <li>GoLand should automatically detect it as a Go project</li> <li>Set environment variables in Run Configuration:</li> <li>Edit Configurations \u2192 Go Build</li> <li>Add environment variables</li> <li>Enable golangci-lint integration in Preferences \u2192 Tools \u2192 File Watchers</li> </ol>"},{"location":"development/local/#code-quality","title":"Code Quality","text":""},{"location":"development/local/#linting","title":"Linting","text":"<p>The project uses <code>golangci-lint</code> for comprehensive code linting.</p> <p>Install: <pre><code># macOS\nbrew install golangci-lint\n\n# Linux\ncurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin\n\n# Windows (using Scoop)\nscoop install golangci-lint\n</code></pre></p> <p>Run linter: <pre><code>golangci-lint run\n</code></pre></p> <p>Auto-fix issues: <pre><code>golangci-lint run --fix\n</code></pre></p> <p>Configuration: See <code>.golangci.yml</code> in the repository root.</p>"},{"location":"development/local/#formatting","title":"Formatting","text":"<p>Format code: <pre><code># Format all files\ngofmt -s -w .\n\n# Check formatting without modifying\ngofmt -s -l .\n</code></pre></p> <p>Verify formatting (CI style): <pre><code>if [ \"$(gofmt -s -l . | wc -l)\" -gt 0 ]; then\n  echo \"Code is not formatted!\"\n  gofmt -s -l .\n  exit 1\nfi\n</code></pre></p>"},{"location":"development/local/#testing","title":"Testing","text":""},{"location":"development/local/#running-tests","title":"Running Tests","text":"<p>Run all tests: <pre><code>go test -v ./...\n</code></pre></p> <p>Run tests with coverage: <pre><code>go test -v -cover ./...\n</code></pre></p> <p>Generate coverage report: <pre><code>go test -coverprofile=coverage.out ./...\ngo tool cover -html=coverage.out -o coverage.html\nopen coverage.html  # macOS\nxdg-open coverage.html  # Linux\n</code></pre></p> <p>Run specific package: <pre><code>go test -v ./internal/fairness/...\n</code></pre></p> <p>Run specific test: <pre><code>go test -v -run TestFairnessAlgorithm ./internal/fairness/\n</code></pre></p>"},{"location":"development/local/#writing-tests","title":"Writing Tests","text":"<p>Tests should be placed in <code>*_test.go</code> files alongside the code they test.</p> <p>Example test structure: <pre><code>package fairness\n\nimport (\n    \"testing\"\n    \"github.com/stretchr/testify/assert\"\n)\n\nfunc TestAssignmentLogic(t *testing.T) {\n    t.Run(\"alternating pattern\", func(t *testing.T) {\n        // Test setup\n        // Test execution\n        // Assertions\n        assert.Equal(t, expected, actual)\n    })\n\n    t.Run(\"unavailability\", func(t *testing.T) {\n        // ...\n    })\n}\n</code></pre></p>"},{"location":"development/local/#test-coverage-goals","title":"Test Coverage Goals","text":"<ul> <li>Overall: 70%+ coverage</li> <li>Core logic: 80%+ coverage (fairness, scheduler)</li> <li>Handlers: 60%+ coverage (web handlers)</li> <li>Utilities: 50%+ coverage</li> </ul>"},{"location":"development/local/#debugging","title":"Debugging","text":""},{"location":"development/local/#using-delve-debugger","title":"Using Delve Debugger","text":"<p>Install Delve: <pre><code>go install github.com/go-delve/delve/cmd/dlv@latest\n</code></pre></p> <p>Debug with Delve: <pre><code># Debug main package\ndlv debug ./cmd/night-routine\n\n# Set breakpoint\n(dlv) break main.main\n(dlv) break internal/fairness/fairness.go:42\n\n# Continue execution\n(dlv) continue\n\n# Step through code\n(dlv) next\n(dlv) step\n\n# Inspect variables\n(dlv) print variableName\n(dlv) locals\n\n# Exit\n(dlv) quit\n</code></pre></p> <p>Attach to running process: <pre><code># Get PID\nps aux | grep night-routine\n\n# Attach debugger\ndlv attach &lt;pid&gt;\n</code></pre></p>"},{"location":"development/local/#debug-logging","title":"Debug Logging","text":"<p>Set log level to debug or trace for detailed output:</p> <pre><code>[service]\nlog_level = \"debug\"  # or \"trace\"\n</code></pre> <p>Log output shows: - HTTP requests and responses - Database queries - Fairness calculations - Google Calendar API calls - Webhook processing</p>"},{"location":"development/local/#database-development","title":"Database Development","text":""},{"location":"development/local/#inspecting-the-database","title":"Inspecting the Database","text":"<pre><code># Open database in SQLite CLI\nsqlite3 test-data/state.db\n\n# View schema\n.schema\n\n# Query data\nSELECT * FROM assignments ORDER BY date DESC LIMIT 10;\nSELECT * FROM oauth_tokens;\nSELECT * FROM calendar_settings;\n\n# Exit\n.quit\n</code></pre>"},{"location":"development/local/#database-migrations","title":"Database Migrations","text":"<p>Creating a new migration:</p> <ol> <li> <p>Create up and down migration files:    <pre><code># In internal/database/migrations/\ntouch 000003_my_migration.up.sql\ntouch 000003_my_migration.down.sql\n</code></pre></p> </li> <li> <p>Write the migration:    <pre><code>-- 000003_my_migration.up.sql\nALTER TABLE assignments ADD COLUMN new_field TEXT;\nCREATE INDEX idx_assignments_new_field ON assignments(new_field);\n</code></pre></p> </li> </ol> <pre><code>-- 000003_my_migration.down.sql\nDROP INDEX IF EXISTS idx_assignments_new_field;\nALTER TABLE assignments DROP COLUMN new_field;\n</code></pre> <ol> <li>Test the migration:    <pre><code># Migrations run automatically on app startup\n./night-routine\n</code></pre></li> </ol> <p>Note: Migrations are embedded in the binary via <code>//go:embed</code> directives.</p>"},{"location":"development/local/#common-development-tasks","title":"Common Development Tasks","text":""},{"location":"development/local/#testing-google-calendar-integration","title":"Testing Google Calendar Integration","text":"<p>For local development without hitting Google APIs, you can:</p> <ol> <li>Use test credentials in <code>.env</code></li> <li>Mock the Calendar API in tests</li> <li>Use a dedicated test calendar in your Google account</li> </ol>"},{"location":"development/local/#testing-webhooks-locally","title":"Testing Webhooks Locally","text":"<p>Google Calendar webhooks require a publicly accessible URL. Options:</p> <p>Option 1: ngrok <pre><code># Install ngrok\nbrew install ngrok  # macOS\n\n# Start ngrok tunnel\nngrok http 8080\n\n# Update public_url in config\npublic_url = \"https://abc123.ngrok.io\"\n</code></pre></p> <p>Option 2: localhost.run <pre><code># No installation needed\nssh -R 80:localhost:8080 localhost.run\n\n# Use the provided URL in public_url\n</code></pre></p> <p>Option 3: Skip webhooks - Set <code>manual_sync_on_startup = false</code> - Use \"Sync Now\" button instead of webhooks</p>"},{"location":"development/local/#resetting-development-database","title":"Resetting Development Database","text":"<pre><code># Stop the application\n# Delete the database\nrm test-data/state.db test-data/state.db-*\n\n# Restart - fresh database will be created\n./night-routine\n</code></pre>"},{"location":"development/local/#contribution-guidelines","title":"Contribution Guidelines","text":""},{"location":"development/local/#code-style","title":"Code Style","text":"<ul> <li>Follow Effective Go</li> <li>Use <code>gofmt</code> for formatting</li> <li>Pass <code>golangci-lint</code> checks</li> <li>Write meaningful commit messages</li> <li>Add comments for exported functions</li> </ul>"},{"location":"development/local/#commit-messages","title":"Commit Messages","text":"<p>Follow Conventional Commits:</p> <pre><code>feat: add new assignment reason type\nfix: correct consecutive limit calculation\ndocs: update configuration guide\ntest: add tests for fairness algorithm\nrefactor: simplify webhook handling\n</code></pre>"},{"location":"development/local/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Fork the repository</li> <li>Create a feature branch: <code>git checkout -b feature/my-feature</code></li> <li>Make your changes</li> <li>Add tests</li> <li>Run linters and tests</li> <li>Commit with conventional commit messages</li> <li>Push to your fork</li> <li>Open a pull request</li> </ol>"},{"location":"development/local/#pr-checklist","title":"PR Checklist","text":"<ul> <li> Tests pass locally</li> <li> Linters pass (<code>golangci-lint run</code>)</li> <li> Code is formatted (<code>gofmt</code>)</li> <li> Added tests for new features</li> <li> Updated documentation if needed</li> <li> Commit messages follow conventions</li> </ul>"},{"location":"development/local/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/local/#build-errors","title":"Build Errors","text":"<p>Module issues: <pre><code>go mod tidy\ngo mod verify\n</code></pre></p> <p>Stale cache: <pre><code>go clean -cache -modcache -testcache\ngo mod download\n</code></pre></p>"},{"location":"development/local/#test-failures","title":"Test Failures","text":"<p>Database locks: - Ensure only one test instance runs at a time - Use separate test databases: <code>state_test.db</code> - Close database connections in tests</p> <p>Time-dependent tests: - Mock time in tests - Use relative dates instead of absolute - Account for timezone differences</p>"},{"location":"development/local/#next-steps","title":"Next Steps","text":"<ul> <li>Run tests</li> <li>Read contributing guidelines</li> <li>Understand the architecture</li> </ul>"},{"location":"development/testing/","title":"Testing","text":"<p>Night Routine Scheduler includes comprehensive tests to ensure reliability and correctness.</p>"},{"location":"development/testing/#test-structure","title":"Test Structure","text":"<p>Tests are organized alongside the code they test:</p> <pre><code>internal/\n\u251c\u2500\u2500 fairness/\n\u2502   \u251c\u2500\u2500 fairness.go\n\u2502   \u2514\u2500\u2500 fairness_test.go\n\u251c\u2500\u2500 database/\n\u2502   \u251c\u2500\u2500 database.go\n\u2502   \u2514\u2500\u2500 database_test.go\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"development/testing/#running-tests","title":"Running Tests","text":""},{"location":"development/testing/#all-tests","title":"All Tests","text":"<pre><code>go test -v ./...\n</code></pre>"},{"location":"development/testing/#specific-package","title":"Specific Package","text":"<pre><code>go test -v ./internal/fairness/\n</code></pre>"},{"location":"development/testing/#specific-test","title":"Specific Test","text":"<pre><code>go test -v -run TestFairnessAlgorithm ./internal/fairness/\n</code></pre>"},{"location":"development/testing/#with-coverage","title":"With Coverage","text":"<pre><code>go test -v -cover ./...\n</code></pre>"},{"location":"development/testing/#race-detection","title":"Race Detection","text":"<pre><code>go test -v -race ./...\n</code></pre>"},{"location":"development/testing/#test-types","title":"Test Types","text":""},{"location":"development/testing/#unit-tests","title":"Unit Tests","text":"<p>Test individual functions and components in isolation.</p> <p>Location: <code>*_test.go</code> files next to source code</p> <p>Example: <pre><code>func TestAssignmentDecision(t *testing.T) {\n    t.Run(\"unavailability takes precedence\", func(t *testing.T) {\n        // Arrange\n        config := Config{\n            ParentA: \"Alice\",\n            ParentB: \"Bob\",\n            Availability: Availability{\n                ParentAUnavailable: []string{\"Monday\"},\n            },\n        }\n\n        // Act\n        assignment := DecideAssignment(config, Monday)\n\n        // Assert\n        assert.Equal(t, \"Bob\", assignment.Parent)\n        assert.Equal(t, Unavailability, assignment.Reason)\n    })\n}\n</code></pre></p>"},{"location":"development/testing/#integration-tests","title":"Integration Tests","text":"<p>Test interaction between components.</p> <p>Example: Database operations, API calls, webhook handling</p> <pre><code>func TestDatabaseAssignmentStorage(t *testing.T) {\n    // Create test database\n    db := setupTestDB(t)\n    defer cleanupTestDB(t, db)\n\n    // Create and store assignment\n    assignment := Assignment{\n        Date: time.Now(),\n        Parent: \"Alice\",\n        Reason: \"Alternating\",\n    }\n    err := db.SaveAssignment(assignment)\n\n    // Verify storage\n    assert.NoError(t, err)\n    retrieved, err := db.GetAssignment(assignment.Date)\n    assert.NoError(t, err)\n    assert.Equal(t, assignment.Parent, retrieved.Parent)\n}\n</code></pre>"},{"location":"development/testing/#table-driven-tests","title":"Table-Driven Tests","text":"<p>Test multiple scenarios with the same logic.</p> <pre><code>func TestParentNameValidation(t *testing.T) {\n    tests := []struct {\n        name      string\n        parentA   string\n        parentB   string\n        wantError bool\n    }{\n        {\n            name:      \"valid names\",\n            parentA:   \"Alice\",\n            parentB:   \"Bob\",\n            wantError: false,\n        },\n        {\n            name:      \"duplicate names\",\n            parentA:   \"Alice\",\n            parentB:   \"Alice\",\n            wantError: true,\n        },\n        {\n            name:      \"empty name\",\n            parentA:   \"\",\n            parentB:   \"Bob\",\n            wantError: true,\n        },\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            err := ValidateParentNames(tt.parentA, tt.parentB)\n            if tt.wantError {\n                assert.Error(t, err)\n            } else {\n                assert.NoError(t, err)\n            }\n        })\n    }\n}\n</code></pre>"},{"location":"development/testing/#test-helpers","title":"Test Helpers","text":""},{"location":"development/testing/#database-test-helpers","title":"Database Test Helpers","text":"<pre><code>func setupTestDB(t *testing.T) *Database {\n    t.Helper()\n    dbPath := fmt.Sprintf(\"test_%d.db\", time.Now().UnixNano())\n    db, err := Open(dbPath)\n    require.NoError(t, err)\n    return db\n}\n\nfunc cleanupTestDB(t *testing.T, db *Database) {\n    t.Helper()\n    dbPath := db.Path()\n    db.Close()\n    os.Remove(dbPath)\n    os.Remove(dbPath + \"-shm\")\n    os.Remove(dbPath + \"-wal\")\n}\n</code></pre>"},{"location":"development/testing/#time-mocking","title":"Time Mocking","text":"<pre><code>type MockClock struct {\n    CurrentTime time.Time\n}\n\nfunc (m *MockClock) Now() time.Time {\n    return m.CurrentTime\n}\n\nfunc TestTimeDependent(t *testing.T) {\n    clock := &amp;MockClock{\n        CurrentTime: time.Date(2024, 1, 15, 0, 0, 0, 0, time.UTC),\n    }\n\n    // Use mock clock in tests\n    result := CalculateWithClock(clock)\n    assert.Equal(t, expected, result)\n}\n</code></pre>"},{"location":"development/testing/#coverage","title":"Coverage","text":""},{"location":"development/testing/#generate-coverage-report","title":"Generate Coverage Report","text":"<pre><code># Generate coverage profile\ngo test -coverprofile=coverage.out ./...\n\n# View coverage in terminal\ngo tool cover -func=coverage.out\n\n# Generate HTML report\ngo tool cover -html=coverage.out -o coverage.html\n\n# Open in browser\nopen coverage.html  # macOS\nxdg-open coverage.html  # Linux\n</code></pre>"},{"location":"development/testing/#coverage-by-package","title":"Coverage by Package","text":"<pre><code>go test -coverprofile=coverage.out ./...\ngo tool cover -func=coverage.out | grep -E '^github.com'\n</code></pre>"},{"location":"development/testing/#coverage-goals","title":"Coverage Goals","text":"Component Target Coverage Core Logic (fairness, scheduler) 80%+ Database Operations 70%+ HTTP Handlers 60%+ Configuration 70%+ Utilities 50%+"},{"location":"development/testing/#continuous-integration","title":"Continuous Integration","text":"<p>Tests run automatically on every push and pull request via GitHub Actions.</p> <p>Workflow: <code>.github/workflows/ci.yml</code></p>"},{"location":"development/testing/#ci-test-steps","title":"CI Test Steps","text":"<ol> <li>Lint - Code style and quality checks</li> <li>Unit Tests - All unit tests with race detection</li> <li>Coverage - Upload to Codecov</li> <li>Build - Verify binary builds successfully</li> </ol>"},{"location":"development/testing/#viewing-ci-results","title":"Viewing CI Results","text":"<ul> <li>Check the \"Actions\" tab on GitHub</li> <li>View test results in pull request checks</li> <li>Coverage reports on Codecov</li> </ul>"},{"location":"development/testing/#benchmarking","title":"Benchmarking","text":""},{"location":"development/testing/#running-benchmarks","title":"Running Benchmarks","text":"<pre><code>go test -bench=. -benchmem ./...\n</code></pre>"},{"location":"development/testing/#writing-benchmarks","title":"Writing Benchmarks","text":"<pre><code>func BenchmarkFairnessCalculation(b *testing.B) {\n    config := setupBenchConfig()\n\n    b.ResetTimer()\n    for i := 0; i &lt; b.N; i++ {\n        _ = CalculateFairness(config)\n    }\n}\n</code></pre>"},{"location":"development/testing/#comparing-benchmarks","title":"Comparing Benchmarks","text":"<pre><code># Run baseline\ngo test -bench=. -benchmem &gt; old.txt\n\n# Make changes\n# ...\n\n# Run new benchmarks\ngo test -bench=. -benchmem &gt; new.txt\n\n# Compare\nbenchstat old.txt new.txt\n</code></pre>"},{"location":"development/testing/#mock-objects","title":"Mock Objects","text":""},{"location":"development/testing/#http-client-mocking","title":"HTTP Client Mocking","text":"<pre><code>type MockHTTPClient struct {\n    DoFunc func(req *http.Request) (*http.Response, error)\n}\n\nfunc (m *MockHTTPClient) Do(req *http.Request) (*http.Response, error) {\n    if m.DoFunc != nil {\n        return m.DoFunc(req)\n    }\n    return nil, errors.New(\"DoFunc not set\")\n}\n\nfunc TestGoogleCalendarAPI(t *testing.T) {\n    mockClient := &amp;MockHTTPClient{\n        DoFunc: func(req *http.Request) (*http.Response, error) {\n            // Return mock response\n            return &amp;http.Response{\n                StatusCode: 200,\n                Body: io.NopCloser(strings.NewReader(`{\"items\": []}`)),\n            }, nil\n        },\n    }\n\n    service := NewCalendarService(mockClient)\n    // Test with mock client\n}\n</code></pre>"},{"location":"development/testing/#test-data","title":"Test Data","text":""},{"location":"development/testing/#fixture-data","title":"Fixture Data","text":"<pre><code>func loadTestConfig(t *testing.T, filename string) Config {\n    t.Helper()\n    data, err := os.ReadFile(filepath.Join(\"testdata\", filename))\n    require.NoError(t, err)\n\n    var config Config\n    err = toml.Unmarshal(data, &amp;config)\n    require.NoError(t, err)\n\n    return config\n}\n</code></pre>"},{"location":"development/testing/#testdata-directory","title":"Testdata Directory","text":"<pre><code>internal/fairness/\n\u251c\u2500\u2500 fairness.go\n\u251c\u2500\u2500 fairness_test.go\n\u2514\u2500\u2500 testdata/\n    \u251c\u2500\u2500 config1.toml\n    \u251c\u2500\u2500 config2.toml\n    \u2514\u2500\u2500 assignments.json\n</code></pre>"},{"location":"development/testing/#common-testing-patterns","title":"Common Testing Patterns","text":""},{"location":"development/testing/#setup-and-teardown","title":"Setup and Teardown","text":"<pre><code>func TestMain(m *testing.M) {\n    // Setup\n    setupTestEnvironment()\n\n    // Run tests\n    code := m.Run()\n\n    // Teardown\n    cleanupTestEnvironment()\n\n    os.Exit(code)\n}\n</code></pre>"},{"location":"development/testing/#subtests-for-organization","title":"Subtests for Organization","text":"<pre><code>func TestAssignmentLogic(t *testing.T) {\n    t.Run(\"group1\", func(t *testing.T) {\n        t.Run(\"test1\", func(t *testing.T) { /* ... */ })\n        t.Run(\"test2\", func(t *testing.T) { /* ... */ })\n    })\n\n    t.Run(\"group2\", func(t *testing.T) {\n        t.Run(\"test3\", func(t *testing.T) { /* ... */ })\n    })\n}\n</code></pre>"},{"location":"development/testing/#parallel-tests","title":"Parallel Tests","text":"<pre><code>func TestIndependentLogic(t *testing.T) {\n    t.Parallel()  // Can run in parallel with other tests\n\n    // Test logic\n}\n</code></pre>"},{"location":"development/testing/#debugging-tests","title":"Debugging Tests","text":""},{"location":"development/testing/#verbose-output","title":"Verbose Output","text":"<pre><code>go test -v ./...\n</code></pre>"},{"location":"development/testing/#print-debug-info","title":"Print Debug Info","text":"<pre><code>func TestSomething(t *testing.T) {\n    t.Logf(\"Debug info: %v\", value)\n    // Test continues...\n}\n</code></pre>"},{"location":"development/testing/#run-specific-test-only","title":"Run Specific Test Only","text":"<pre><code>go test -v -run TestName ./package\n</code></pre>"},{"location":"development/testing/#test-with-delve","title":"Test with Delve","text":"<pre><code>dlv test ./internal/fairness -- -test.run TestFairness\n</code></pre>"},{"location":"development/testing/#best-practices","title":"Best Practices","text":""},{"location":"development/testing/#1-test-independence","title":"1. Test Independence","text":"<p>Each test should be independent and not rely on other tests:</p> <pre><code>// Good - Independent\nfunc TestA(t *testing.T) {\n    db := setupTestDB(t)\n    defer cleanupTestDB(t, db)\n    // Test logic\n}\n\n// Bad - Depends on external state\nvar sharedDB *Database\nfunc TestB(t *testing.T) {\n    // Uses sharedDB - not independent!\n}\n</code></pre>"},{"location":"development/testing/#2-clear-test-names","title":"2. Clear Test Names","text":"<pre><code>// Good - Describes what is being tested\nfunc TestAssignment_WhenBothParentsAvailable_AlternatesParents(t *testing.T) { }\n\n// Bad - Unclear what is being tested\nfunc TestAssignment1(t *testing.T) { }\n</code></pre>"},{"location":"development/testing/#3-arrange-act-assert-pattern","title":"3. Arrange-Act-Assert Pattern","text":"<pre><code>func TestCalculation(t *testing.T) {\n    // Arrange - Set up test data\n    input := 5\n    expected := 25\n\n    // Act - Execute the code under test\n    result := Square(input)\n\n    // Assert - Verify the result\n    assert.Equal(t, expected, result)\n}\n</code></pre>"},{"location":"development/testing/#4-test-edge-cases","title":"4. Test Edge Cases","text":"<pre><code>func TestDivision(t *testing.T) {\n    tests := []struct {\n        name string\n        a, b int\n        want int\n    }{\n        {\"normal\", 10, 2, 5},\n        {\"zero dividend\", 0, 5, 0},\n        {\"divide by one\", 10, 1, 10},\n        // Edge cases\n        {\"negative numbers\", -10, -2, 5},\n        {\"large numbers\", 1000000, 2, 500000},\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            got := Divide(tt.a, tt.b)\n            assert.Equal(t, tt.want, got)\n        })\n    }\n}\n</code></pre>"},{"location":"development/testing/#5-use-test-helpers","title":"5. Use Test Helpers","text":"<pre><code>func requireNoError(t *testing.T, err error) {\n    t.Helper()  // Marks this as a helper function\n    if err != nil {\n        t.Fatalf(\"unexpected error: %v\", err)\n    }\n}\n</code></pre>"},{"location":"development/testing/#troubleshooting-tests","title":"Troubleshooting Tests","text":""},{"location":"development/testing/#database-locked","title":"Database Locked","text":"<p>Problem: Tests fail with \"database is locked\"</p> <p>Solution: - Use unique database files per test - Properly close databases in cleanup - Don't run parallel tests that share database</p>"},{"location":"development/testing/#flaky-tests","title":"Flaky Tests","text":"<p>Problem: Tests pass sometimes, fail other times</p> <p>Causes: - Time-dependent logic without mocking - Race conditions - External dependencies (network, filesystem)</p> <p>Solutions: - Mock time/clock - Use <code>-race</code> flag to detect races - Mock external dependencies</p>"},{"location":"development/testing/#slow-tests","title":"Slow Tests","text":"<p>Problem: Tests take too long to run</p> <p>Solutions: - Use <code>t.Parallel()</code> for independent tests - Mock slow operations (network, file I/O) - Use in-memory databases for tests - Run specific packages instead of all tests</p>"},{"location":"development/testing/#next-steps","title":"Next Steps","text":"<ul> <li>Set up local development</li> <li>Read contributing guidelines</li> <li>Understand the architecture</li> </ul>"},{"location":"installation/docker-compose/","title":"Docker Compose Installation","text":"<p>For easier self-hosting, you can use Docker Compose to manage the Night Routine Scheduler.</p>"},{"location":"installation/docker-compose/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker installed</li> <li>Docker Compose installed</li> </ul>"},{"location":"installation/docker-compose/#quick-start","title":"Quick Start","text":"<ol> <li> <p>Download the docker-compose.yml file:</p> <pre><code>wget https://raw.githubusercontent.com/Belphemur/night-routine/main/docker-compose.yml\n</code></pre> <p>Or manually create a <code>docker-compose.yml</code> file with the following content:</p> <pre><code>version: '3.8'\n\nservices:\n  night-routine:\n    image: ghcr.io/belphemur/night-routine:latest\n    container_name: night-routine\n    restart: unless-stopped\n    ports:\n      - \"8080:8080\"\n    environment:\n      - GOOGLE_OAUTH_CLIENT_ID=your-client-id-here\n      - GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret-here\n      - CONFIG_FILE=/app/config/routine.toml\n      - ENV=production\n    volumes:\n      - ./config:/app/config\n      - ./data:/app/data\n</code></pre> </li> <li> <p>Create the configuration directory:</p> <pre><code>mkdir -p config data\n</code></pre> </li> <li> <p>Create a configuration file:</p> <p>Download the example configuration or create <code>config/routine.toml</code>:</p> <pre><code>cat &gt; config/routine.toml &lt;&lt; 'EOF'\n[app]\nport = 8080\napp_url = \"http://localhost:8080\"\npublic_url = \"http://localhost:8080\"\n\n[parents]\nparent_a = \"Parent1\"\nparent_b = \"Parent2\"\n\n[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\npast_event_threshold_days = 5\n\n[service]\nstate_file = \"data/state.db\"\nlog_level = \"info\"\nEOF\n</code></pre> </li> <li> <p>Edit the docker-compose.yml to set your Google OAuth credentials:</p> <pre><code>nano docker-compose.yml\n</code></pre> <p>Update these lines with your actual credentials: <pre><code>- GOOGLE_OAUTH_CLIENT_ID=your-actual-client-id\n- GOOGLE_OAUTH_CLIENT_SECRET=your-actual-client-secret\n</code></pre></p> </li> <li> <p>Edit the configuration file to match your needs:</p> <pre><code>nano config/routine.toml\n</code></pre> </li> <li> <p>Start the service:</p> <pre><code>docker-compose up -d\n</code></pre> </li> </ol>"},{"location":"installation/docker-compose/#managing-the-service","title":"Managing the Service","text":""},{"location":"installation/docker-compose/#view-logs","title":"View logs","text":"<pre><code># View all logs\ndocker-compose logs\n\n# Follow logs in real-time\ndocker-compose logs -f\n\n# View logs for the last hour\ndocker-compose logs --since 1h\n</code></pre>"},{"location":"installation/docker-compose/#stop-the-service","title":"Stop the service","text":"<pre><code>docker-compose stop\n</code></pre>"},{"location":"installation/docker-compose/#start-the-service","title":"Start the service","text":"<pre><code>docker-compose start\n</code></pre>"},{"location":"installation/docker-compose/#restart-the-service","title":"Restart the service","text":"<pre><code>docker-compose restart\n</code></pre>"},{"location":"installation/docker-compose/#stop-and-remove-containers","title":"Stop and remove containers","text":"<pre><code>docker-compose down\n</code></pre> <p>Data Preservation</p> <p>Using <code>docker-compose down</code> will stop and remove containers, but your data in the <code>./config</code> and <code>./data</code> directories will be preserved.</p>"},{"location":"installation/docker-compose/#update-to-latest-version","title":"Update to latest version","text":"<pre><code># Pull the latest image\ndocker-compose pull\n\n# Restart with the new image\ndocker-compose up -d\n</code></pre>"},{"location":"installation/docker-compose/#production-deployment","title":"Production Deployment","text":"<p>For production deployments, consider the following enhancements:</p>"},{"location":"installation/docker-compose/#using-environment-files","title":"Using Environment Files","text":"<p>Create a <code>.env</code> file for your environment variables:</p> <pre><code>cat &gt; .env &lt;&lt; 'EOF'\nGOOGLE_OAUTH_CLIENT_ID=your-client-id-here\nGOOGLE_OAUTH_CLIENT_SECRET=your-client-secret-here\nCONFIG_FILE=/app/config/routine.toml\nENV=production\nPORT=8080\nEOF\n</code></pre> <p>Update your <code>docker-compose.yml</code> to use the environment file:</p> <pre><code>version: '3.8'\n\nservices:\n  night-routine:\n    image: ghcr.io/belphemur/night-routine:latest\n    container_name: night-routine\n    restart: unless-stopped\n    ports:\n      - \"${PORT}:8080\"\n    env_file:\n      - .env\n    volumes:\n      - ./config:/app/config\n      - ./data:/app/data\n</code></pre> <p>Security</p> <p>Make sure to add <code>.env</code> to your <code>.gitignore</code> file to prevent committing sensitive credentials.</p>"},{"location":"installation/docker-compose/#behind-a-reverse-proxy","title":"Behind a Reverse Proxy","text":"<p>When deploying behind a reverse proxy (e.g., nginx, Traefik, Caddy), update your configuration:</p> NginxTraefikCaddy <pre><code>server {\n    listen 80;\n    server_name night-routine.example.com;\n\n    location / {\n        proxy_pass http://localhost:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre> <pre><code>version: '3.8'\n\nservices:\n  night-routine:\n    image: ghcr.io/belphemur/night-routine:latest\n    container_name: night-routine\n    restart: unless-stopped\n    env_file:\n      - .env\n    volumes:\n      - ./config:/app/config\n      - ./data:/app/data\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.http.routers.night-routine.rule=Host(`night-routine.example.com`)\"\n      - \"traefik.http.routers.night-routine.entrypoints=websecure\"\n      - \"traefik.http.routers.night-routine.tls.certresolver=letsencrypt\"\n      - \"traefik.http.services.night-routine.loadbalancer.server.port=8080\"\n    networks:\n      - traefik\n\nnetworks:\n  traefik:\n    external: true\n</code></pre> <pre><code>night-routine.example.com {\n    reverse_proxy localhost:8080\n}\n</code></pre> <p>Update your <code>config/routine.toml</code> to reflect the public URL:</p> <pre><code>[app]\nport = 8080\napp_url = \"http://localhost:8080\"  # Internal URL\npublic_url = \"https://night-routine.example.com\"  # Public URL for webhooks\n</code></pre>"},{"location":"installation/docker-compose/#directory-structure","title":"Directory Structure","text":"<p>After setup, your directory structure should look like:</p> <pre><code>.\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 .env (optional)\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 routine.toml\n\u2514\u2500\u2500 data/\n    \u2514\u2500\u2500 state.db (created automatically)\n</code></pre>"},{"location":"installation/docker-compose/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/docker-compose/#container-wont-start","title":"Container won't start","text":"<p>Check the logs: <pre><code>docker-compose logs\n</code></pre></p>"},{"location":"installation/docker-compose/#permission-issues","title":"Permission issues","text":"<p>Ensure the <code>data</code> directory is writable: <pre><code>chmod 755 data\n</code></pre></p>"},{"location":"installation/docker-compose/#cannot-access-the-web-interface","title":"Cannot access the web interface","text":"<ol> <li> <p>Check if the container is running:     <pre><code>docker-compose ps\n</code></pre></p> </li> <li> <p>Verify port mapping:     <pre><code>docker-compose port night-routine 8080\n</code></pre></p> </li> <li> <p>Check firewall rules if accessing from another machine</p> </li> </ol>"},{"location":"installation/docker-compose/#next-steps","title":"Next Steps","text":"<ul> <li>Configure the application</li> <li>Set up Google Calendar integration</li> <li>Complete first-time setup</li> </ul>"},{"location":"installation/docker/","title":"Docker Installation","text":"<p>Pre-built multi-architecture Docker images (supporting both amd64 and arm64) are available in the GitHub Container Registry.</p>"},{"location":"installation/docker/#quick-start","title":"Quick Start","text":"<pre><code># Pull the latest release\ndocker pull ghcr.io/belphemur/night-routine:latest\n\n# Run the container\ndocker run \\\n  -e GOOGLE_OAUTH_CLIENT_ID=your-client-id \\\n  -e GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret \\\n  -e PORT=8080 \\\n  -e CONFIG_FILE=/app/config/routine.toml \\\n  -v /path/to/config:/app/config \\\n  -v /path/to/data:/app/data \\\n  -p 8080:8080 \\\n  ghcr.io/belphemur/night-routine:latest\n</code></pre> <p>Security Notice</p> <p>These images are signed using Sigstore Cosign and include SBOM attestations for enhanced security.</p>"},{"location":"installation/docker/#available-tags","title":"Available Tags","text":"<p>The following image tags are available:</p> <ul> <li><code>latest</code> - Most recent stable release</li> <li><code>vX.Y.Z</code> - Specific version tags (e.g., <code>v1.0.0</code>, <code>v1.1.0</code>)</li> </ul>"},{"location":"installation/docker/#environment-variables","title":"Environment Variables","text":"<p>When running with Docker, you must provide the following environment variables:</p> Variable Required Description <code>GOOGLE_OAUTH_CLIENT_ID</code> Yes OAuth2 Client ID from Google Cloud Console <code>GOOGLE_OAUTH_CLIENT_SECRET</code> Yes OAuth2 Client Secret from Google Cloud Console <code>CONFIG_FILE</code> Yes Path to TOML configuration file (e.g., <code>/app/config/routine.toml</code>) <code>PORT</code> No Override port from TOML configuration (default: 8080) <code>ENV</code> No Set to <code>production</code> for JSON logging, otherwise pretty console logging"},{"location":"installation/docker/#volume-mounts","title":"Volume Mounts","text":"<p>Mount the following volumes for persistent data:</p> Container Path Purpose Required <code>/app/config</code> Configuration files (TOML) Yes <code>/app/data</code> SQLite database storage Yes"},{"location":"installation/docker/#example-with-custom-configuration","title":"Example with Custom Configuration","text":"<p>Create a configuration directory and run the container:</p> <pre><code># Create directories\nmkdir -p ~/night-routine/config ~/night-routine/data\n\n# Create a configuration file\ncat &gt; ~/night-routine/config/routine.toml &lt;&lt; 'EOF'\n[app]\nport = 8080\napp_url = \"http://localhost:8080\"\npublic_url = \"http://localhost:8080\"\n\n[parents]\nparent_a = \"Parent1\"\nparent_b = \"Parent2\"\n\n[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\npast_event_threshold_days = 5\n\n[service]\nstate_file = \"data/state.db\"\nlog_level = \"info\"\nEOF\n\n# Run the container\ndocker run -d \\\n  --name night-routine \\\n  -e GOOGLE_OAUTH_CLIENT_ID=your-client-id \\\n  -e GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret \\\n  -e CONFIG_FILE=/app/config/routine.toml \\\n  -v ~/night-routine/config:/app/config \\\n  -v ~/night-routine/data:/app/data \\\n  -p 8080:8080 \\\n  --restart unless-stopped \\\n  ghcr.io/belphemur/night-routine:latest\n</code></pre>"},{"location":"installation/docker/#verifying-image-signatures","title":"Verifying Image Signatures","text":"<p>Images are signed with Cosign. To verify the signature:</p> <pre><code># Install cosign\n# See https://docs.sigstore.dev/cosign/installation/\n\n# Verify the image signature\ncosign verify ghcr.io/belphemur/night-routine:latest \\\n  --certificate-identity-regexp=\"https://github.com/Belphemur/night-routine\" \\\n  --certificate-oidc-issuer=\"https://token.actions.githubusercontent.com\"\n</code></pre>"},{"location":"installation/docker/#multi-architecture-support","title":"Multi-Architecture Support","text":"<p>The Docker images support multiple architectures:</p> <ul> <li>linux/amd64 - x86_64 systems (most desktops, servers)</li> <li>linux/arm64 - ARM64 systems (Raspberry Pi \u2158, Apple Silicon, AWS Graviton)</li> </ul> <p>Docker will automatically pull the correct image for your platform.</p>"},{"location":"installation/docker/#container-logs","title":"Container Logs","text":"<p>View container logs to monitor the application:</p> <pre><code># View logs\ndocker logs night-routine\n\n# Follow logs in real-time\ndocker logs -f night-routine\n\n# View last 100 lines\ndocker logs --tail 100 night-routine\n</code></pre>"},{"location":"installation/docker/#updating-the-container","title":"Updating the Container","text":"<p>To update to a new version:</p> <pre><code># Stop and remove the old container\ndocker stop night-routine\ndocker rm night-routine\n\n# Pull the latest image\ndocker pull ghcr.io/belphemur/night-routine:latest\n\n# Start a new container with the same configuration\ndocker run -d \\\n  --name night-routine \\\n  -e GOOGLE_OAUTH_CLIENT_ID=your-client-id \\\n  -e GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret \\\n  -e CONFIG_FILE=/app/config/routine.toml \\\n  -v ~/night-routine/config:/app/config \\\n  -v ~/night-routine/data:/app/data \\\n  -p 8080:8080 \\\n  --restart unless-stopped \\\n  ghcr.io/belphemur/night-routine:latest\n</code></pre> <p>Data Persistence</p> <p>Your data and configuration are safe in the mounted volumes and will be preserved across container updates.</p>"},{"location":"installation/docker/#next-steps","title":"Next Steps","text":"<ul> <li>Configure the application</li> <li>Set up Google Calendar integration</li> <li>Complete first-time setup</li> </ul>"},{"location":"installation/local/","title":"Local Development Installation","text":"<p>For development or running from source, you can build and run Night Routine Scheduler locally.</p>"},{"location":"installation/local/#prerequisites","title":"Prerequisites","text":"<ul> <li>Go 1.25 or later - Download Go</li> <li>Git - Download Git</li> <li>Google Calendar API Credentials - Get credentials</li> </ul>"},{"location":"installation/local/#installation-steps","title":"Installation Steps","text":""},{"location":"installation/local/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/Belphemur/night-routine.git\ncd night-routine\n</code></pre>"},{"location":"installation/local/#2-create-configuration","title":"2. Create Configuration","text":"<p>Copy the example configuration:</p> <pre><code># Create a configuration directory if it doesn't exist\nmkdir -p configs\n\n# Copy or create the configuration file\ncat &gt; configs/my-routine.toml &lt;&lt; 'EOF'\n[app]\nport = 8080\napp_url = \"http://localhost:8080\"\npublic_url = \"http://localhost:8080\"\n\n[parents]\nparent_a = \"Parent1\"\nparent_b = \"Parent2\"\n\n[availability]\nparent_a_unavailable = [\"Wednesday\"]\nparent_b_unavailable = [\"Monday\"]\n\n[schedule]\nupdate_frequency = \"weekly\"\nlook_ahead_days = 30\npast_event_threshold_days = 5\n\n[service]\nstate_file = \"data/state.db\"\nlog_level = \"info\"\nEOF\n</code></pre>"},{"location":"installation/local/#3-set-environment-variables","title":"3. Set Environment Variables","text":"<p>Create a <code>.env</code> file or export the variables directly:</p> <pre><code>export GOOGLE_OAUTH_CLIENT_ID=your-client-id\nexport GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nexport CONFIG_FILE=configs/my-routine.toml\nexport ENV=development\n</code></pre> <p>Or create a <code>.env</code> file:</p> <pre><code>cat &gt; .env &lt;&lt; 'EOF'\nGOOGLE_OAUTH_CLIENT_ID=your-client-id\nGOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nCONFIG_FILE=configs/my-routine.toml\nENV=development\nEOF\n</code></pre> <p>Then source it: <pre><code>source .env\n</code></pre></p>"},{"location":"installation/local/#4-download-dependencies","title":"4. Download Dependencies","text":"<pre><code>go mod download\n</code></pre>"},{"location":"installation/local/#5-build-the-application","title":"5. Build the Application","text":"<pre><code>go build -o night-routine ./cmd/night-routine/\n</code></pre>"},{"location":"installation/local/#6-run-the-application","title":"6. Run the Application","text":"<pre><code>./night-routine\n</code></pre> <p>The application will start and be available at <code>http://localhost:8080</code> (or your configured port).</p>"},{"location":"installation/local/#development-workflow","title":"Development Workflow","text":""},{"location":"installation/local/#using-air-for-live-reload","title":"Using Air for Live Reload","text":"<p>For a better development experience, use Air for automatic reloading:</p> <ol> <li> <p>Install Air:</p> <pre><code>go install github.com/air-verse/air@latest\n</code></pre> </li> <li> <p>Create <code>.air.toml</code> configuration:</p> <pre><code>root = \".\"\ntestdata_dir = \"testdata\"\ntmp_dir = \"tmp\"\n\n[build]\n  args_bin = []\n  bin = \"./tmp/main\"\n  cmd = \"go build -o ./tmp/main ./cmd/night-routine\"\n  delay = 1000\n  exclude_dir = [\"assets\", \"tmp\", \"vendor\", \"testdata\", \"data\", \"docs\", \"docs-site\"]\n  exclude_file = []\n  exclude_regex = [\"_test.go\"]\n  exclude_unchanged = false\n  follow_symlink = false\n  full_bin = \"\"\n  include_dir = []\n  include_ext = [\"go\", \"tpl\", \"tmpl\", \"html\"]\n  include_file = []\n  kill_delay = \"0s\"\n  log = \"build-errors.log\"\n  poll = false\n  poll_interval = 0\n  rerun = false\n  rerun_delay = 500\n  send_interrupt = false\n  stop_on_error = false\n\n[color]\n  app = \"\"\n  build = \"yellow\"\n  main = \"magenta\"\n  runner = \"green\"\n  watcher = \"cyan\"\n\n[log]\n  main_only = false\n  time = false\n\n[misc]\n  clean_on_exit = false\n\n[screen]\n  clear_on_rebuild = false\n  keep_scroll = true\n</code></pre> </li> <li> <p>Run with Air:</p> <pre><code>air\n</code></pre> </li> </ol> <p>Now your application will automatically rebuild and restart when you make changes to the code.</p>"},{"location":"installation/local/#running-tests","title":"Running Tests","text":"<p>Run all tests:</p> <pre><code>go test -v ./...\n</code></pre> <p>Run tests with coverage:</p> <pre><code>go test -v -cover ./...\n</code></pre> <p>Generate coverage report:</p> <pre><code>go test -coverprofile=coverage.out ./...\ngo tool cover -html=coverage.out\n</code></pre> <p>Run specific package tests:</p> <pre><code>go test -v ./internal/fairness/...\n</code></pre>"},{"location":"installation/local/#linting","title":"Linting","text":"<p>The project uses <code>golangci-lint</code> for code linting:</p> <ol> <li> <p>Install golangci-lint:</p> <pre><code># macOS\nbrew install golangci-lint\n\n# Linux\ncurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin\n\n# Windows\n# Download from https://github.com/golangci/golangci-lint/releases\n</code></pre> </li> <li> <p>Run the linter:</p> <pre><code>golangci-lint run\n</code></pre> </li> </ol>"},{"location":"installation/local/#code-formatting","title":"Code Formatting","text":"<p>Format your code before committing:</p> <pre><code># Format all Go files\ngofmt -s -w .\n\n# Verify formatting\ngofmt -s -l .\n</code></pre>"},{"location":"installation/local/#directory-structure","title":"Directory Structure","text":"<p>After setup, your project structure will look like:</p> <pre><code>night-routine/\n\u251c\u2500\u2500 cmd/\n\u2502   \u2514\u2500\u2500 night-routine/          # Main application entry point\n\u251c\u2500\u2500 internal/                    # Internal packages\n\u2502   \u251c\u2500\u2500 calendar/               # Google Calendar integration\n\u2502   \u251c\u2500\u2500 config/                 # Configuration management\n\u2502   \u251c\u2500\u2500 database/               # Database operations\n\u2502   \u251c\u2500\u2500 fairness/               # Fairness algorithm\n\u2502   \u251c\u2500\u2500 scheduler/              # Scheduling logic\n\u2502   \u2514\u2500\u2500 web/                    # Web interface\n\u251c\u2500\u2500 configs/                     # Configuration files\n\u2502   \u2514\u2500\u2500 my-routine.toml\n\u251c\u2500\u2500 data/                        # Runtime data (created automatically)\n\u2502   \u2514\u2500\u2500 state.db\n\u251c\u2500\u2500 docs/                        # Additional documentation\n\u251c\u2500\u2500 .env                         # Environment variables (gitignored)\n\u251c\u2500\u2500 go.mod                       # Go module definition\n\u251c\u2500\u2500 go.sum                       # Go module checksums\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"installation/local/#debugging","title":"Debugging","text":""},{"location":"installation/local/#using-delve-debugger","title":"Using Delve Debugger","text":"<p>Install and use Delve for debugging:</p> <pre><code># Install Delve\ngo install github.com/go-delve/delve/cmd/dlv@latest\n\n# Run with debugger\ndlv debug ./cmd/night-routine\n\n# Or attach to running process\ndlv attach &lt;pid&gt;\n</code></pre>"},{"location":"installation/local/#enabling-debug-logging","title":"Enabling Debug Logging","text":"<p>Update your configuration to enable debug logging:</p> <pre><code>[service]\nlog_level = \"debug\"  # or \"trace\" for even more detail\n</code></pre>"},{"location":"installation/local/#common-issues","title":"Common Issues","text":""},{"location":"installation/local/#port-already-in-use","title":"Port Already in Use","text":"<p>If port 8080 is already in use:</p> <ol> <li> <p>Change the port in your <code>routine.toml</code>:     <pre><code>[app]\nport = 8081\n</code></pre></p> </li> <li> <p>Or set the <code>PORT</code> environment variable:     <pre><code>export PORT=8081\n</code></pre></p> </li> </ol>"},{"location":"installation/local/#oauth-callback-issues","title":"OAuth Callback Issues","text":"<p>Make sure your Google OAuth2 redirect URI matches your local URL:</p> <ul> <li>In development: <code>http://localhost:8080/oauth/callback</code></li> <li>Update in Google Cloud Console</li> </ul>"},{"location":"installation/local/#database-locked-errors","title":"Database Locked Errors","text":"<p>If you encounter database locked errors:</p> <ol> <li>Ensure only one instance is running</li> <li>Check file permissions on the <code>data</code> directory</li> <li>The database uses WAL mode which should prevent most locking issues</li> </ol>"},{"location":"installation/local/#building-for-production","title":"Building for Production","text":"<p>Build a production-ready binary:</p> <pre><code># Build with optimizations and version information\nVERSION=$(git describe --tags --always)\nCOMMIT=$(git rev-parse --short HEAD)\nDATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)\n\nCGO_ENABLED=0 go build \\\n  -ldflags=\"-s -w -X 'main.version=${VERSION}' -X 'main.commit=${COMMIT}' -X 'main.date=${DATE}'\" \\\n  -o night-routine \\\n  ./cmd/night-routine\n</code></pre> <p>The resulting binary will be statically linked and can be deployed anywhere.</p>"},{"location":"installation/local/#next-steps","title":"Next Steps","text":"<ul> <li>Configure the application</li> <li>Set up Google Calendar integration</li> <li>Learn about the architecture</li> <li>Read the development guide</li> </ul>"},{"location":"user-guide/manual-overrides/","title":"Manual Overrides","text":"<p>You can manually override night routine assignments by editing calendar event titles directly in Google Calendar. This allows you to make quick changes without using the web interface.</p>"},{"location":"user-guide/manual-overrides/#how-manual-overrides-work","title":"How Manual Overrides Work","text":"<p>The application automatically detects when you change a night routine event title in Google Calendar and updates its internal schedule accordingly.</p>"},{"location":"user-guide/manual-overrides/#override-detection","title":"Override Detection","text":"<p>The system detects overrides through:</p> <ol> <li>Webhook Notifications - Google Calendar sends real-time notifications when events change</li> <li>Event Title Parsing - The application parses the parent name from the title</li> <li>Database Update - The internal assignment is updated to match</li> <li>Fairness Recalculation - Future assignments are recalculated to maintain balance</li> </ol>"},{"location":"user-guide/manual-overrides/#making-a-manual-override","title":"Making a Manual Override","text":""},{"location":"user-guide/manual-overrides/#step-1-find-the-event","title":"Step 1: Find the Event","text":"<ol> <li>Open Google Calendar</li> <li>Navigate to the date you want to change</li> <li>Find the night routine event (e.g., <code>[Parent1] \ud83c\udf03\ud83d\udc76Routine</code>)</li> </ol>"},{"location":"user-guide/manual-overrides/#step-2-edit-the-event-title","title":"Step 2: Edit the Event Title","text":"<ol> <li>Click on the event to open it</li> <li>Click the edit button (pencil icon)</li> <li>Change the parent name in the title:<ul> <li>From: <code>[Parent1] \ud83c\udf03\ud83d\udc76Routine</code></li> <li>To: <code>[Parent2] \ud83c\udf03\ud83d\udc76Routine</code></li> </ul> </li> </ol> <p>Title Format</p> <p>Keep the format: <code>[ParentName] \ud83c\udf03\ud83d\udc76Routine</code></p> <p>Only change the name inside the square brackets. The name must match one of your configured parent names exactly.</p> <ol> <li>Click \"Save\" to save the change</li> </ol>"},{"location":"user-guide/manual-overrides/#step-3-verification","title":"Step 3: Verification","text":"<p>The application will:</p> <ol> <li>Receive a webhook notification from Google Calendar (usually within seconds)</li> <li>Parse the new parent name from the event title</li> <li>Check if the date is within the allowed threshold</li> <li>Update the internal database</li> <li>Recalculate future assignments to maintain fairness</li> </ol> <p>You can verify the change by:</p> <ul> <li>Checking the application logs for override detection messages</li> <li>Viewing the web interface (the assignment should update after refresh)</li> <li>Looking for the \"Override\" decision reason in future assignments</li> </ul>"},{"location":"user-guide/manual-overrides/#time-window-for-overrides","title":"Time Window for Overrides","text":"<p>By default, the application only accepts manual overrides for events within 5 days in the past (configurable).</p>"},{"location":"user-guide/manual-overrides/#configuration","title":"Configuration","text":"<p>Set the threshold in your <code>routine.toml</code>:</p> <pre><code>[schedule]\npast_event_threshold_days = 5  # Accept changes up to 5 days ago\n</code></pre>"},{"location":"user-guide/manual-overrides/#examples","title":"Examples","text":"<p>If today is January 15<sup>th</sup> and <code>past_event_threshold_days = 5</code>:</p> Date Can Override? Jan 9 \u274c No (6 days ago) Jan 10 \u2705 Yes (5 days ago) Jan 11-15 \u2705 Yes (within 5 days) Jan 16+ \u2705 Yes (future dates)"},{"location":"user-guide/manual-overrides/#why-a-threshold","title":"Why a Threshold?","text":"<p>The threshold prevents:</p> <ul> <li>Accidental historical changes - Old events being modified unintentionally</li> <li>Fairness calculation errors - Past assignments affecting current balance</li> <li>Data integrity issues - Conflicting historical records</li> </ul> <p>Adjusting the Threshold</p> <p>Increase the threshold if you frequently need to correct past assignments: <pre><code>past_event_threshold_days = 14  # Allow 2 weeks of changes\n</code></pre></p>"},{"location":"user-guide/manual-overrides/#impact-on-future-assignments","title":"Impact on Future Assignments","text":"<p>When you manually override an assignment, the fairness algorithm recalculates future assignments to compensate.</p>"},{"location":"user-guide/manual-overrides/#example-scenario","title":"Example Scenario","text":"<p>Initial schedule:</p> Date Assignment Reason Jan 15 Parent A Alternating Jan 16 Parent B Alternating Jan 17 Parent A Alternating Jan 18 Parent B Alternating <p>You manually change Jan 15 from Parent A to Parent B</p> <p>Updated schedule:</p> Date Assignment Reason Jan 15 Parent B Override Jan 16 Parent A Total Count (compensating) Jan 17 Parent B Alternating Jan 18 Parent A Alternating <p>Notice how the algorithm adjusted Jan 16 to maintain balance.</p>"},{"location":"user-guide/manual-overrides/#valid-override-formats","title":"Valid Override Formats","text":"<p>The application recognizes several event title formats:</p>"},{"location":"user-guide/manual-overrides/#standard-format","title":"Standard Format","text":"<pre><code>[ParentName] \ud83c\udf03\ud83d\udc76Routine\n</code></pre> <p>Example: <code>[Alice] \ud83c\udf03\ud83d\udc76Routine</code></p>"},{"location":"user-guide/manual-overrides/#without-emojis","title":"Without Emojis","text":"<pre><code>[ParentName] Routine\n</code></pre> <p>Example: <code>[Bob] Routine</code></p>"},{"location":"user-guide/manual-overrides/#case-sensitivity","title":"Case Sensitivity","text":"<p>Parent names are case-sensitive and must match your configuration exactly.</p> <p>\u2705 Valid: <pre><code>[parents]\nparent_a = \"Alice\"\nparent_b = \"Bob\"\n</code></pre> - <code>[Alice] \ud83c\udf03\ud83d\udc76Routine</code> \u2705 - <code>[Bob] \ud83c\udf03\ud83d\udc76Routine</code> \u2705</p> <p>\u274c Invalid: - <code>[alice] \ud83c\udf03\ud83d\udc76Routine</code> \u274c (wrong case) - <code>[ALICE] \ud83c\udf03\ud83d\udc76Routine</code> \u274c (wrong case) - <code>[AliceSmith] \ud83c\udf03\ud83d\udc76Routine</code> \u274c (doesn't match)</p>"},{"location":"user-guide/manual-overrides/#common-use-cases","title":"Common Use Cases","text":""},{"location":"user-guide/manual-overrides/#swapping-assignments","title":"Swapping Assignments","text":"<p>Scenario: Parent A can't do tonight, switch with Parent B</p> <ol> <li>Find tonight's event in Google Calendar</li> <li>Change title from <code>[Parent A]</code> to <code>[Parent B]</code></li> <li>Find Parent B's next assignment</li> <li>Change it from <code>[Parent B]</code> to <code>[Parent A]</code></li> </ol> <p>Result: The nights are swapped, and future assignments remain balanced.</p>"},{"location":"user-guide/manual-overrides/#emergency-changes","title":"Emergency Changes","text":"<p>Scenario: Parent is sick and unavailable for several days</p> <ol> <li>Edit each affected event's title to assign the other parent</li> <li>The algorithm will compensate in future assignments</li> <li>Once the parent is available again, normal scheduling resumes</li> </ol>"},{"location":"user-guide/manual-overrides/#preference-based-adjustments","title":"Preference-Based Adjustments","text":"<p>Scenario: One parent prefers weekend duties</p> <ol> <li>Edit weekend events to assign the preferred parent</li> <li>The algorithm balances weekday assignments accordingly</li> </ol>"},{"location":"user-guide/manual-overrides/#monitoring-overrides","title":"Monitoring Overrides","text":""},{"location":"user-guide/manual-overrides/#in-the-web-interface","title":"In the Web Interface","text":"<p>Overridden assignments show a special decision reason:</p> <ul> <li>Reason: \"Override\"</li> <li>Indicator: Visible in hover tooltips (desktop) or tap-to-view (mobile)</li> </ul>"},{"location":"user-guide/manual-overrides/#in-google-calendar","title":"In Google Calendar","text":"<p>Overridden events still appear as normal night routine events, but the description will show:</p> <pre><code>Decision: Override\n</code></pre>"},{"location":"user-guide/manual-overrides/#in-application-logs","title":"In Application Logs","text":"<p>Watch for log messages:</p> <pre><code>INF Processing calendar change notification\nINF Override detected date=2024-01-15 old_parent=Parent1 new_parent=Parent2\nINF Recalculating future assignments\n</code></pre>"},{"location":"user-guide/manual-overrides/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/manual-overrides/#override-not-detected","title":"Override Not Detected","text":"<p>Problem: You changed an event title but the web interface doesn't update</p> <p>Possible causes:</p> <ol> <li>Webhook delay - Wait 30-60 seconds and refresh</li> <li>Outside threshold - Event is too far in the past</li> <li>Invalid format - Parent name doesn't match configuration</li> <li>Webhook not configured - Check application logs</li> </ol> <p>Solutions:</p> <ol> <li>Click \"Sync Now\" in the web interface to force synchronization</li> <li>Check the event date vs. <code>past_event_threshold_days</code></li> <li>Verify parent name matches configuration exactly (case-sensitive)</li> <li>Check logs for webhook errors</li> </ol>"},{"location":"user-guide/manual-overrides/#wrong-parent-name","title":"Wrong Parent Name","text":"<p>Problem: You mistyped the parent name</p> <p>Solution:</p> <ol> <li>Edit the event again in Google Calendar</li> <li>Correct the parent name</li> <li>Save the change</li> <li>The override will be reprocessed</li> </ol>"},{"location":"user-guide/manual-overrides/#future-assignments-didnt-recalculate","title":"Future Assignments Didn't Recalculate","text":"<p>Problem: You made an override but future dates didn't change</p> <p>Explanation:</p> <p>The algorithm only recalculates when necessary to maintain fairness. If the override doesn't create an imbalance, future assignments may remain unchanged.</p> <p>To force recalculation:</p> <ol> <li>Click \"Sync Now\" in the web interface</li> <li>Check the statistics page to verify balance</li> </ol>"},{"location":"user-guide/manual-overrides/#past-event-beyond-threshold","title":"Past Event Beyond Threshold","text":"<p>Problem: Cannot override an event from last month</p> <p>Solution:</p> <ol> <li>Increase <code>past_event_threshold_days</code> in configuration:     <pre><code>[schedule]\npast_event_threshold_days = 30\n</code></pre></li> <li>Restart the application</li> <li>Make the override in Google Calendar</li> <li>Consider: Do you really need to change historical data?</li> </ol>"},{"location":"user-guide/manual-overrides/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/manual-overrides/#use-overrides-sparingly","title":"Use Overrides Sparingly","text":"<ul> <li>Overrides should be for exceptions, not routine changes</li> <li>Frequent overrides can disrupt the fairness algorithm</li> <li>Consider adjusting configuration instead for permanent changes</li> </ul>"},{"location":"user-guide/manual-overrides/#keep-titles-consistent","title":"Keep Titles Consistent","text":"<ul> <li>Use the same format for all overrides</li> <li>Don't modify the emoji or \"Routine\" text</li> <li>Only change the parent name in brackets</li> </ul>"},{"location":"user-guide/manual-overrides/#document-major-changes","title":"Document Major Changes","text":"<ul> <li>If you make significant overrides, note why in event descriptions</li> <li>This helps track unusual patterns in statistics</li> </ul>"},{"location":"user-guide/manual-overrides/#verify-after-overriding","title":"Verify After Overriding","text":"<ul> <li>Check the web interface after overrides</li> <li>Review statistics to ensure balance is maintained</li> <li>Click \"Sync Now\" if changes don't appear</li> </ul>"},{"location":"user-guide/manual-overrides/#communicate-changes","title":"Communicate Changes","text":"<ul> <li>If you override an assignment, inform the other parent</li> <li>Update any family calendars or notifications</li> <li>Ensure both parents are aware of the change</li> </ul>"},{"location":"user-guide/manual-overrides/#alternative-configuration-changes","title":"Alternative: Configuration Changes","text":"<p>For permanent changes, update configuration instead of using overrides:</p>"},{"location":"user-guide/manual-overrides/#changing-availability","title":"Changing Availability","text":"<p>Instead of: Manually overriding every Wednesday</p> <p>Do this:</p> <pre><code>[availability]\nparent_a_unavailable = [\"Wednesday\"]\n</code></pre>"},{"location":"user-guide/manual-overrides/#changing-frequency","title":"Changing Frequency","text":"<p>Instead of: Manually spreading assignments further apart</p> <p>Do this:</p> <pre><code>[schedule]\nupdate_frequency = \"weekly\"  # instead of \"daily\"\n</code></pre>"},{"location":"user-guide/manual-overrides/#next-steps","title":"Next Steps","text":"<ul> <li>Learn more about the assignment logic</li> <li>Understand the web interface</li> <li>Explore configuration options</li> </ul>"},{"location":"user-guide/setup/","title":"First-Time Setup","text":"<p>This guide walks you through the initial setup of Night Routine Scheduler after installation.</p>"},{"location":"user-guide/setup/#prerequisites","title":"Prerequisites","text":"<p>Before starting, ensure you have:</p> <ul> <li> Installed Night Routine Scheduler (Docker, Docker Compose, or locally)</li> <li> Created Google OAuth credentials (Google Calendar Setup)</li> <li> Configured environment variables (Environment Variables)</li> <li> Created a TOML configuration file (TOML Configuration)</li> </ul>"},{"location":"user-guide/setup/#setup-steps","title":"Setup Steps","text":""},{"location":"user-guide/setup/#1-start-the-application","title":"1. Start the Application","text":"DockerDocker ComposeLocal Binary <pre><code>docker run -d \\\n  --name night-routine \\\n  -e GOOGLE_OAUTH_CLIENT_ID=your-client-id \\\n  -e GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret \\\n  -e CONFIG_FILE=/app/config/routine.toml \\\n  -v ~/night-routine/config:/app/config \\\n  -v ~/night-routine/data:/app/data \\\n  -p 8080:8080 \\\n  ghcr.io/belphemur/night-routine:latest\n</code></pre> <pre><code>docker-compose up -d\n</code></pre> <pre><code>export GOOGLE_OAUTH_CLIENT_ID=your-client-id\nexport GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nexport CONFIG_FILE=configs/routine.toml\n./night-routine\n</code></pre> <p>You should see log output indicating the application has started:</p> <pre><code>INF Starting Night Routine Scheduler\nINF Connecting to database file=data/state.db\nINF Web server listening on :8080\n</code></pre>"},{"location":"user-guide/setup/#2-access-the-web-interface","title":"2. Access the Web Interface","text":"<p>Open your web browser and navigate to the configured <code>app_url</code>:</p> <pre><code>http://localhost:8080\n</code></pre> <p>You should see the home page with the \"Connect Google Calendar\" button.</p>"},{"location":"user-guide/setup/#3-connect-to-google-calendar","title":"3. Connect to Google Calendar","text":"<ol> <li>Click the \"Connect Google Calendar\" button on the home page</li> <li>You'll be redirected to Google's OAuth consent screen</li> <li>Select your Google account</li> <li>Review the permissions requested:<ul> <li>See, edit, share, and permanently delete all calendars you can access using Google Calendar</li> <li>View and edit events on all your calendars</li> </ul> </li> <li>Click \"Allow\" to grant permissions</li> </ol> <p>Unverified App Warning</p> <p>If your app is in \"Testing\" status in Google Cloud Console, you'll see a warning. Click \"Advanced\" \u2192 \"Go to Night Routine Scheduler (unsafe)\" to proceed. This is expected for apps in testing mode.</p> <ol> <li>After granting permissions, you'll be automatically redirected back to the application</li> </ol>"},{"location":"user-guide/setup/#4-select-a-calendar","title":"4. Select a Calendar","text":"<p>After authentication, you're redirected to the Calendar Selection page.</p> <ol> <li>Review available calendars - All calendars from your Google account are listed</li> <li>Choose a calendar:<ul> <li>Use your primary calendar, or</li> <li>Create a dedicated \"Night Routine\" calendar in Google Calendar first</li> </ul> </li> <li>Click the calendar you want to use</li> </ol> <p>Dedicated Calendar Recommended</p> <p>We recommend creating a dedicated \"Night Routine\" calendar in Google Calendar to keep these events separate from your other events.</p> <ol> <li>The application will:<ul> <li>Save your calendar selection</li> <li>Set up webhook notifications for real-time updates</li> <li>Return you to the home page</li> </ul> </li> </ol>"},{"location":"user-guide/setup/#5-review-the-initial-schedule","title":"5. Review the Initial Schedule","text":"<p>Back on the home page, you'll see:</p> <ul> <li>Authentication status: \u2705 Connected</li> <li>Monthly calendar view with color-coded assignments:<ul> <li>Blue = Parent A</li> <li>Orange = Parent B</li> <li>Yellow highlight = Today</li> </ul> </li> <li>Assignment details:<ul> <li>Hover over dates (desktop) to see decision reasons</li> <li>Tap dates (mobile) to toggle decision reasons</li> </ul> </li> </ul> <p>The application has automatically:</p> <ul> <li>Generated assignments for the next 30 days (or your configured <code>look_ahead_days</code>)</li> <li>Created events in your Google Calendar</li> <li>Applied the fairness algorithm to ensure equitable distribution</li> </ul>"},{"location":"user-guide/setup/#6-verify-google-calendar-events","title":"6. Verify Google Calendar Events","text":"<ol> <li>Open Google Calendar</li> <li>Check the selected calendar</li> <li> <p>You should see events like:</p> <ul> <li><code>[Parent1] \ud83c\udf03\ud83d\udc76Routine</code></li> <li><code>[Parent2] \ud83c\udf03\ud83d\udc76Routine</code></li> </ul> </li> <li> <p>Click on an event to see:</p> <ul> <li>Title: Parent name with routine emoji</li> <li>All-day event</li> <li>Description: Decision reason (e.g., \"Alternating\", \"Total Count\")</li> </ul> </li> </ol>"},{"location":"user-guide/setup/#initial-configuration-verification","title":"Initial Configuration Verification","text":""},{"location":"user-guide/setup/#check-the-schedule-is-fair","title":"Check the Schedule is Fair","text":"<ol> <li>Click \"View Statistics\" on the home page</li> <li>Review the assignment counts for the current month</li> <li>Verify both parents have similar numbers (should be within 1-2 assignments)</li> </ol>"},{"location":"user-guide/setup/#test-manual-sync","title":"Test Manual Sync","text":"<ol> <li>Click \"Sync Now\" on the home page</li> <li>Wait for the sync to complete</li> <li>Verify the calendar updates (if any changes were made)</li> </ol>"},{"location":"user-guide/setup/#verify-availability-constraints","title":"Verify Availability Constraints","text":"<p>Check that your configured unavailable days are respected:</p> <ol> <li>Look at the calendar view</li> <li>Find days marked as unavailable in your configuration</li> <li>Verify the unavailable parent is never assigned on those days</li> </ol> <p>Example: If Parent A is unavailable on Wednesdays, all Wednesday entries should show Parent B.</p>"},{"location":"user-guide/setup/#common-first-time-issues","title":"Common First-Time Issues","text":""},{"location":"user-guide/setup/#oauth-callback-error-redirect_uri_mismatch","title":"OAuth Callback Error (redirect_uri_mismatch)","text":"<p>Symptom: Error 400 when trying to connect to Google Calendar</p> <p>Cause: OAuth redirect URI doesn't match</p> <p>Solution:</p> <ol> <li>Check your <code>app_url</code> in <code>routine.toml</code></li> <li>Ensure the callback URL <code>&lt;app_url&gt;/oauth/callback</code> is added to Authorized Redirect URIs in Google Cloud Console</li> <li>Restart the application</li> </ol>"},{"location":"user-guide/setup/#no-calendars-available","title":"No Calendars Available","text":"<p>Symptom: Calendar selection page shows no calendars</p> <p>Cause: </p> <ul> <li>OAuth scopes not granted correctly</li> <li>Calendar API not enabled</li> <li>No calendars in the Google account</li> </ul> <p>Solution:</p> <ol> <li>Revoke access and re-authenticate</li> <li>Verify Calendar API is enabled in Google Cloud Console</li> <li>Create a calendar in Google Calendar if none exist</li> </ol>"},{"location":"user-guide/setup/#events-not-appearing-in-google-calendar","title":"Events Not Appearing in Google Calendar","text":"<p>Symptom: Web interface shows assignments but Google Calendar is empty</p> <p>Cause:</p> <ul> <li>Wrong calendar selected</li> <li>Sync hasn't completed</li> <li>Calendar is hidden in Google Calendar view</li> </ul> <p>Solution:</p> <ol> <li>Check which calendar was selected (it's shown on the home page)</li> <li>Click \"Sync Now\" to force a synchronization</li> <li>In Google Calendar, ensure the calendar is visible (check the sidebar)</li> </ol>"},{"location":"user-guide/setup/#database-permission-errors","title":"Database Permission Errors","text":"<p>Symptom: Cannot write to database errors</p> <p>Cause: Insufficient file permissions on the data directory</p> <p>Solution:</p> <pre><code># Ensure the data directory is writable\nchmod 755 data\n\n# Or for Docker\nsudo chown -R 1000:1000 ~/night-routine/data\n</code></pre>"},{"location":"user-guide/setup/#post-setup-configuration","title":"Post-Setup Configuration","text":""},{"location":"user-guide/setup/#adjusting-availability","title":"Adjusting Availability","text":"<p>If you need to change parent availability after setup:</p> <ol> <li> <p>Edit <code>routine.toml</code>:     <pre><code>[availability]\nparent_a_unavailable = [\"Wednesday\", \"Sunday\"]\nparent_b_unavailable = [\"Monday\"]\n</code></pre></p> </li> <li> <p>Restart the application</p> </li> <li> <p>Click \"Sync Now\" to regenerate the schedule</p> </li> </ol>"},{"location":"user-guide/setup/#changing-update-frequency","title":"Changing Update Frequency","text":"<p>To change how often the schedule updates:</p> <ol> <li> <p>Edit <code>routine.toml</code>:     <pre><code>[schedule]\nupdate_frequency = \"weekly\"  # or \"daily\" or \"monthly\"\n</code></pre></p> </li> <li> <p>Restart the application</p> </li> </ol>"},{"location":"user-guide/setup/#switching-calendars","title":"Switching Calendars","text":"<p>To use a different Google Calendar:</p> <ol> <li>Click \"Change Calendar\" on the home page</li> <li>Select a new calendar from the list</li> <li>The application will:<ul> <li>Update all future events to the new calendar</li> <li>Set up webhooks for the new calendar</li> </ul> </li> </ol>"},{"location":"user-guide/setup/#webhook-verification","title":"Webhook Verification","text":"<p>The application sets up webhooks for real-time calendar updates. To verify:</p>"},{"location":"user-guide/setup/#check-webhook-status","title":"Check Webhook Status","text":"<p>Look for log messages indicating webhook setup:</p> <pre><code>INF Setting up calendar notification channel\nINF Notification channel created id=&lt;channel-id&gt;\n</code></pre>"},{"location":"user-guide/setup/#test-webhook-functionality","title":"Test Webhook Functionality","text":"<ol> <li>Go to Google Calendar</li> <li>Edit a night routine event title (e.g., change <code>[Parent1]</code> to <code>[Parent2]</code>)</li> <li>Save the change</li> <li> <p>Check the application logs for webhook processing:     <pre><code>INF Processing calendar change notification\nINF Override detected for date=2024-01-15\n</code></pre></p> </li> <li> <p>Return to the web interface and verify the change is reflected</p> </li> </ol> <p>Webhook Expiration</p> <p>Google Calendar webhooks expire and need renewal. The application automatically manages this, but you may see renewal messages in the logs.</p>"},{"location":"user-guide/setup/#next-steps","title":"Next Steps","text":"<p>Now that you've completed the initial setup:</p> <ul> <li>Learn about the web interface</li> <li>Understand manual overrides</li> <li>Explore all features</li> <li>View architecture details</li> </ul>"},{"location":"user-guide/setup/#getting-help","title":"Getting Help","text":"<p>If you encounter issues:</p> <ol> <li>Check the troubleshooting sections in installation guides</li> <li>Review the logs for error messages</li> <li>Verify your configuration against the examples</li> <li>Open an issue on GitHub with:<ul> <li>Application version</li> <li>Configuration (remove sensitive data)</li> <li>Error messages or logs</li> <li>Steps to reproduce</li> </ul> </li> </ol>"},{"location":"user-guide/web-interface/","title":"Web Interface Guide","text":"<p>The Night Routine Scheduler web interface provides an intuitive way to manage your night routine schedule, view statistics, and control synchronization.</p>"},{"location":"user-guide/web-interface/#home-page","title":"Home Page","text":"<p>The home page (<code>/</code>) is your main dashboard for managing night routine assignments.</p>"},{"location":"user-guide/web-interface/#authentication-status","title":"Authentication Status","text":"<p>At the top of the page, you'll see your connection status:</p> ConnectedNot Connected <pre><code>\u2705 Connected to Google Calendar\n\ud83d\udcc5 Using calendar: Night Routine\n</code></pre> <pre><code>\u274c Not connected to Google Calendar\n[Connect Google Calendar Button]\n</code></pre>"},{"location":"user-guide/web-interface/#visual-monthly-calendar","title":"Visual Monthly Calendar","text":"<p>The centerpiece of the home page is a visual calendar showing the current month's assignments.</p>"},{"location":"user-guide/web-interface/#color-coding","title":"Color Coding","text":"<ul> <li>Blue background - Parent A is assigned</li> <li>Orange background - Parent B is assigned  </li> <li>Yellow border - Today's date</li> <li>Gray background - Days from previous/next month (padding)</li> </ul>"},{"location":"user-guide/web-interface/#assignment-details","title":"Assignment Details","text":"DesktopMobile <p>Hover over any date to see:</p> <ul> <li>Parent name</li> <li>Decision reason (why this parent was assigned)</li> <li>Date</li> </ul> <p>Tap on any date to toggle the decision reason display. Tap again to hide.</p>"},{"location":"user-guide/web-interface/#decision-reasons","title":"Decision Reasons","text":"<p>Each assignment includes a reason explaining why that parent was chosen:</p> Reason Meaning Unavailability The other parent was unavailable on this day Total Count This parent has fewer total assignments Recent Count This parent has had fewer recent assignments Consecutive Limit Prevents too many consecutive assignments Alternating Maintains an alternating pattern Override Manually changed via Google Calendar"},{"location":"user-guide/web-interface/#quick-actions","title":"Quick Actions","text":"<p>The home page provides several action buttons:</p>"},{"location":"user-guide/web-interface/#connect-google-calendar","title":"Connect Google Calendar","text":"<p>When: Not yet authenticated</p> <p>Action: Initiates the OAuth flow to connect your Google account</p> <p>Result: Redirects to Google login, then to calendar selection after authorization</p>"},{"location":"user-guide/web-interface/#change-calendar","title":"Change Calendar","text":"<p>When: Already authenticated</p> <p>Action: Allows you to switch to a different Google Calendar</p> <p>Result: Opens calendar selection page</p>"},{"location":"user-guide/web-interface/#sync-now","title":"Sync Now","text":"<p>When: Authenticated and calendar selected</p> <p>Action: Manually triggers a schedule synchronization</p> <p>Result:</p> <ul> <li>Calculates new assignments based on current fairness state</li> <li>Updates Google Calendar events</li> <li>Refreshes the web interface</li> </ul> <p>Use cases:</p> <ul> <li>After changing configuration</li> <li>To fill in newly available dates</li> <li>After manually modifying events in Google Calendar</li> </ul>"},{"location":"user-guide/web-interface/#view-statistics","title":"View Statistics","text":"<p>When: Authenticated</p> <p>Action: Opens the statistics page</p> <p>Result: Shows monthly assignment counts for the last 12 months</p>"},{"location":"user-guide/web-interface/#calendar-navigation","title":"Calendar Navigation","text":"<p>Use the Previous and Next buttons to navigate between months:</p> <ul> <li>\u2190 Previous - View the previous month</li> <li>Next \u2192 - View the next month</li> </ul> <p>The current month and year are displayed in the center.</p>"},{"location":"user-guide/web-interface/#calendar-selection-page","title":"Calendar Selection Page","text":"<p>The calendar selection page (<code>/calendars</code>) appears after initial authentication or when you click \"Change Calendar\".</p>"},{"location":"user-guide/web-interface/#calendar-list","title":"Calendar List","text":"<p>All calendars from your Google account are displayed:</p> <ul> <li>Primary Calendar - Your main Google Calendar</li> <li>Secondary Calendars - Other calendars you own or have write access to</li> <li>Shared Calendars - Calendars shared with you (if you have write access)</li> </ul>"},{"location":"user-guide/web-interface/#selecting-a-calendar","title":"Selecting a Calendar","text":"<ol> <li>Click on the calendar you want to use</li> <li>The application will:<ul> <li>Save your selection to the database</li> <li>Set up webhook notifications for this calendar</li> <li>Create initial night routine events</li> <li>Redirect you to the home page</li> </ul> </li> </ol>"},{"location":"user-guide/web-interface/#changing-calendars","title":"Changing Calendars","text":"<p>To switch to a different calendar:</p> <ol> <li>From the home page, click \"Change Calendar\"</li> <li>Select a new calendar from the list</li> <li>The application will:<ul> <li>Delete all existing night routine events from the old calendar</li> <li>Create new events in the new calendar</li> <li>Update webhook subscriptions</li> </ul> </li> </ol> <p>Calendar Switch Impact</p> <p>Switching calendars will remove all night routine events from the previous calendar. This action cannot be undone.</p>"},{"location":"user-guide/web-interface/#statistics-page","title":"Statistics Page","text":"<p>The statistics page (<code>/statistics</code>) provides a historical view of assignment distribution.</p>"},{"location":"user-guide/web-interface/#monthly-breakdown","title":"Monthly Breakdown","text":"<p>Displays a table showing:</p> Month Parent A Parent B Total Jan 2024 15 16 31 Feb 2024 14 14 28 ... ... ... ..."},{"location":"user-guide/web-interface/#features","title":"Features","text":"<ul> <li>Last 12 months - Shows up to 12 months of historical data</li> <li>Only assigned months - Months without assignments are hidden</li> <li>Fair distribution verification - Quickly see if assignments are balanced</li> <li>Total counts - Sum of assignments per month</li> </ul>"},{"location":"user-guide/web-interface/#interpreting-statistics","title":"Interpreting Statistics","text":"<p>Balanced distribution: <pre><code>Month     | Parent A | Parent B | Total\n----------|----------|----------|------\nJan 2024  | 15       | 16       | 31\n</code></pre> \u2705 Difference of 1 is normal for odd-day months</p> <p>Imbalanced distribution: <pre><code>Month     | Parent A | Parent B | Total\n----------|----------|----------|------\nJan 2024  | 20       | 11       | 31\n</code></pre> \u26a0\ufe0f Large difference may indicate:</p> <ul> <li>One parent has more unavailable days</li> <li>Manual overrides have skewed the distribution</li> <li>Configuration issues</li> </ul>"},{"location":"user-guide/web-interface/#api-endpoints","title":"API Endpoints","text":"<p>While you typically interact through the web interface, the application also exposes API endpoints.</p>"},{"location":"user-guide/web-interface/#authentication-endpoints","title":"Authentication Endpoints","text":""},{"location":"user-guide/web-interface/#get-auth","title":"<code>GET /auth</code>","text":"<p>Initiates Google OAuth2 flow.</p> <p>Usage: Automatically called when clicking \"Connect Google Calendar\"</p> <p>Response: Redirects to Google OAuth consent screen</p>"},{"location":"user-guide/web-interface/#get-oauthcallback","title":"<code>GET /oauth/callback</code>","text":"<p>OAuth2 callback handler.</p> <p>Usage: Automatic redirect from Google after authentication</p> <p>Response: Redirects to calendar selection page</p>"},{"location":"user-guide/web-interface/#calendar-management","title":"Calendar Management","text":""},{"location":"user-guide/web-interface/#get-calendars","title":"<code>GET /calendars</code>","text":"<p>Lists available Google Calendars and allows selection.</p> <p>Response: HTML page with calendar list</p>"},{"location":"user-guide/web-interface/#post-calendarsselect","title":"<code>POST /calendars/select</code>","text":"<p>Selects a calendar to use for night routine events.</p> <p>Parameters:</p> <ul> <li><code>calendar_id</code> - The Google Calendar ID</li> </ul> <p>Response: Redirects to home page</p>"},{"location":"user-guide/web-interface/#synchronization","title":"Synchronization","text":""},{"location":"user-guide/web-interface/#post-sync","title":"<code>POST /sync</code>","text":"<p>Manually triggers schedule synchronization.</p> <p>Usage: Called when clicking \"Sync Now\" button</p> <p>Response: Redirects back to home page</p>"},{"location":"user-guide/web-interface/#webhooks","title":"Webhooks","text":""},{"location":"user-guide/web-interface/#post-apiwebhookcalendar","title":"<code>POST /api/webhook/calendar</code>","text":"<p>Receives Google Calendar change notifications.</p> <p>Usage: Called automatically by Google Calendar when events change</p> <p>Authentication: Validates Google webhook signature</p> <p>Response: 200 OK on success</p>"},{"location":"user-guide/web-interface/#responsive-design","title":"Responsive Design","text":"<p>The web interface is fully responsive and optimized for different screen sizes.</p>"},{"location":"user-guide/web-interface/#desktop-1024px","title":"Desktop (1024px+)","text":"<ul> <li>Full calendar grid layout</li> <li>Hover tooltips for assignment details</li> <li>Side-by-side action buttons</li> <li>Wide statistics table</li> </ul>"},{"location":"user-guide/web-interface/#tablet-768px-1023px","title":"Tablet (768px - 1023px)","text":"<ul> <li>Adjusted calendar grid</li> <li>Tap-to-toggle assignment details</li> <li>Stacked action buttons</li> <li>Scrollable statistics table</li> </ul>"},{"location":"user-guide/web-interface/#mobile-768px","title":"Mobile (&lt;768px)","text":"<ul> <li>Compact calendar layout</li> <li>Touch-optimized controls</li> <li>Tap to show/hide decision reasons</li> <li>Full-width buttons</li> <li>Simplified navigation</li> </ul>"},{"location":"user-guide/web-interface/#browser-compatibility","title":"Browser Compatibility","text":"<p>The web interface supports modern browsers:</p> <ul> <li>\u2705 Chrome 90+</li> <li>\u2705 Firefox 88+</li> <li>\u2705 Safari 14+</li> <li>\u2705 Edge 90+</li> </ul> <p>Internet Explorer</p> <p>Internet Explorer is not supported. Please use a modern browser.</p>"},{"location":"user-guide/web-interface/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<p>The interface supports basic keyboard navigation:</p> Shortcut Action <code>Tab</code> Navigate between interactive elements <code>Enter</code> Activate buttons/links <code>\u2190</code> / <code>\u2192</code> Navigate calendar months (when focused)"},{"location":"user-guide/web-interface/#accessibility","title":"Accessibility","text":"<p>The interface includes accessibility features:</p> <ul> <li>Semantic HTML - Proper heading structure and landmarks</li> <li>ARIA labels - Screen reader friendly</li> <li>Keyboard navigation - All functions accessible without mouse</li> <li>Color contrast - WCAG AA compliant</li> <li>Focus indicators - Visible focus states</li> </ul>"},{"location":"user-guide/web-interface/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/web-interface/#calendar-not-updating","title":"Calendar Not Updating","text":"<p>Problem: Changes don't appear after clicking \"Sync Now\"</p> <p>Solutions:</p> <ol> <li>Check browser console for errors (F12)</li> <li>Hard refresh the page (Ctrl+F5 or Cmd+Shift+R)</li> <li>Clear browser cache</li> <li>Check application logs for errors</li> </ol>"},{"location":"user-guide/web-interface/#assignment-details-not-showing-mobile","title":"Assignment Details Not Showing (Mobile)","text":"<p>Problem: Tapping dates doesn't show decision reasons</p> <p>Solutions:</p> <ol> <li>Ensure JavaScript is enabled</li> <li>Try tapping directly on the date number</li> <li>Refresh the page</li> <li>Check browser compatibility</li> </ol>"},{"location":"user-guide/web-interface/#webhook-notifications-not-working","title":"Webhook Notifications Not Working","text":"<p>Problem: Manual changes in Google Calendar don't reflect immediately</p> <p>Solutions:</p> <ol> <li>Check application logs for webhook errors</li> <li>Verify <code>public_url</code> is accessible from the internet</li> <li>Test by manually clicking \"Sync Now\"</li> <li>Webhook may need to be renewed (happens automatically)</li> </ol>"},{"location":"user-guide/web-interface/#page-layout-issues","title":"Page Layout Issues","text":"<p>Problem: Calendar layout is broken or overlapping</p> <p>Solutions:</p> <ol> <li>Clear browser cache</li> <li>Disable browser extensions</li> <li>Try a different browser</li> <li>Check browser console for CSS errors</li> </ol>"},{"location":"user-guide/web-interface/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/web-interface/#regular-checks","title":"Regular Checks","text":"<ul> <li>Review the calendar weekly to ensure proper scheduling</li> <li>Check statistics monthly to verify fair distribution</li> <li>Sync manually after configuration changes</li> </ul>"},{"location":"user-guide/web-interface/#calendar-hygiene","title":"Calendar Hygiene","text":"<ul> <li>Don't manually delete night routine events in Google Calendar (change the parent instead)</li> <li>Use the web interface for changing calendars</li> <li>Let automatic sync handle routine updates</li> </ul>"},{"location":"user-guide/web-interface/#performance","title":"Performance","text":"<ul> <li>Minimize frequent manual syncs (let automatic updates handle it)</li> <li>Use statistics page sparingly (it processes historical data)</li> <li>Clear old browser data periodically</li> </ul>"},{"location":"user-guide/web-interface/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about manual overrides</li> <li>Understand the assignment logic</li> <li>Explore all features</li> </ul>"}]}