name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  id-token: write # Required for attestations
  attestations: write # Required for attestations

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - uses: sigstore/cosign-installer@v3 # installs cosign

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # Use github.repository for image name
          tags: |
            type=semver,pattern={{version}} # e.g., v1.0.0
            type=semver,pattern={{major}}.{{minor}} # e.g., v1.0
            type=raw,value=latest,enable={{is_default_branch}} # latest tag on default branch

      - name: Set build date # Generate date string beforehand
        id: build_date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: | # Pass build args to Dockerfile
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
            DATE=${{ steps.build_date.outputs.date }}

      - name: Attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}:${{ github.ref_name }} # Use repository and ref_name
          subject-digest: ${{ steps.build-push.outputs.digest }} # Use digest from build-push step
          push-to-registry: true

      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "1" # Enable keyless signing
        run: |
          IMAGE_DIGEST=$(echo '${{ steps.build-push.outputs.digest }}' | sed 's/sha256://')
          IMAGE_URI="ghcr.io/${{ github.repository }}@sha256:$IMAGE_DIGEST"
          echo "Signing $IMAGE_URI"
          cosign sign --yes "$IMAGE_URI"

      - name: Run GoReleaser (Checksum, SBOM, Sign Checksum)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          # Skip Docker build/push and GitHub release publication
          # It will still build binary (needed for archive), archive, checksum, sbom, sign, publish (checksum)
          args: release --clean --skip=docker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # COSIGN_EXPERIMENTAL is needed for GoReleaser's 'signs' section too
          COSIGN_EXPERIMENTAL: "1"
          # Pass the build date to GoReleaser
          BUILD_DATE: ${{ steps.build_date.outputs.date }}
